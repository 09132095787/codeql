// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.AstNode
import codeql.swift.elements.decl.Decl

module Generated {
  class IfConfigDecl extends Synth::TIfConfigDecl, Decl {
    override string getAPrimaryQlClass() { result = "IfConfigDecl" }

    /**
     * Gets the `index`th active element.
     * This is taken from the "hidden" AST and should only be used to be overridden by classes.
     */
    AstNode getImmediateActiveElement(int index) {
      result =
        Synth::convertAstNodeFromRaw(Synth::convertIfConfigDeclToRaw(this)
              .(Raw::IfConfigDecl)
              .getActiveElement(index))
    }

    /**
     * Gets the `index`th active element.
     */
    final AstNode getActiveElement(int index) {
      result = getImmediateActiveElement(index).resolve()
    }

    /**
     * Gets any of the active elements.
     */
    final AstNode getAnActiveElement() { result = getActiveElement(_) }

    /**
     * Gets the number of active elements.
     */
    final int getNumberOfActiveElements() { result = count(getAnActiveElement()) }
  }
}
