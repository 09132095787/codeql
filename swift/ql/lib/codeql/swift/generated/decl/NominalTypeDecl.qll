// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.decl.GenericTypeDecl
import codeql.swift.elements.decl.IterableDeclContext
import codeql.swift.elements.type.Type

module Generated {
  class NominalTypeDecl extends Synth::TNominalTypeDecl, GenericTypeDecl, IterableDeclContext {
    /**
     * Gets the type.
     * This includes nodes from the "hidden" AST and can be used to be overridden by subclasses.
     */
    Type getImmediateType() {
      result =
        Synth::convertTypeFromRaw(Synth::convertNominalTypeDeclToRaw(this)
              .(Raw::NominalTypeDecl)
              .getType())
    }

    /**
     * Gets the type.
     */
    final Type getType() { result = getImmediateType().resolve() }
  }
}
