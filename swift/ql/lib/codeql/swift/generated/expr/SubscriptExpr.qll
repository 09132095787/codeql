// generated by codegen/codegen.py
private import codeql.swift.generated.IpaTypes
private import codeql.swift.generated.Db
import codeql.swift.elements.expr.Argument
import codeql.swift.elements.expr.LookupExpr

class SubscriptExprBase extends Cached::TSubscriptExpr, LookupExpr {
  final override Db::SubscriptExpr asDbInstance() { this = Cached::TSubscriptExpr(result) }

  override string getAPrimaryQlClass() { result = "SubscriptExpr" }

  Argument getImmediateArgument(int index) {
    result = Cached::fromDbInstance(asDbInstance().(Db::SubscriptExpr).getArgument(index))
  }

  final Argument getArgument(int index) { result = getImmediateArgument(index).resolve() }

  final Argument getAnArgument() { result = getArgument(_) }

  final int getNumberOfArguments() { result = count(getAnArgument()) }

  predicate hasDirectToStorageSemantics() {
    asDbInstance().(Db::SubscriptExpr).hasDirectToStorageSemantics()
  }

  predicate hasDirectToImplementationSemantics() {
    asDbInstance().(Db::SubscriptExpr).hasDirectToImplementationSemantics()
  }

  predicate hasOrdinarySemantics() { asDbInstance().(Db::SubscriptExpr).hasOrdinarySemantics() }
}
