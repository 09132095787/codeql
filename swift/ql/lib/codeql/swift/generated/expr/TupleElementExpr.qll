// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.expr.Expr

module Generated {
  class TupleElementExpr extends Synth::TTupleElementExpr, Expr {
    override string getAPrimaryQlClass() { result = "TupleElementExpr" }

    /**
     * Gets the sub expr.
     * This is taken from the "hidden" AST and should only be used to be overridden by classes.
     */
    Expr getImmediateSubExpr() {
      result =
        Synth::convertExprFromRaw(Synth::convertTupleElementExprToRaw(this)
              .(Raw::TupleElementExpr)
              .getSubExpr())
    }

    /**
     * Gets the sub expr.
     */
    final Expr getSubExpr() { result = getImmediateSubExpr().resolve() }

    /**
     * Gets the index.
     */
    int getIndex() {
      result = Synth::convertTupleElementExprToRaw(this).(Raw::TupleElementExpr).getIndex()
    }
  }
}
