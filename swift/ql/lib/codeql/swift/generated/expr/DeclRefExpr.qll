// generated by codegen/codegen.py
private import codeql.swift.generated.IpaTypes
private import codeql.swift.generated.Db
import codeql.swift.elements.decl.Decl
import codeql.swift.elements.expr.Expr
import codeql.swift.elements.type.Type

class DeclRefExprBase extends Cached::TDeclRefExpr, Expr {
  final override Db::DeclRefExpr asDbInstance() { this = Cached::TDeclRefExpr(result) }

  override string getAPrimaryQlClass() { result = "DeclRefExpr" }

  Decl getImmediateDecl() {
    result = Cached::fromDbInstance(asDbInstance().(Db::DeclRefExpr).getDecl())
  }

  final Decl getDecl() { result = getImmediateDecl().resolve() }

  Type getImmediateReplacementType(int index) {
    result = Cached::fromDbInstance(asDbInstance().(Db::DeclRefExpr).getReplacementType(index))
  }

  final Type getReplacementType(int index) { result = getImmediateReplacementType(index).resolve() }

  final Type getAReplacementType() { result = getReplacementType(_) }

  final int getNumberOfReplacementTypes() { result = count(getAReplacementType()) }

  predicate hasDirectToStorageSemantics() {
    asDbInstance().(Db::DeclRefExpr).hasDirectToStorageSemantics()
  }

  predicate hasDirectToImplementationSemantics() {
    asDbInstance().(Db::DeclRefExpr).hasDirectToImplementationSemantics()
  }

  predicate hasOrdinarySemantics() { asDbInstance().(Db::DeclRefExpr).hasOrdinarySemantics() }
}
