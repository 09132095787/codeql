// generated by codegen/codegen.py
private import codeql.swift.generated.IpaTypes
private import codeql.swift.generated.Db
import codeql.swift.elements.expr.Argument
import codeql.swift.elements.expr.Expr

class ApplyExprBase extends Ipa::TApplyExpr, Expr {
  Expr getImmediateFunction() {
    result = Ipa::convertExprFromDb(Ipa::convertApplyExprToDb(this).(Db::ApplyExpr).getFunction())
  }

  final Expr getFunction() { result = getImmediateFunction().resolve() }

  Argument getImmediateArgument(int index) {
    result =
      Ipa::convertArgumentFromDb(Ipa::convertApplyExprToDb(this).(Db::ApplyExpr).getArgument(index))
  }

  final Argument getArgument(int index) { result = getImmediateArgument(index).resolve() }

  final Argument getAnArgument() { result = getArgument(_) }

  final int getNumberOfArguments() { result = count(getAnArgument()) }
}
