// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.decl.EnumElementDecl
import codeql.swift.elements.pattern.Pattern

class EnumElementPatternBase extends Synth::TEnumElementPattern, Pattern {
  override string getAPrimaryQlClass() { result = "EnumElementPattern" }

  EnumElementDecl getImmediateElement() {
    result =
      Synth::fromRawEnumElementDecl(Synth::toRawEnumElementPattern(this)
            .(Raw::EnumElementPattern)
            .getElement())
  }

  final EnumElementDecl getElement() { result = getImmediateElement().resolve() }

  Pattern getImmediateSubPattern() {
    result =
      Synth::fromRawPattern(Synth::toRawEnumElementPattern(this)
            .(Raw::EnumElementPattern)
            .getSubPattern())
  }

  final Pattern getSubPattern() { result = getImmediateSubPattern().resolve() }

  final predicate hasSubPattern() { exists(getSubPattern()) }
}
