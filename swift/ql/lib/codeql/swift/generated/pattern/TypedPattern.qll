// generated by codegen/codegen.py
private import codeql.swift.generated.IpaTypes
private import codeql.swift.generated.Db
import codeql.swift.elements.pattern.Pattern
import codeql.swift.elements.type.TypeRepr

class TypedPatternBase extends Cached::TTypedPattern, Pattern {
  final override Db::TypedPattern asDbInstance() { this = Cached::TTypedPattern(result) }

  override string getAPrimaryQlClass() { result = "TypedPattern" }

  Pattern getImmediateSubPattern() {
    result = Cached::fromDbInstance(asDbInstance().(Db::TypedPattern).getSubPattern())
  }

  final Pattern getSubPattern() { result = getImmediateSubPattern().resolve() }

  TypeRepr getImmediateTypeRepr() {
    result = Cached::fromDbInstance(asDbInstance().(Db::TypedPattern).getTypeRepr())
  }

  final TypeRepr getTypeRepr() { result = getImmediateTypeRepr().resolve() }

  final predicate hasTypeRepr() { exists(getTypeRepr()) }
}
