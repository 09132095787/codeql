// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.pattern.Pattern

module Generated {
  class TuplePattern extends Synth::TTuplePattern, Pattern {
    override string getAPrimaryQlClass() { result = "TuplePattern" }

    /**
     * Gets the `index`th element (0-based).
     * This includes nodes from the "hidden" AST and can be used to be overridden by subclasses.
     */
    Pattern getImmediateElement(int index) {
      result =
        Synth::convertPatternFromRaw(Synth::convertTuplePatternToRaw(this)
              .(Raw::TuplePattern)
              .getElement(index))
    }

    /**
     * Gets the `index`th element (0-based).
     */
    final Pattern getElement(int index) { result = getImmediateElement(index).resolve() }

    /**
     * Gets any of the elements.
     */
    final Pattern getAnElement() { result = getElement(_) }

    /**
     * Gets the number of elements.
     */
    final int getNumberOfElements() { result = count(getAnElement()) }
  }
}
