// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.type.SyntaxSugarType
import codeql.swift.elements.type.Type

module Generated {
  class DictionaryType extends Synth::TDictionaryType, SyntaxSugarType {
    override string getAPrimaryQlClass() { result = "DictionaryType" }

    /**
     * Gets the key type.
     * This includes nodes from the "hidden" AST and can be used to be overridden by subclasses.
     */
    Type getImmediateKeyType() {
      result =
        Synth::convertTypeFromRaw(Synth::convertDictionaryTypeToRaw(this)
              .(Raw::DictionaryType)
              .getKeyType())
    }

    /**
     * Gets the key type.
     */
    final Type getKeyType() { result = getImmediateKeyType().resolve() }

    /**
     * Gets the value type.
     * This includes nodes from the "hidden" AST and can be used to be overridden by subclasses.
     */
    Type getImmediateValueType() {
      result =
        Synth::convertTypeFromRaw(Synth::convertDictionaryTypeToRaw(this)
              .(Raw::DictionaryType)
              .getValueType())
    }

    /**
     * Gets the value type.
     */
    final Type getValueType() { result = getImmediateValueType().resolve() }
  }
}
