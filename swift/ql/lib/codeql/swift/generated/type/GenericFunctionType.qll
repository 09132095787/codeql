// generated by codegen/codegen.py
private import codeql.swift.generated.IpaTypes
private import codeql.swift.generated.Db
import codeql.swift.elements.type.AnyFunctionType
import codeql.swift.elements.type.GenericTypeParamType

class GenericFunctionTypeBase extends Cached::TGenericFunctionType, AnyFunctionType {
  final override Db::GenericFunctionType asDbInstance() {
    this = Cached::TGenericFunctionType(result)
  }

  override string getAPrimaryQlClass() { result = "GenericFunctionType" }

  GenericTypeParamType getImmediateGenericParam(int index) {
    result = Cached::fromDbInstance(asDbInstance().(Db::GenericFunctionType).getGenericParam(index))
  }

  final GenericTypeParamType getGenericParam(int index) {
    result = getImmediateGenericParam(index).resolve()
  }

  final GenericTypeParamType getAGenericParam() { result = getGenericParam(_) }

  final int getNumberOfGenericParams() { result = count(getAGenericParam()) }
}
