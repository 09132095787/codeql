// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Db
import codeql.swift.elements.decl.Decl
import codeql.swift.elements.type.Type

class AnyGenericTypeBase extends Synth::TAnyGenericType, Type {
  Type getImmediateParent() {
    result =
      Synth::convertTypeFromDb(Synth::convertAnyGenericTypeToDb(this)
            .(Db::AnyGenericType)
            .getParent())
  }

  final Type getParent() { result = getImmediateParent().resolve() }

  final predicate hasParent() { exists(getParent()) }

  Decl getImmediateDeclaration() {
    result =
      Synth::convertDeclFromDb(Synth::convertAnyGenericTypeToDb(this)
            .(Db::AnyGenericType)
            .getDeclaration())
  }

  final Decl getDeclaration() { result = getImmediateDeclaration().resolve() }
}
