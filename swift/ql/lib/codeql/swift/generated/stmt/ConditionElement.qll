// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Db
import codeql.swift.elements.expr.Expr
import codeql.swift.elements.Locatable
import codeql.swift.elements.pattern.Pattern

class ConditionElementBase extends Synth::TConditionElement, Locatable {
  override string getAPrimaryQlClass() { result = "ConditionElement" }

  Expr getImmediateBoolean() {
    result =
      Synth::convertExprFromDb(Synth::convertConditionElementToDb(this)
            .(Db::ConditionElement)
            .getBoolean())
  }

  final Expr getBoolean() { result = getImmediateBoolean().resolve() }

  final predicate hasBoolean() { exists(getBoolean()) }

  Pattern getImmediatePattern() {
    result =
      Synth::convertPatternFromDb(Synth::convertConditionElementToDb(this)
            .(Db::ConditionElement)
            .getPattern())
  }

  final Pattern getPattern() { result = getImmediatePattern().resolve() }

  final predicate hasPattern() { exists(getPattern()) }

  Expr getImmediateInitializer() {
    result =
      Synth::convertExprFromDb(Synth::convertConditionElementToDb(this)
            .(Db::ConditionElement)
            .getInitializer())
  }

  final Expr getInitializer() { result = getImmediateInitializer().resolve() }

  final predicate hasInitializer() { exists(getInitializer()) }
}
