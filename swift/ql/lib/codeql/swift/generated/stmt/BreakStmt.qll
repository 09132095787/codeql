// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.stmt.Stmt

module Generated {
  class BreakStmt extends Synth::TBreakStmt, Stmt {
    override string getAPrimaryQlClass() { result = "BreakStmt" }

    /**
     * Gets the target name, if it exists.
     */
    string getTargetName() {
      result = Synth::convertBreakStmtToRaw(this).(Raw::BreakStmt).getTargetName()
    }

    /**
     * Holds if `getTargetName()` exists.
     */
    final predicate hasTargetName() { exists(getTargetName()) }

    /**
     * Gets the target, if it exists.
     * This is taken from the "hidden" AST and should only be used to be overridden by classes.
     */
    Stmt getImmediateTarget() {
      result =
        Synth::convertStmtFromRaw(Synth::convertBreakStmtToRaw(this).(Raw::BreakStmt).getTarget())
    }

    /**
     * Gets the target, if it exists.
     */
    final Stmt getTarget() { result = getImmediateTarget().resolve() }

    /**
     * Holds if `getTarget()` exists.
     */
    final predicate hasTarget() { exists(getTarget()) }
  }
}
