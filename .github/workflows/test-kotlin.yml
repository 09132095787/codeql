# This is a basic workflow to help you get started with Actions

name: Kotlin Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the kotlin branch
  push:
    branches: [ kotlin ]
  pull_request:
    branches: [ kotlin ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout semmle-code
        uses: actions/checkout@v2
        with:
          ref: kotlin
          submodules: recursive
          fetch-depth: 1
          lfs: true
          repository: github/semmle-code
          token: ${{ secrets.CI_TOKEN }}

      - name: Checkout codeql-kotlin
        shell: bash
        working-directory: ql
        env:
          QL_SUBMODULE_SHA: '${{ github.ref }}'
        run: |
          git remote set-url origin git@github.com:github/codeql-kotlin.git
          git fetch --depth=1 origin "$QL_SUBMODULE_SHA"
          git checkout FETCH_HEAD
          # needed so that `git describe --all` works during the build
          git tag "custom-qlSubmoduleSha-${QL_SUBMODULE_SHA}"

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            5.0.303
            5.0.404
            6.0.101

      - name: Prepare - Linux
        uses: ./.github/actions/prepare-linux

      - name: Build - Unit tests
        shell: bash
        run: |
          ./build -j2 target/test/java/results.xml TESTSUITE_FLAGS+=ql/java/ql/test/kotlin 'TESTSUITE_FLAGS+=#'

      - name: Build - Integration tests - Posix
        shell: bash
        run: |
          ./build -j2 target/test/codeql-integration-tests/results.xml 'LANG_TESTSUITE_FLAGS+=--test-dir integration-tests/posix-only/kotlin'

      - name: Build - Integration tests - Linux
        shell: bash
        run: |
          ./build -j2 target/test/codeql-integration-tests/results.xml 'LANG_TESTSUITE_FLAGS+=--test-dir integration-tests/linux-only/kotlin'
