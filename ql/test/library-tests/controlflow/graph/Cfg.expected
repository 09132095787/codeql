nodes
| exit.rb:1:1:6:3 | enter m1 |
| exit.rb:1:1:6:3 | exit m1 |
| exit.rb:1:1:6:3 | exit m1 (abnormal) |
| exit.rb:1:1:6:3 | exit m1 (normal) |
| exit.rb:2:3:4:5 | If |
| exit.rb:2:6:2:6 | x |
| exit.rb:2:6:2:10 | Binary |
| exit.rb:2:10:2:10 | 2 |
| exit.rb:3:5:3:8 | exit |
| exit.rb:3:5:3:10 | MethodCall |
| exit.rb:3:10:3:10 | 1 |
| exit.rb:5:3:5:6 | puts |
| exit.rb:5:3:5:15 | MethodCall |
| exit.rb:5:8:5:15 | String |
| exit.rb:8:1:13:3 | enter m2 |
| exit.rb:8:1:13:3 | exit m2 |
| exit.rb:8:1:13:3 | exit m2 (abnormal) |
| exit.rb:8:1:13:3 | exit m2 (normal) |
| exit.rb:9:3:11:5 | If |
| exit.rb:9:6:9:6 | x |
| exit.rb:9:6:9:10 | Binary |
| exit.rb:9:10:9:10 | 2 |
| exit.rb:10:5:10:9 | abort |
| exit.rb:10:5:10:18 | MethodCall |
| exit.rb:10:11:10:18 | String |
| exit.rb:12:3:12:6 | puts |
| exit.rb:12:3:12:15 | MethodCall |
| exit.rb:12:8:12:15 | String |
| ifs.rb:1:1:9:3 | enter m1 |
| ifs.rb:1:1:9:3 | exit m1 |
| ifs.rb:1:1:9:3 | exit m1 (normal) |
| ifs.rb:2:3:8:5 | If |
| ifs.rb:2:6:2:6 | x |
| ifs.rb:2:6:2:10 | Binary |
| ifs.rb:2:10:2:10 | 2 |
| ifs.rb:3:5:3:8 | puts |
| ifs.rb:3:5:3:30 | MethodCall |
| ifs.rb:3:10:3:30 | String |
| ifs.rb:4:3:7:35 | Elsif |
| ifs.rb:4:9:4:9 | x |
| ifs.rb:4:9:4:14 | Binary |
| ifs.rb:4:9:4:24 | [false] Binary |
| ifs.rb:4:9:4:24 | [true] Binary |
| ifs.rb:4:9:4:38 | [false] Binary |
| ifs.rb:4:9:4:38 | [true] Binary |
| ifs.rb:4:14:4:14 | 2 |
| ifs.rb:4:20:4:20 | x |
| ifs.rb:4:20:4:24 | Binary |
| ifs.rb:4:24:4:24 | 0 |
| ifs.rb:4:30:4:38 | [false] Unary |
| ifs.rb:4:30:4:38 | [true] Unary |
| ifs.rb:4:31:4:38 | [false] ParenthesizedStatements |
| ifs.rb:4:31:4:38 | [true] ParenthesizedStatements |
| ifs.rb:4:32:4:32 | x |
| ifs.rb:4:32:4:37 | Binary |
| ifs.rb:4:37:4:37 | 5 |
| ifs.rb:5:5:5:8 | puts |
| ifs.rb:5:5:5:17 | MethodCall |
| ifs.rb:5:10:5:17 | String |
| ifs.rb:7:5:7:8 | puts |
| ifs.rb:7:5:7:35 | MethodCall |
| ifs.rb:7:10:7:35 | String |
| ifs.rb:11:1:16:3 | enter m2 |
| ifs.rb:11:1:16:3 | exit m2 |
| ifs.rb:11:1:16:3 | exit m2 (normal) |
| ifs.rb:12:3:14:5 | If |
| ifs.rb:12:6:12:6 | b |
| ifs.rb:13:5:13:12 | Return |
| ifs.rb:13:12:13:12 | 0 |
| ifs.rb:15:3:15:10 | Return |
| ifs.rb:15:10:15:10 | 1 |
| ifs.rb:18:1:26:3 | enter m3 |
| ifs.rb:18:1:26:3 | exit m3 |
| ifs.rb:18:1:26:3 | exit m3 (normal) |
| ifs.rb:19:3:24:5 | If |
| ifs.rb:19:6:19:6 | x |
| ifs.rb:19:6:19:10 | Binary |
| ifs.rb:19:10:19:10 | 0 |
| ifs.rb:20:5:20:5 | x |
| ifs.rb:20:5:20:10 | Assignment |
| ifs.rb:20:9:20:10 | Unary |
| ifs.rb:20:10:20:10 | x |
| ifs.rb:21:5:23:7 | If |
| ifs.rb:21:8:21:8 | x |
| ifs.rb:21:8:21:13 | Binary |
| ifs.rb:21:12:21:13 | 10 |
| ifs.rb:22:7:22:7 | x |
| ifs.rb:22:7:22:15 | Assignment |
| ifs.rb:22:11:22:11 | x |
| ifs.rb:22:11:22:15 | Binary |
| ifs.rb:22:15:22:15 | 1 |
| ifs.rb:25:3:25:6 | puts |
| ifs.rb:25:3:25:8 | MethodCall |
| ifs.rb:25:8:25:8 | x |
| loops.rb:1:1:6:3 | enter m1 |
| loops.rb:1:1:6:3 | exit m1 |
| loops.rb:1:1:6:3 | exit m1 (normal) |
| loops.rb:2:3:5:5 | While |
| loops.rb:2:9:2:9 | x |
| loops.rb:2:9:2:14 | Binary |
| loops.rb:2:14:2:14 | 0 |
| loops.rb:3:5:3:8 | puts |
| loops.rb:3:5:3:10 | MethodCall |
| loops.rb:3:10:3:10 | x |
| loops.rb:4:5:4:5 | x |
| loops.rb:4:5:4:10 | OperatorAssignment |
| loops.rb:4:10:4:10 | 1 |
| loops.rb:8:1:22:3 | enter m2 |
| loops.rb:8:1:22:3 | exit m2 |
| loops.rb:8:1:22:3 | exit m2 (normal) |
| loops.rb:9:3:20:5 | While |
| loops.rb:9:9:9:9 | x |
| loops.rb:9:9:9:14 | Binary |
| loops.rb:9:14:9:14 | 0 |
| loops.rb:10:5:10:8 | puts |
| loops.rb:10:5:10:10 | MethodCall |
| loops.rb:10:10:10:10 | x |
| loops.rb:11:5:11:5 | x |
| loops.rb:11:5:11:10 | OperatorAssignment |
| loops.rb:11:10:11:10 | 1 |
| loops.rb:12:5:18:7 | If |
| loops.rb:12:8:12:8 | x |
| loops.rb:12:8:12:14 | Binary |
| loops.rb:12:12:12:14 | 100 |
| loops.rb:13:7:13:11 | Break |
| loops.rb:14:5:17:10 | Elsif |
| loops.rb:14:11:14:11 | x |
| loops.rb:14:11:14:16 | Binary |
| loops.rb:14:15:14:16 | 50 |
| loops.rb:15:7:15:10 | Next |
| loops.rb:16:5:17:10 | Elsif |
| loops.rb:16:11:16:11 | x |
| loops.rb:16:11:16:16 | Binary |
| loops.rb:16:15:16:16 | 10 |
| loops.rb:17:7:17:10 | Redo |
| loops.rb:19:5:19:8 | puts |
| loops.rb:19:5:19:15 | MethodCall |
| loops.rb:19:10:19:15 | String |
| loops.rb:21:3:21:6 | puts |
| loops.rb:21:3:21:13 | MethodCall |
| loops.rb:21:8:21:13 | String |
| loops.rb:24:1:28:3 | enter m3 |
| loops.rb:24:1:28:3 | exit m3 |
| loops.rb:24:1:28:3 | exit m3 (normal) |
| loops.rb:25:3:25:9 | Array |
| loops.rb:25:3:25:14 | Call |
| loops.rb:25:3:27:5 | MethodCall |
| loops.rb:25:4:25:4 | 1 |
| loops.rb:25:6:25:6 | 2 |
| loops.rb:25:8:25:8 | 3 |
| loops.rb:25:11:25:14 | each |
| loops.rb:25:16:27:5 | enter do block |
| loops.rb:25:16:27:5 | exit do block |
| loops.rb:25:16:27:5 | exit do block (normal) |
| loops.rb:26:5:26:8 | puts |
| loops.rb:26:5:26:10 | MethodCall |
| loops.rb:26:10:26:10 | x |
| raise.rb:1:1:6:3 | enter m1 |
| raise.rb:1:1:6:3 | exit m1 |
| raise.rb:1:1:6:3 | exit m1 (abnormal) |
| raise.rb:1:1:6:3 | exit m1 (normal) |
| raise.rb:2:3:4:5 | If |
| raise.rb:2:6:2:6 | x |
| raise.rb:2:6:2:10 | Binary |
| raise.rb:2:10:2:10 | 2 |
| raise.rb:3:5:3:9 | raise |
| raise.rb:3:5:3:17 | MethodCall |
| raise.rb:3:11:3:17 | String |
| raise.rb:5:3:5:6 | puts |
| raise.rb:5:3:5:15 | MethodCall |
| raise.rb:5:8:5:15 | String |
edges
| exit.rb:1:1:6:3 | enter m1 | exit.rb:2:3:4:5 | If | semmle.label | successor |
| exit.rb:1:1:6:3 | exit m1 (abnormal) | exit.rb:1:1:6:3 | exit m1 | semmle.label | successor |
| exit.rb:1:1:6:3 | exit m1 (normal) | exit.rb:1:1:6:3 | exit m1 | semmle.label | successor |
| exit.rb:2:3:4:5 | If | exit.rb:2:6:2:6 | x | semmle.label | successor |
| exit.rb:2:6:2:6 | x | exit.rb:2:10:2:10 | 2 | semmle.label | successor |
| exit.rb:2:6:2:10 | Binary | exit.rb:3:10:3:10 | 1 | semmle.label | true |
| exit.rb:2:6:2:10 | Binary | exit.rb:5:8:5:15 | String | semmle.label | false |
| exit.rb:2:10:2:10 | 2 | exit.rb:2:6:2:10 | Binary | semmle.label | successor |
| exit.rb:3:5:3:8 | exit | exit.rb:3:5:3:10 | MethodCall | semmle.label | successor |
| exit.rb:3:5:3:10 | MethodCall | exit.rb:1:1:6:3 | exit m1 (abnormal) | semmle.label | exit |
| exit.rb:3:10:3:10 | 1 | exit.rb:3:5:3:8 | exit | semmle.label | successor |
| exit.rb:5:3:5:6 | puts | exit.rb:5:3:5:15 | MethodCall | semmle.label | successor |
| exit.rb:5:3:5:15 | MethodCall | exit.rb:1:1:6:3 | exit m1 (normal) | semmle.label | successor |
| exit.rb:5:8:5:15 | String | exit.rb:5:3:5:6 | puts | semmle.label | successor |
| exit.rb:8:1:13:3 | enter m2 | exit.rb:9:3:11:5 | If | semmle.label | successor |
| exit.rb:8:1:13:3 | exit m2 (abnormal) | exit.rb:8:1:13:3 | exit m2 | semmle.label | successor |
| exit.rb:8:1:13:3 | exit m2 (normal) | exit.rb:8:1:13:3 | exit m2 | semmle.label | successor |
| exit.rb:9:3:11:5 | If | exit.rb:9:6:9:6 | x | semmle.label | successor |
| exit.rb:9:6:9:6 | x | exit.rb:9:10:9:10 | 2 | semmle.label | successor |
| exit.rb:9:6:9:10 | Binary | exit.rb:10:11:10:18 | String | semmle.label | true |
| exit.rb:9:6:9:10 | Binary | exit.rb:12:8:12:15 | String | semmle.label | false |
| exit.rb:9:10:9:10 | 2 | exit.rb:9:6:9:10 | Binary | semmle.label | successor |
| exit.rb:10:5:10:9 | abort | exit.rb:10:5:10:18 | MethodCall | semmle.label | successor |
| exit.rb:10:5:10:18 | MethodCall | exit.rb:8:1:13:3 | exit m2 (abnormal) | semmle.label | exit |
| exit.rb:10:11:10:18 | String | exit.rb:10:5:10:9 | abort | semmle.label | successor |
| exit.rb:12:3:12:6 | puts | exit.rb:12:3:12:15 | MethodCall | semmle.label | successor |
| exit.rb:12:3:12:15 | MethodCall | exit.rb:8:1:13:3 | exit m2 (normal) | semmle.label | successor |
| exit.rb:12:8:12:15 | String | exit.rb:12:3:12:6 | puts | semmle.label | successor |
| ifs.rb:1:1:9:3 | enter m1 | ifs.rb:2:3:8:5 | If | semmle.label | successor |
| ifs.rb:1:1:9:3 | exit m1 (normal) | ifs.rb:1:1:9:3 | exit m1 | semmle.label | successor |
| ifs.rb:2:3:8:5 | If | ifs.rb:2:6:2:6 | x | semmle.label | successor |
| ifs.rb:2:6:2:6 | x | ifs.rb:2:10:2:10 | 2 | semmle.label | successor |
| ifs.rb:2:6:2:10 | Binary | ifs.rb:3:10:3:30 | String | semmle.label | true |
| ifs.rb:2:6:2:10 | Binary | ifs.rb:4:3:7:35 | Elsif | semmle.label | false |
| ifs.rb:2:10:2:10 | 2 | ifs.rb:2:6:2:10 | Binary | semmle.label | successor |
| ifs.rb:3:5:3:8 | puts | ifs.rb:3:5:3:30 | MethodCall | semmle.label | successor |
| ifs.rb:3:5:3:30 | MethodCall | ifs.rb:1:1:9:3 | exit m1 (normal) | semmle.label | successor |
| ifs.rb:3:10:3:30 | String | ifs.rb:3:5:3:8 | puts | semmle.label | successor |
| ifs.rb:4:3:7:35 | Elsif | ifs.rb:4:9:4:9 | x | semmle.label | successor |
| ifs.rb:4:9:4:9 | x | ifs.rb:4:14:4:14 | 2 | semmle.label | successor |
| ifs.rb:4:9:4:14 | Binary | ifs.rb:4:9:4:24 | [false] Binary | semmle.label | false |
| ifs.rb:4:9:4:14 | Binary | ifs.rb:4:20:4:20 | x | semmle.label | true |
| ifs.rb:4:9:4:24 | [false] Binary | ifs.rb:4:9:4:38 | [false] Binary | semmle.label | false |
| ifs.rb:4:9:4:24 | [true] Binary | ifs.rb:4:32:4:32 | x | semmle.label | true |
| ifs.rb:4:9:4:38 | [false] Binary | ifs.rb:7:10:7:35 | String | semmle.label | false |
| ifs.rb:4:9:4:38 | [true] Binary | ifs.rb:5:10:5:17 | String | semmle.label | true |
| ifs.rb:4:14:4:14 | 2 | ifs.rb:4:9:4:14 | Binary | semmle.label | successor |
| ifs.rb:4:20:4:20 | x | ifs.rb:4:24:4:24 | 0 | semmle.label | successor |
| ifs.rb:4:20:4:24 | Binary | ifs.rb:4:9:4:24 | [false] Binary | semmle.label | false |
| ifs.rb:4:20:4:24 | Binary | ifs.rb:4:9:4:24 | [true] Binary | semmle.label | true |
| ifs.rb:4:24:4:24 | 0 | ifs.rb:4:20:4:24 | Binary | semmle.label | successor |
| ifs.rb:4:30:4:38 | [false] Unary | ifs.rb:4:9:4:38 | [false] Binary | semmle.label | false |
| ifs.rb:4:30:4:38 | [true] Unary | ifs.rb:4:9:4:38 | [true] Binary | semmle.label | true |
| ifs.rb:4:31:4:38 | [false] ParenthesizedStatements | ifs.rb:4:30:4:38 | [true] Unary | semmle.label | false |
| ifs.rb:4:31:4:38 | [true] ParenthesizedStatements | ifs.rb:4:30:4:38 | [false] Unary | semmle.label | true |
| ifs.rb:4:32:4:32 | x | ifs.rb:4:37:4:37 | 5 | semmle.label | successor |
| ifs.rb:4:32:4:37 | Binary | ifs.rb:4:31:4:38 | [false] ParenthesizedStatements | semmle.label | false |
| ifs.rb:4:32:4:37 | Binary | ifs.rb:4:31:4:38 | [true] ParenthesizedStatements | semmle.label | true |
| ifs.rb:4:37:4:37 | 5 | ifs.rb:4:32:4:37 | Binary | semmle.label | successor |
| ifs.rb:5:5:5:8 | puts | ifs.rb:5:5:5:17 | MethodCall | semmle.label | successor |
| ifs.rb:5:5:5:17 | MethodCall | ifs.rb:1:1:9:3 | exit m1 (normal) | semmle.label | successor |
| ifs.rb:5:10:5:17 | String | ifs.rb:5:5:5:8 | puts | semmle.label | successor |
| ifs.rb:7:5:7:8 | puts | ifs.rb:7:5:7:35 | MethodCall | semmle.label | successor |
| ifs.rb:7:5:7:35 | MethodCall | ifs.rb:1:1:9:3 | exit m1 (normal) | semmle.label | successor |
| ifs.rb:7:10:7:35 | String | ifs.rb:7:5:7:8 | puts | semmle.label | successor |
| ifs.rb:11:1:16:3 | enter m2 | ifs.rb:12:3:14:5 | If | semmle.label | successor |
| ifs.rb:11:1:16:3 | exit m2 (normal) | ifs.rb:11:1:16:3 | exit m2 | semmle.label | successor |
| ifs.rb:12:3:14:5 | If | ifs.rb:12:6:12:6 | b | semmle.label | successor |
| ifs.rb:12:6:12:6 | b | ifs.rb:13:12:13:12 | 0 | semmle.label | true |
| ifs.rb:12:6:12:6 | b | ifs.rb:15:10:15:10 | 1 | semmle.label | false |
| ifs.rb:13:5:13:12 | Return | ifs.rb:11:1:16:3 | exit m2 (normal) | semmle.label | return |
| ifs.rb:13:12:13:12 | 0 | ifs.rb:13:5:13:12 | Return | semmle.label | successor |
| ifs.rb:15:3:15:10 | Return | ifs.rb:11:1:16:3 | exit m2 (normal) | semmle.label | return |
| ifs.rb:15:10:15:10 | 1 | ifs.rb:15:3:15:10 | Return | semmle.label | successor |
| ifs.rb:18:1:26:3 | enter m3 | ifs.rb:19:3:24:5 | If | semmle.label | successor |
| ifs.rb:18:1:26:3 | exit m3 (normal) | ifs.rb:18:1:26:3 | exit m3 | semmle.label | successor |
| ifs.rb:19:3:24:5 | If | ifs.rb:19:6:19:6 | x | semmle.label | successor |
| ifs.rb:19:6:19:6 | x | ifs.rb:19:10:19:10 | 0 | semmle.label | successor |
| ifs.rb:19:6:19:10 | Binary | ifs.rb:20:10:20:10 | x | semmle.label | true |
| ifs.rb:19:6:19:10 | Binary | ifs.rb:25:8:25:8 | x | semmle.label | false |
| ifs.rb:19:10:19:10 | 0 | ifs.rb:19:6:19:10 | Binary | semmle.label | successor |
| ifs.rb:20:5:20:5 | x | ifs.rb:20:5:20:10 | Assignment | semmle.label | successor |
| ifs.rb:20:5:20:10 | Assignment | ifs.rb:21:5:23:7 | If | semmle.label | successor |
| ifs.rb:20:9:20:10 | Unary | ifs.rb:20:5:20:5 | x | semmle.label | successor |
| ifs.rb:20:10:20:10 | x | ifs.rb:20:9:20:10 | Unary | semmle.label | successor |
| ifs.rb:21:5:23:7 | If | ifs.rb:21:8:21:8 | x | semmle.label | successor |
| ifs.rb:21:8:21:8 | x | ifs.rb:21:12:21:13 | 10 | semmle.label | successor |
| ifs.rb:21:8:21:13 | Binary | ifs.rb:22:11:22:11 | x | semmle.label | true |
| ifs.rb:21:8:21:13 | Binary | ifs.rb:25:8:25:8 | x | semmle.label | false |
| ifs.rb:21:12:21:13 | 10 | ifs.rb:21:8:21:13 | Binary | semmle.label | successor |
| ifs.rb:22:7:22:7 | x | ifs.rb:22:7:22:15 | Assignment | semmle.label | successor |
| ifs.rb:22:7:22:15 | Assignment | ifs.rb:25:8:25:8 | x | semmle.label | successor |
| ifs.rb:22:11:22:11 | x | ifs.rb:22:15:22:15 | 1 | semmle.label | successor |
| ifs.rb:22:11:22:15 | Binary | ifs.rb:22:7:22:7 | x | semmle.label | successor |
| ifs.rb:22:15:22:15 | 1 | ifs.rb:22:11:22:15 | Binary | semmle.label | successor |
| ifs.rb:25:3:25:6 | puts | ifs.rb:25:3:25:8 | MethodCall | semmle.label | successor |
| ifs.rb:25:3:25:8 | MethodCall | ifs.rb:18:1:26:3 | exit m3 (normal) | semmle.label | successor |
| ifs.rb:25:8:25:8 | x | ifs.rb:25:3:25:6 | puts | semmle.label | successor |
| loops.rb:1:1:6:3 | enter m1 | loops.rb:2:3:5:5 | While | semmle.label | successor |
| loops.rb:1:1:6:3 | exit m1 (normal) | loops.rb:1:1:6:3 | exit m1 | semmle.label | successor |
| loops.rb:2:3:5:5 | While | loops.rb:2:9:2:9 | x | semmle.label | successor |
| loops.rb:2:9:2:9 | x | loops.rb:2:14:2:14 | 0 | semmle.label | successor |
| loops.rb:2:9:2:14 | Binary | loops.rb:1:1:6:3 | exit m1 (normal) | semmle.label | false |
| loops.rb:2:9:2:14 | Binary | loops.rb:3:10:3:10 | x | semmle.label | true |
| loops.rb:2:14:2:14 | 0 | loops.rb:2:9:2:14 | Binary | semmle.label | successor |
| loops.rb:3:5:3:8 | puts | loops.rb:3:5:3:10 | MethodCall | semmle.label | successor |
| loops.rb:3:5:3:10 | MethodCall | loops.rb:4:5:4:5 | x | semmle.label | successor |
| loops.rb:3:10:3:10 | x | loops.rb:3:5:3:8 | puts | semmle.label | successor |
| loops.rb:4:5:4:5 | x | loops.rb:4:10:4:10 | 1 | semmle.label | successor |
| loops.rb:4:5:4:10 | OperatorAssignment | loops.rb:2:9:2:9 | x | semmle.label | successor |
| loops.rb:4:10:4:10 | 1 | loops.rb:4:5:4:10 | OperatorAssignment | semmle.label | successor |
| loops.rb:8:1:22:3 | enter m2 | loops.rb:9:3:20:5 | While | semmle.label | successor |
| loops.rb:8:1:22:3 | exit m2 (normal) | loops.rb:8:1:22:3 | exit m2 | semmle.label | successor |
| loops.rb:9:3:20:5 | While | loops.rb:9:9:9:9 | x | semmle.label | successor |
| loops.rb:9:9:9:9 | x | loops.rb:9:14:9:14 | 0 | semmle.label | successor |
| loops.rb:9:9:9:14 | Binary | loops.rb:10:10:10:10 | x | semmle.label | true |
| loops.rb:9:9:9:14 | Binary | loops.rb:21:8:21:13 | String | semmle.label | false |
| loops.rb:9:14:9:14 | 0 | loops.rb:9:9:9:14 | Binary | semmle.label | successor |
| loops.rb:10:5:10:8 | puts | loops.rb:10:5:10:10 | MethodCall | semmle.label | successor |
| loops.rb:10:5:10:10 | MethodCall | loops.rb:11:5:11:5 | x | semmle.label | successor |
| loops.rb:10:10:10:10 | x | loops.rb:10:5:10:8 | puts | semmle.label | successor |
| loops.rb:11:5:11:5 | x | loops.rb:11:10:11:10 | 1 | semmle.label | successor |
| loops.rb:11:5:11:10 | OperatorAssignment | loops.rb:12:5:18:7 | If | semmle.label | successor |
| loops.rb:11:10:11:10 | 1 | loops.rb:11:5:11:10 | OperatorAssignment | semmle.label | successor |
| loops.rb:12:5:18:7 | If | loops.rb:12:8:12:8 | x | semmle.label | successor |
| loops.rb:12:8:12:8 | x | loops.rb:12:12:12:14 | 100 | semmle.label | successor |
| loops.rb:12:8:12:14 | Binary | loops.rb:13:7:13:11 | Break | semmle.label | true |
| loops.rb:12:8:12:14 | Binary | loops.rb:14:5:17:10 | Elsif | semmle.label | false |
| loops.rb:12:12:12:14 | 100 | loops.rb:12:8:12:14 | Binary | semmle.label | successor |
| loops.rb:13:7:13:11 | Break | loops.rb:21:8:21:13 | String | semmle.label | break |
| loops.rb:14:5:17:10 | Elsif | loops.rb:14:11:14:11 | x | semmle.label | successor |
| loops.rb:14:11:14:11 | x | loops.rb:14:15:14:16 | 50 | semmle.label | successor |
| loops.rb:14:11:14:16 | Binary | loops.rb:15:7:15:10 | Next | semmle.label | true |
| loops.rb:14:11:14:16 | Binary | loops.rb:16:5:17:10 | Elsif | semmle.label | false |
| loops.rb:14:15:14:16 | 50 | loops.rb:14:11:14:16 | Binary | semmle.label | successor |
| loops.rb:15:7:15:10 | Next | loops.rb:9:9:9:9 | x | semmle.label | next |
| loops.rb:16:5:17:10 | Elsif | loops.rb:16:11:16:11 | x | semmle.label | successor |
| loops.rb:16:11:16:11 | x | loops.rb:16:15:16:16 | 10 | semmle.label | successor |
| loops.rb:16:11:16:16 | Binary | loops.rb:17:7:17:10 | Redo | semmle.label | true |
| loops.rb:16:11:16:16 | Binary | loops.rb:19:10:19:15 | String | semmle.label | false |
| loops.rb:16:15:16:16 | 10 | loops.rb:16:11:16:16 | Binary | semmle.label | successor |
| loops.rb:17:7:17:10 | Redo | loops.rb:10:10:10:10 | x | semmle.label | successor |
| loops.rb:19:5:19:8 | puts | loops.rb:19:5:19:15 | MethodCall | semmle.label | successor |
| loops.rb:19:5:19:15 | MethodCall | loops.rb:9:9:9:9 | x | semmle.label | successor |
| loops.rb:19:10:19:15 | String | loops.rb:19:5:19:8 | puts | semmle.label | successor |
| loops.rb:21:3:21:6 | puts | loops.rb:21:3:21:13 | MethodCall | semmle.label | successor |
| loops.rb:21:3:21:13 | MethodCall | loops.rb:8:1:22:3 | exit m2 (normal) | semmle.label | successor |
| loops.rb:21:8:21:13 | String | loops.rb:21:3:21:6 | puts | semmle.label | successor |
| loops.rb:24:1:28:3 | enter m3 | loops.rb:25:4:25:4 | 1 | semmle.label | successor |
| loops.rb:24:1:28:3 | exit m3 (normal) | loops.rb:24:1:28:3 | exit m3 | semmle.label | successor |
| loops.rb:25:3:25:9 | Array | loops.rb:25:11:25:14 | each | semmle.label | successor |
| loops.rb:25:3:25:14 | Call | loops.rb:25:3:27:5 | MethodCall | semmle.label | successor |
| loops.rb:25:3:27:5 | MethodCall | loops.rb:24:1:28:3 | exit m3 (normal) | semmle.label | successor |
| loops.rb:25:4:25:4 | 1 | loops.rb:25:6:25:6 | 2 | semmle.label | successor |
| loops.rb:25:6:25:6 | 2 | loops.rb:25:8:25:8 | 3 | semmle.label | successor |
| loops.rb:25:8:25:8 | 3 | loops.rb:25:3:25:9 | Array | semmle.label | successor |
| loops.rb:25:11:25:14 | each | loops.rb:25:3:25:14 | Call | semmle.label | successor |
| loops.rb:25:16:27:5 | enter do block | loops.rb:26:10:26:10 | x | semmle.label | successor |
| loops.rb:25:16:27:5 | exit do block (normal) | loops.rb:25:16:27:5 | exit do block | semmle.label | successor |
| loops.rb:26:5:26:8 | puts | loops.rb:26:5:26:10 | MethodCall | semmle.label | successor |
| loops.rb:26:5:26:10 | MethodCall | loops.rb:25:16:27:5 | exit do block (normal) | semmle.label | successor |
| loops.rb:26:10:26:10 | x | loops.rb:26:5:26:8 | puts | semmle.label | successor |
| raise.rb:1:1:6:3 | enter m1 | raise.rb:2:3:4:5 | If | semmle.label | successor |
| raise.rb:1:1:6:3 | exit m1 (abnormal) | raise.rb:1:1:6:3 | exit m1 | semmle.label | successor |
| raise.rb:1:1:6:3 | exit m1 (normal) | raise.rb:1:1:6:3 | exit m1 | semmle.label | successor |
| raise.rb:2:3:4:5 | If | raise.rb:2:6:2:6 | x | semmle.label | successor |
| raise.rb:2:6:2:6 | x | raise.rb:2:10:2:10 | 2 | semmle.label | successor |
| raise.rb:2:6:2:10 | Binary | raise.rb:3:11:3:17 | String | semmle.label | true |
| raise.rb:2:6:2:10 | Binary | raise.rb:5:8:5:15 | String | semmle.label | false |
| raise.rb:2:10:2:10 | 2 | raise.rb:2:6:2:10 | Binary | semmle.label | successor |
| raise.rb:3:5:3:9 | raise | raise.rb:3:5:3:17 | MethodCall | semmle.label | successor |
| raise.rb:3:5:3:17 | MethodCall | raise.rb:1:1:6:3 | exit m1 (abnormal) | semmle.label | raise |
| raise.rb:3:11:3:17 | String | raise.rb:3:5:3:9 | raise | semmle.label | successor |
| raise.rb:5:3:5:6 | puts | raise.rb:5:3:5:15 | MethodCall | semmle.label | successor |
| raise.rb:5:3:5:15 | MethodCall | raise.rb:1:1:6:3 | exit m1 (normal) | semmle.label | successor |
| raise.rb:5:8:5:15 | String | raise.rb:5:3:5:6 | puts | semmle.label | successor |
