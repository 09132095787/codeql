<!DOCTYPE qhelp PUBLIC "-//Semmle//qhelp//EN" "qhelp.dtd">

<qhelp>
  <overview>
    <p>Using untrusted input to created with the built-in make function 
      could lead to excessive memory allocation and potentially cause the program to crash due 
      to running out of memory. This vulnerability could be exploited to perform a DoS attack by consuming all available server resources.</p>
  </overview>

  <recommendation>
    <p>Implement a maximum allowed value for creates a slice with the built-in make function to prevent excessively large allocations. 
    For instance, you could restrict it to a reasonable upper limit.</p>
  </recommendation>

  <example>
    <p>In the following example snippet, the <code>n</code> field is user-controlled.</p>
    <p> The server trusts that n has an acceptable value, however when using a maliciously large value, 
      it allocates a slice of <code>n</code> of strings before filling the slice with data.</p>

    <sample src="DenialOfServiceBad.go" />

    <p>One way to prevent this vulnerability is by implementing a maximum allowed value for the user-controlled input:</p>

    <sample src="DenialOfServiceGood.go" />
  </example>

  <references>
    <li>
      OWASP: <a href="https://cheatsheetseries.owasp.org/cheatsheets/Denial_of_Service_Cheat_Sheet.html">Denial of Service Cheat Sheet</a>
    </li>
  </references>
</qhelp>