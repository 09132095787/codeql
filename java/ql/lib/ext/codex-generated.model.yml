extensions:
- addsTo: {extensible: sinkModel, pack: codeql/java-all}
  data:
  - [org.apache.bcel.util, MemorySensitiveClassPathRepository, true, loadClass, '(InputStream,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.lang, ClassLoader, true, getResourceAsStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.bcel.util, ClassPathRepository, true, loadClass, '(InputStream, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.bcel.util, ClassPath, true, getInputStream, '(String, String)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.http.client.methods, HttpRequestBase, true, setURI, (URI), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, create, (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.http, HttpHost, true, HttpHost, '(String, int, String)', '', 'Argument[0]',
    open-url, manual]
  - [java.util, Set<URI>, true, contains, (Object), '', 'Argument[0]', open-url, manual]
  - [java.util, Set<URI>, true, add, (URI), '', 'Argument[0]', open-url, manual]
  - [java.net, URI, true, URI, (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.http.client.utils, URIUtils, true, resolve, '(URI, URI)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.http.client.utils, URIUtils, true, rewriteURI, '(URI, HttpHost, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.http.impl.client, RedirectLocations, true, contains, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http.conn.routing, HttpRoute, true, HttpRoute, '(HttpHost, InetAddress,
      HttpHost, boolean)', '', 'Argument[0]', open-url, manual]
  - [org.apache.http.impl.client, RedirectLocations, true, add, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http, HttpException, true, HttpException, '(String, Throwable)', '',
    'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, ProcessorTemplateElem, true, endElement, '(StylesheetHandler,
      String, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementProcessor, true, endElement, '(StylesheetHandler,
      String, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, ProcessorTemplateElem, true, startElement, '(StylesheetHandler,
      String, String, String, Attributes)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementProcessor, true, startElement, '(StylesheetHandler,
      String, String, String, Attributes)', '', 'Argument[1]', open-url, manual]
  - [org.apache.http.message, BasicNameValuePair, true, BasicNameValuePair, '(String,
      String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, ProcessorInclude, true, parse, '(StylesheetHandler,
      String, String, String, Attributes)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.templates, ElemLiteralResult, true, containsExtensionElementURI,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.templates, Stylesheet, true, containsExtensionElementURI, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.templates, ElemLiteralResult, true, setNamespace, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.http.client.methods, HttpGet, true, HttpGet, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, equalsMayBeNullOrZeroLen, '(String,
      String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, equalsMayBeNullOrZeroLen, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, QNameEquals, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, getProcessorFor, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, getProcessorForUnknown, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.xml.sax, ContentHandler, true, startPrefixMapping, '(String, String)', '',
    'Argument[1]', open-url, manual]
  - [org.xml.sax, ContentHandler, true, startElement, '(String, String, String, Attributes)',
    '', 'Argument[0]', open-url, manual]
  - [org.xml.sax, ContentHandler, true, endElement, '(String, String, String)', '',
    'Argument[0]', open-url, manual]
  - [java.util, Vector<>, true, addElement, (Object), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.xalan.processor, StylesheetHandler, true, getProcessorFor, '(String,
      String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xml.serializer, ToXMLSAXHandler, true, startPrefixMapping, '(String,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, NamespaceMappings, true, pushNamespace, '(String,
      String, int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, SerializerBase, true, addAttributeAlways, '(String,
      String, String, String, String, boolean)', '', 'Argument[4]', open-url, manual]
  - [org.apache.xml.serializer, ToUnknownStream, true, startPrefixMapping, '(String,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, ExtendedContentHandler, true, startPrefixMapping,
    '(String, String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.transformer, SerializerSwitcher, true, switchSerializerIfHTML,
    '(String, String, Properties, Serializer)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xml.serializer, MappingRecord, true, MappingRecord, '(String, String,
      int)', '', 'Argument[1]', open-url, manual]
  - [java.util, Vector<>, true, indexOf, '(Object, int)', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.xml.dtm.ref, ExpandedNameTable, true, getExpandedTypeID, '(String,
      String, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xml.dtm.ref.sax2dtm, SAX2DTM, true, getPrefix, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, ToStream, true, startPrefixMapping, '(String, String,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, ToStream, true, addAttributeAlways, '(String, String,
      String, String, String, boolean)', '', 'Argument[4]', open-url, manual]
  - [org.conscrypt, Platform, true, createFileDescriptorSocket, '(Socket, String,
      int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [org.conscrypt, Java8EngineSocket, true, Java8EngineSocket, '(Socket, String,
      int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [org.conscrypt, ConscryptEngineSocket, true, ConscryptEngineSocket, '(Socket,
      String, int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [org.conscrypt, Java8FileDescriptorSocket, true, Java8FileDescriptorSocket, '(Socket,
      String, int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [com.android.org.conscrypt, Platform, true, createFileDescriptorSocket, '(Socket,
      String, int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [java.io, PrintStream, true, println, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, File, (String), '', 'Argument[0]', create-file, manual]
  - [android.text, TextUtils, true, isEmpty, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [com.bumptech.glide.load.data, FileService, true, get, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.bumptech.glide.load.data, FileService, true, exists, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.net, Uri, true, fromFile, (File), '', 'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, openInputStream, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [java.lang, IllegalStateException, true, IllegalStateException, (String), '',
    'Argument[0]', create-file, manual]
  - [android.content, UriMatcher, true, match, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.github.javaparser.utils, Utils, true, assertNotNull, (T), '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentValues, true, put, '(String, String)', '', 'Argument[1]',
    sql, manual]
  - [com.github.javaparser, JavaParser, true, parse, (File), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser, Providers, true, provider, '(File, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.ast, CompilationUnit, true, setStorage, '(Path, Charset)',
    '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser.ast, Storage, true, Storage, '(CompilationUnit, Path, Charset)',
    '', 'Argument[1]', create-file, manual]
  - [com.github.javaparser, StaticJavaParser, true, parse, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, CodeGenerationUtils, true, packageToPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Paths, true, get, '(String, String[])', '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Paths, true, get, '(String, String[])', '', 'Argument[1]', create-file,
    manual]
  - [java.nio.file, PathMatcher, true, matches, (Path), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, CollectionStrategy, true, getRoot, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, isHidden, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, isSameFile, '(Path, Path)', '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, ProjectRoot, true, addSourceRoot, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, isDirectory, '(Path, LinkOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.lang, IllegalArgumentException, true, IllegalArgumentException, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser.utils, CodeGenerationUtils, true, fileInPackageRelativePath,
    '(String, String)', '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Path, true, resolve, (Path), '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser, Providers, true, provider, '(Path, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [java.util, 'Map<Path,ParseResult<CompilationUnit>>', true, containsKey, (Object),
    '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<Path,ParseResult<CompilationUnit>>', true, get, (Object), '',
    'Argument[0]', create-file, manual]
  - [java.util, 'Map<Path,SourceRoot>', true, put, '(Path, SourceRoot)', '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, SourceRoot, (Path), '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, tryToParse, '(String, String,
      ParserConfiguration)', '', 'Argument[1]', create-file, manual]
  - [java.util, Properties, true, load, (InputStream), '', 'Argument[0]', open-url,
    manual]
  - [java.nio.file, Path, true, relativize, (Path), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, SourceRoot, true, tryToParse, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, isSensibleDirectoryToEnter, (Path),
    '', 'Argument[0]', create-file, manual]
  - [java.util.regex, Pattern, true, matcher, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, SourceRoot, true, tryToParse, '(String, String,
      ParserConfiguration)', '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser, Providers, true, provider, (Path), '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, callback, '(Path, ParserConfiguration,
      Callback)', '', 'Argument[0]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, Data, true, createChild, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.clearsilver.jsilver.data, Data, true, getChild, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.clearsilver.jsilver.data, Data, true, setSymlink, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, DelegatedData, true, getChild, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, ChainedData, true, getChild, (String), '',
    'Argument[0]', create-file, manual]
  - [com.github.javaparser.utils, ParallelParse, true, ParallelParse, '(Path, VisitFileCallback)',
    '', 'Argument[0]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, NestedMapData, true, createChild, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.io, BufferedInputStream, true, BufferedInputStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [com.github.javaparser.utils, VisitFileCallback, true, process, '(Path, BasicFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [java.io, LineNumberReader, true, LineNumberReader, (Reader), '', 'Argument[0]',
    create-file, manual]
  - [java.io, DataInputStream, true, DataInputStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.lang, Class<MetadataManager>, true, getResourceAsStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.i18n.phonenumbers, MetadataManager, true, getMetadataFromSingleFileName,
    '(String, MetadataLoader)', '', 'Argument[0]', create-file, manual]
  - [com.google.i18n.phonenumbers, MetadataLoader, true, loadMetadata, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.i18n.phonenumbers, MetadataManager, true, getMetadataFromSingleFileName,
    '(String, MetadataLoader)', '', 'Argument[0]', create-file, manual]
  - [com.android.i18n.phonenumbers, MetadataLoader, true, loadMetadata, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.lang, String, true, split, (String), '', 'Argument[0]', sql, manual]
  - [gov.nist.javax.sip.stack, HopImpl, true, HopImpl, '(String, int, String)', '',
    'Argument[0]', open-url, manual]
  - [com.android.okhttp, OkUrlFactory, true, open, '(URL, Proxy)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.okhttp, OkUrlFactory, true, open, (URL), '', 'Argument[0]', open-url,
    manual]
  - [com.android.okhttp.internalandroidapi, HttpURLConnectionFactory, true, internalOpenConnection,
    '(URL, SocketFactory, Proxy)', '', 'Argument[0]', open-url, manual]
  - [com.android.okhttp, OkUrlFactories, true, open, '(OkUrlFactory, URL, Proxy)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.okhttp.internal.huc, HttpURLConnectionImpl, true, HttpURLConnectionImpl,
    '(URL, OkHttpClient, URLFilter)', '', 'Argument[0]', open-url, manual]
  - [com.android.okhttp.internal.huc, HttpsURLConnectionImpl, true, HttpsURLConnectionImpl,
    '(URL, OkHttpClient, URLFilter)', '', 'Argument[0]', open-url, manual]
  - [java.net, HttpURLConnection, true, HttpURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.okhttp.internal.huc, HttpURLConnectionImpl, true, HttpURLConnectionImpl,
    '(URL, OkHttpClient)', '', 'Argument[0]', open-url, manual]
  - [org.ccil.cowan.tagsoup, XMLWriter, true, writeName, '(String, String, String,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, XMLFilterImpl, true, startElement, '(String, String, String,
      Attributes)', '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, XMLFilterImpl, true, endElement, '(String, String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, NamespaceSupport, true, getPrefix, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.util, Hashtable<>, true, get, (Object), '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, NamespaceSupport, true, declarePrefix, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [java.util, Hashtable<>, true, put, '(Object, Object)', '', 'Argument[0]', open-url,
    manual]
  - [org.ccil.cowan.tagsoup, XMLWriter, true, doPrefix, '(String, String, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [com.google.turbine.diag, SourceFile, true, SourceFile, '(String, String)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.http.params, HttpConnectionParams, true, setConnectionTimeout, '(HttpParams,
      int)', '', 'Argument[0]', open-url, manual]
  - [java.nio.file, Files, true, newBufferedReader, '(Path, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [android.util, 'ArrayMap<String,File>', true, put, '(String, File)', '', 'Argument[1]',
    create-file, manual]
  - [android.app, ContextImpl, true, getSharedPreferences, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.util, 'ArrayMap<File,SharedPreferencesImpl>', true, get, (Object), '',
    'Argument[0]', create-file, manual]
  - [android.app, SharedPreferencesImpl, true, SharedPreferencesImpl, '(File, int)',
    '', 'Argument[0]', create-file, manual]
  - [android.util, 'ArrayMap<File,SharedPreferencesImpl>', true, put, '(File, SharedPreferencesImpl)',
    '', 'Argument[0]', create-file, manual]
  - [android.app, ContextImpl, true, makeFilename, '(File, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.app, SharedPreferencesImpl, true, makeBackupFile, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.app, ContextImpl, true, resolveUserId, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Intent, true, Intent, '(String, Uri)', '', 'Argument[1]', open-url,
    manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[3]', sql, manual]
  - [java.io, File, true, File, '(File, String)', '', 'Argument[1]', create-file,
    manual]
  - [java.util, Objects, true, requireNonNull, (T), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, query, '(Uri, String[], String,
      String[], String, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, query, '(Uri, String[], Bundle,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [java.util, Objects, true, requireNonNull, '(T, String)', '', 'Argument[0]', open-url,
    manual]
  - [android.content, IContentProvider, true, query, '(String, String, Uri, String[],
      Bundle, ICancellationSignal)', '', 'Argument[2]', open-url, manual]
  - [android.content, IContentProvider, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Transport, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Logger, true, Logger, '(String, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [android.content, ContentInterface, true, query, '(Uri, String[], Bundle, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, delete, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentInterface, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentInterface, true, getStreamTypes, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, canonicalize, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.content, IContentProvider, true, delete, '(String, String, Uri, Bundle)',
    '', 'Argument[2]', open-url, manual]
  - [android.content, IContentProvider, true, getTypeAsync, '(Uri, RemoteCallback)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, openAssetFile, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, IContentProvider, true, openAssetFile, '(String, String, Uri,
      String, ICancellationSignal)', '', 'Argument[2]', open-url, manual]
  - [android.content, ContentInterface, true, delete, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentInterface, true, update, '(Uri, ContentValues, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, openFile, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, openAssetFile, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, openTypedAssetFile, '(Uri, String, Bundle,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, IContentProvider, true, getStreamTypes, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], Bundle, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, call, '(String, String, String, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderResult, true, ContentProviderResult, (Uri), '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, maybeLogQueryToEventLog, '(long, Uri,
      String[], Bundle)', '', 'Argument[1]', open-url, manual]
  - [android.content, Transport, true, canonicalize, '(String, String, Uri)', '',
    'Argument[2]', open-url, manual]
  - [android.content, IContentProvider, true, canonicalizeAsync, '(String, String,
      Uri, RemoteCallback)', '', 'Argument[2]', open-url, manual]
  - [android.content, Context, true, grantUriPermission, '(String, Uri, int)', '',
    'Argument[1]', open-url, manual]
  - [java.io, FileInputStream, true, FileInputStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentResolver, true, openAssetFileDescriptor, '(Uri, String,
      CancellationSignal)', '', 'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, openOutputStream, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, openAssetFileDescriptor, '(Uri, String,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, openFileDescriptor, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.os, ParcelFileDescriptor, true, open, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentResolver, true, openTypedAssetFileDescriptor, '(Uri,
      String, Bundle, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.os, PatternMatcher, true, PatternMatcher, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.content, IContentProvider, true, openTypedAssetFile, '(String, String,
      Uri, String, Bundle, ICancellationSignal)', '', 'Argument[2]', open-url, manual]
  - [android.content, PipeDataWriter<T>, true, writeDataToPipe, '(ParcelFileDescriptor,
      Uri, String, Bundle, T)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, delete, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentResolver, true, maybeLogUpdateToEventLog, '(long, Uri,
      String, String)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, update, '(Uri, ContentValues, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, IContentProvider, true, update, '(String, String, Uri, ContentValues,
      Bundle)', '', 'Argument[2]', open-url, manual]
  - [android.database.sqlite, SQLiteQuery, true, SQLiteQuery, '(SQLiteDatabase, String,
      CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteProgram, true, bindAllArgsAsStrings, '(String[])',
    '', 'Argument[0]', sql, manual]
  - [android.database, DatabaseUtils, true, getSqlStatementType, (String), '', 'Argument[0]',
    sql, manual]
  - [android.database.sqlite, SQLiteSession, true, prepare, '(String, int, CancellationSignal,
      SQLiteStatementInfo)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteProgram, true, SQLiteProgram, '(SQLiteDatabase,
      String, Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteSession, true, executeForChangedRowCount, '(String,
      Object[], int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.content, ContentResolver, true, notifyChange, '(Uri, ContentObserver,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, notifyChange, '(Uri, ContentObserver,
      int)', '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteTokenizer, true, peek, '(String, int)', '', 'Argument[0]',
    sql, manual]
  - [android.database.sqlite, SQLiteTokenizer, true, genException, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, appendClause, '(StringBuilder,
      String, String)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String, String, CancellationSignal)', '',
    'Argument[3]', sql, manual]
  - [android.database.sqlite, SQLiteSession, true, acquireConnection, '(String, int,
      CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, validateSql, '(String, CancellationSignal)',
    '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, prepare, '(String, SQLiteStatementInfo)',
    '', 'Argument[0]', sql, manual]
  - [java.util, Arrays, true, toString, '(Object[])', '', 'Argument[0]', sql, manual]
  - [android.util, Log, true, d, '(String, String)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, rawQueryWithFactory, '(CursorFactory,
      String, String[], String, CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, rawQueryWithFactory, '(CursorFactory,
      String, String[], String, CancellationSignal)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForString, '(String,
      Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteSession, true, executeSpecial, '(String, Object[],
      int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForChangedRowCount, '(String,
      Object[], CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForChangedRowCount, '(String,
      Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForLastInsertedRowId,
    '(String, Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, acquireConnection, '(String,
      int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, waitForConnection, '(String,
      int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.util, 'LruCache<String,PreparedStatement>', true, get, (String), '',
    'Argument[0]', sql, manual]
  - [android.database.sqlite, OperationLog, true, beginOperation, '(String, String,
      Object[])', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, acquirePreparedStatement, (String),
    '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, queryWithFactory, '(CursorFactory,
      boolean, String, String[], String, String[], String, String, String, String,
      CancellationSignal)', '', 'Argument[5]', sql, manual]
  - [android.content, Intent, true, setData, (Uri), '', 'Argument[0]', open-url, manual]
  - [android.net, Uri, true, parse, (String), '', 'Argument[0]', open-url, manual]
  - [java.net, URISyntaxException, true, URISyntaxException, '(String, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, Intent, true, getIntentOld, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, buildQueryString, '(boolean,
      String, String[], String, String, String, String, String)', '', 'Argument[2]',
    sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, buildQueryString, '(boolean,
      String, String[], String, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, tryAcquireNonPrimaryConnectionLocked,
    '(String, int)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, obtainConnectionWaiterLocked,
    '(Thread, long, int, boolean, String, int)', '', 'Argument[4]', sql, manual]
  - [android.database, DatabaseUtils, true, stringForQuery, '(SQLiteStatement, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDirectCursorDriver, true, SQLiteDirectCursorDriver,
    '(SQLiteDatabase, String, String, CancellationSignal)', '', 'Argument[1]', sql,
    manual]
  - [android.database.sqlite, SQLiteCursorDriver, true, query, '(CursorFactory, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, nativePrepareStatement, '(long,
      String)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, obtainPreparedStatement, '(String,
      long, int, int, boolean)', '', 'Argument[0]', sql, manual]
  - [android.util, 'LruCache<String,PreparedStatement>', true, put, '(String, PreparedStatement)',
    '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteStatement, true, SQLiteStatement, '(SQLiteDatabase,
      String, Object[])', '', 'Argument[2]', sql, manual]
  - [java.net, URISyntaxException, true, URISyntaxException, '(String, String, int)',
    '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteStatement, true, SQLiteStatement, '(SQLiteDatabase,
      String, Object[])', '', 'Argument[1]', sql, manual]
  - [android.text, TextUtils, true, isEmpty, (CharSequence), '', 'Argument[0]', sql,
    manual]
  - [android.database.sqlite, SQLiteDatabase, true, updateWithOnConflict, '(String,
      ContentValues, String, String[], int)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, updateWithOnConflict, '(String,
      ContentValues, String, String[], int)', '', 'Argument[3]', sql, manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [android.database.sqlite, SQLiteConnection, true, isPreparedStatementInCache,
    (String), '', 'Argument[0]', sql, manual]
  - [android.content.pm, PackageParserException, true, PackageParserException, '(int,
      String)', '', 'Argument[1]', create-file, manual]
  - [android.net, CaptivePortalData, true, CaptivePortalData, '(long, Uri, Uri, boolean,
      long, long, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.net, CaptivePortalData, true, CaptivePortalData, '(long, Uri, Uri, boolean,
      long, long, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.okhttp.internalandroidapi, HttpURLConnectionFactory, true, openConnection,
    '(URL, SocketFactory, Proxy)', '', 'Argument[0]', open-url, manual]
  - [javax.net.ssl, SSLSocketFactory, true, createSocket, '(Socket, String, int, boolean)',
    '', 'Argument[1]', open-url, manual]
  - [android.net, StringUri, true, StringUri, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.net, PathPart, true, fromDecoded, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.net, PathPart, true, fromEncoded, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.net, StringUri, true, parsePath, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [android.net, Builder, true, path, (PathPart), '', 'Argument[0]', create-file,
    manual]
  - [android.os, FileObserver, true, FileObserver, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.util, Arrays, true, asList, '(T[])', '', 'Argument[0]', create-file, manual]
  - [java.lang, StringBuilder, true, append, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.lang, StringBuilder, true, append, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.os, ParcelFileDescriptor, true, openInternal, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.system, Os, true, open, '(String, int, int)', '', 'Argument[0]', create-file,
    manual]
  - [android.net, Builder, true, fragment, (Part), '', 'Argument[0]', open-url, manual]
  - [android.net, Builder, true, authority, (Part), '', 'Argument[0]', open-url, manual]
  - [android.os.incremental, IIncrementalService, true, makeDirectory, '(int, String)',
    '', 'Argument[1]', create-file, manual]
  - [android.os.incremental, IncrementalStorage, true, makeDirectory, (String), '',
    'Argument[0]', create-file, manual]
  - [android.os.incremental, IIncrementalService, true, makeLink, '(int, String, int,
      String)', '', 'Argument[1]', create-file, manual]
  - [android.os.incremental, IIncrementalService, true, makeLink, '(int, String, int,
      String)', '', 'Argument[3]', create-file, manual]
  - [android.os.incremental, IncrementalStorage, true, makeLink, '(String, IncrementalStorage,
      String)', '', 'Argument[0]', create-file, manual]
  - [android.os.incremental, IncrementalStorage, true, makeLink, '(String, IncrementalStorage,
      String)', '', 'Argument[2]', create-file, manual]
  - [android.net, Uri, true, encode, (String), '', 'Argument[0]', create-file, manual]
  - [android.net, Builder, true, appendEncodedPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.preference, RingtonePreference, true, onSaveRingtone, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.net, Builder, true, authority, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentUris, true, withAppendedId, '(Uri, long)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, isRootUri, '(Context, Uri, int)',
    '', 'Argument[1]', open-url, manual]
  - [java.util, LinkedList<String>, true, LinkedList<String>, '(Collection<? extends
      String>)', '', 'Argument[0]', create-file, manual]
  - [android.provider, Path, true, Path, '(String, List<String>)', '', 'Argument[1]',
    create-file, manual]
  - [android.os.storage, StorageManager, true, getStorageVolume, '(StorageVolume[],
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.internal.util, Preconditions, true, checkCollectionNotEmpty, '(Collection<T>,
      String)', '', 'Argument[0]', create-file, manual]
  - [com.android.internal.util, Preconditions, true, checkCollectionElementsNotNull,
    '(C, String)', '', 'Argument[0]', create-file, manual]
  - [android.database.sqlite, SqliteWrapper, true, query, '(Context, ContentResolver,
      Uri, String[], String, String[], String)', '', 'Argument[2]', open-url, manual]
  - [android.net, Builder, true, appendQueryParameter, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [android.text.util, Linkify, true, applyLink, '(String, int, int, Spannable, Function<String,URLSpan>)',
    '', 'Argument[0]', open-url, manual]
  - [java.util.function, 'Function<String,URLSpan>', true, apply, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.text.util, TransformFilter, true, transformUrl, '(Matcher, String)',
    '', 'Argument[1]', open-url, manual]
  - [java.lang, String, true, indexOf, (String), '', 'Argument[0]', open-url, manual]
  - [java.net, URLEncoder, true, encode, '(String, String)', '', 'Argument[0]', open-url,
    manual]
  - [android.text, TextUtils, true, isEmpty, (CharSequence), '', 'Argument[0]', open-url,
    manual]
  - [java.util.regex, Pattern, true, matches, '(String, CharSequence)', '', 'Argument[1]',
    create-file, manual]
  - [android.webkit, URLUtil, true, isHttpUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isHttpsUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isAssetUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isFileUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isAboutUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isJavaScriptUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.webkit, URLUtil, true, isContentUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.net, Uri, true, decode, (String), '', 'Argument[0]', open-url, manual]
  - [android.webkit, WebViewProvider, true, loadUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.widget, ImageView, true, setImageURI, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.text, SpannableString, true, SpannableString, (CharSequence), '', 'Argument[0]',
    open-url, manual]
  - [android.graphics.drawable, Drawable, true, createFromPath, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.widget, SuggestionsAdapter, true, getDrawable, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'WeakHashMap<String,ConstantState>', true, get, (Object), '', 'Argument[0]',
    open-url, manual]
  - [android.widget, VideoView, true, setVideoURI, '(Uri, Map<String,String>)', '',
    'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(Context, Uri, Map<String,String>)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, loadThumbnail, '(Uri, Size)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, LoadUriTask, true, LoadUriTask, '(int, Uri, int, Bitmap)',
    '', 'Argument[1]', open-url, manual]
  - [android.widget, SearchView, true, createIntent, '(String, Uri, String, String,
      int, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.internal.content, FileSystemProvider, true, getFileForDocId, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystem, true, getPath, '(String, String[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, walkFileTree, '(Path, FileVisitor<? super Path>)',
    '', 'Argument[0]', create-file, manual]
  - [java.io, FileNotFoundException, true, FileNotFoundException, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.util, LinkedList<String>, true, addFirst, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.android.internal.content, FileSystemProvider, true, moveInMediaStore, '(File,
      File)', '', 'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, moveInMediaStore, '(File,
      File)', '', 'Argument[1]', create-file, manual]
  - [java.io, File, true, File, '(File, String)', '', 'Argument[0]', create-file,
    manual]
  - [android.content, Intent, true, parseUri, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.io, File, true, renameTo, (File), '', 'Argument[0]', create-file, manual]
  - [android.provider, MediaStore, true, scanFile, '(ContentResolver, File)', '',
    'Argument[1]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, removeFromMediaStore,
    (File), '', 'Argument[0]', create-file, manual]
  - [com.android.internal.content, DirectoryCursor, true, DirectoryCursor, '(String[],
      String, File)', '', 'Argument[2]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, getDocumentType, '(String,
      File)', '', 'Argument[1]', create-file, manual]
  - [android.os, ParcelFileDescriptor, true, open, '(File, int, Handler, OnCloseListener)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, scanFile, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, getDocIdForFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [android.util, 'ArrayMap<File,DirectoryObserver>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [com.android.internal.content, DirectoryObserver, true, DirectoryObserver, '(File,
      ContentResolver, Uri)', '', 'Argument[0]', create-file, manual]
  - [android.util, 'ArrayMap<File,DirectoryObserver>', true, put, '(File, DirectoryObserver)',
    '', 'Argument[0]', create-file, manual]
  - [android.os, FileObserver, true, FileObserver, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.internal.app, ContentPreviewCoordinator, true, loadUriIntoView, '(int,
      Uri, int)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [java.util, List<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, queryResolver, '(ContentResolver,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, logContentPreviewWarning, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, FileInfo, true, FileInfo, '(String, boolean)', '',
    'Argument[0]', create-file, manual]
  - [com.android.internal.app, ChooserActivity, true, loadFileUriIntoView, '(Uri,
      View)', '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, extractFileInfo, '(Uri, ContentResolver)',
    '', 'Argument[0]', open-url, manual]
  - [android.widget, TextView, true, setText, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [com.android.internal.app, ChooserActivity, true, findPreferredContentPreview,
    '(Uri, ContentResolver)', '', 'Argument[0]', open-url, manual]
  - [android.graphics, BitmapFactory, true, decodeFile, '(String, Options)', '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _getConstraints, '(int, String, int)', '',
    'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, _getMetadata, '(int, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, getConstraints, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, getMetadata, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _canHandle, '(int, String, String)', '',
    'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, canHandle, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _getDrmObjectType, '(int, String, String)',
    '', 'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, getDrmObjectType, '(String, String)', '',
    'Argument[0]', create-file, manual]
  - [java.io, FileInputStream, true, FileInputStream, (File), '', 'Argument[0]', create-file,
    manual]
  - [android.drm, DrmManagerClient, true, _getOriginalMimeType, '(int, String, FileDescriptor)',
    '', 'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, getOriginalMimeType, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, checkRightsStatus, '(String, int)', '',
    'Argument[0]', create-file, manual]
  - [android.drm, DrmManagerClient, true, checkRightsStatus, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _checkRightsStatus, '(int, String, int)',
    '', 'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, _removeRights, '(int, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, removeRights, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentResolver, true, loadThumbnail, '(Uri, Size, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.graphics, FileSource, true, FileSource, (File), '', 'Argument[0]', create-file,
    manual]
  - [android.media, MediaHTTPService, true, createHttpServiceBinderIfNecessary, '(String,
      List<HttpCookie>)', '', 'Argument[0]', create-file, manual]
  - [android.net, Uri, true, parse, (String), '', 'Argument[0]', create-file, manual]
  - [android.media, MediaMetadataRetriever, true, setDataSource, '(String, Map<String,String>)',
    '', 'Argument[0]', create-file, manual]
  - [android.media, MediaMetadataRetriever, true, _setDataSource, '(IBinder, String,
      String[], String[])', '', 'Argument[1]', open-url, manual]
  - [android.media, MediaHTTPService, true, createHttpServiceBinderIfNecessary, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.util, ArrayUtils, true, defeatNullable, '(File[])', '',
    'Argument[0]', create-file, manual]
  - [android.media, RingtoneManager, true, getDefaultType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(String, Map<String,String>,
      List<HttpCookie>)', '', 'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, attemptDataSource, '(ContentResolver, Uri)',
    '', 'Argument[1]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(Context, Uri, Map<String,String>,
      List<HttpCookie>)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, openAssetFileDescriptor, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(String, Map<String,String>,
      List<HttpCookie>)', '', 'Argument[0]', create-file, manual]
  - [android.media, MediaFile, true, getFileExtension, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, MediaFile, true, getFormatCodeForFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, MediaFile, true, getMimeTypeForFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(String, String[], String[],
      List<HttpCookie>)', '', 'Argument[0]', create-file, manual]
  - [android.media, MediaPlayer, true, nativeSetDataSource, '(IBinder, String, String[],
      String[])', '', 'Argument[1]', create-file, manual]
  - [android.media, MediaMetadataRetriever, true, setDataSource, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.os, Environment, true, getExternalStorageState, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.graphics, ImageDecoder, true, createSource, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.media, ExifInterface, true, ExifInterface, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.media, RingtoneManager, true, isRingtoneUriInStorage, '(Uri, Uri)', '',
    'Argument[0]', open-url, manual]
  - [android.media, ExifInterface, true, initForFilename, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, IRingtonePlayer, true, openRingtone, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, Session, true, onTune, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.media.tv, Session, true, onTune, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, RecordingSession, true, onTune, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.media.tv, RecordingSession, true, onStartRecording, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, RecordingSession, true, onTune, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, RecordingSession, true, onStartRecording, '(Uri, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.webkit, URLUtil, true, isNetworkUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.dynsystem, KeyRevocationList, true, readFully, (InputStream), '',
    'Argument[0]', open-url, manual]
  - [java.net, URL, true, URL, (String), '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[2]',
    open-url, manual]
  - [com.android.hotspot2.osulogin, OsuLoginActivity, true, getHost, (String), '',
    'Argument[0]', open-url, manual]
  - [android.util, Log, true, d, '(String, String)', '', 'Argument[1]', open-url,
    manual]
  - [android.webkit, WebView, true, loadUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.packageinstaller.wear, WearPackageIconProvider, true, enforcePermissions,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.packageinstaller.wear, WearPackageIconProvider, true, getType, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.packageinstaller.wear, WearPackageIconProvider, true, getPackageNameFromUri,
    (Uri), '', 'Argument[0]', create-file, manual]
  - [com.android.dynsystem, InstallationAsyncTask, true, InstallationAsyncTask, '(String,
      String, String, long, long, Context, DynamicSystemManager, ProgressListener)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getDocIdForFileMaybeCreate,
    '(File, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getMostSpecificRootForPath,
    '(String, boolean)', '', 'Argument[0]', create-file, manual]
  - [android.content, Context, true, checkUriPermission, '(Uri, int, int, int)', '',
    'Argument[0]', open-url, manual]
  - [libcore.io, Streams, true, readFully, (InputStream), '', 'Argument[0]', open-url,
    manual]
  - [android.util, Log, true, i, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.util, Log, true, e, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getRootFromDocId,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.dynsystem, VerificationActivity, true, isVerified, (String), '',
    'Argument[0]', open-url, manual]
  - [android.system, Os, true, access, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getDocIdForFile,
    (File), '', 'Argument[0]', create-file, manual]
  - [com.android.printspooler.ui, PrintActivity, true, transformDocumentAndFinish,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, openOutputStream, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [java.util, Set<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getDocumentUri, '(String,
      List<UriPermission>)', '', 'Argument[0]', create-file, manual]
  - [android.os, Bundle, true, putParcelable, '(String, Parcelable)', '', 'Argument[1]',
    open-url, manual]
  - [android.provider, DocumentsContract, true, getDocumentId, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.os, Bundle, true, putParcelable, '(String, Parcelable)', '', 'Argument[1]',
    create-file, manual]
  - [java.util, Set<Uri>, true, contains, (Object), '', 'Argument[0]', open-url, manual]
  - [java.util, Set<Uri>, true, remove, (Object), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, delete, '(Uri, String, String[])', '',
    'Argument[0]', open-url, manual]
  - [com.android.statementservice.retriever, URLFetcher, true, getWebContentFromUrl,
    '(URL, long, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.statementservice.retriever, WebAsset, true, WebAsset, (URL), '',
    'Argument[0]', open-url, manual]
  - [com.android.statementservice.retriever, URLFetcher, true, getWebContentFromUrlWithRetry,
    '(URL, long, int, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.settings, Arguments, true, Arguments, '(Uri, String, String[],
      boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.statementservice, IntentFilterVerificationReceiver, true, createWebAssetString,
    '(String, String)', '', 'Argument[1]', open-url, manual]
  - [java.util, ArrayList<String>, true, add, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.providers.settings, SettingsProvider, true, getValidTableOrThrow,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util.regex, Pattern, true, matcher, (CharSequence), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[1]', open-url,
    manual]
  - [android.util, Slog, true, v, '(String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.providers.settings, Arguments, true, computeTableForSetting, '(Uri,
      String)', '', 'Argument[0]', open-url, manual]
  - [android.view, AccessibilityDelegate, true, performAccessibilityAction, '(View,
      int, Bundle)', '', 'Argument[0]', open-url, manual]
  - [android.os, Handler, true, obtainMessage, '(int, int, int, Object)', '', 'Argument[3]',
    open-url, manual]
  - [android.content, Context, true, getString, '(int, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [java.net, Socket, true, Socket, '(String, int)', '', 'Argument[0]', open-url,
    manual]
  - [android.sax, Handler, true, startRoot, '(String, String, Attributes)', '', 'Argument[0]',
    open-url, manual]
  - [android.sax, Children, true, get, '(String, String)', '', 'Argument[0]', open-url,
    manual]
  - [android.sax, Element, true, toString, '(String, String)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, getExifWriterStream, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.io, FileOutputStream, true, FileOutputStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, RandomAccessFile, true, RandomAccessFile, '(File, String)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, rewriteExif, '(String, Collection<ExifTag>)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, writeExif, '(byte[], String)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, forceRewriteExif, '(String,
      Collection<ExifTag>)', '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<Integer,Object>', true, put, '(Integer, Object)', '', 'Argument[1]',
    create-file, manual]
  - [com.google.android.mms.util, PduCache, true, normalizeKey, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.google.android.mms.util, PduCache, true, setUpdating, '(Uri, boolean)', '',
    'Argument[0]', open-url, manual]
  - [java.util, HashSet<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, HashSet<Uri>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [com.google.android.mms.pdu, PduPart, true, setFilename, '(byte[])', '', 'Argument[0]',
    create-file, manual]
  - [com.google.android.mms.util, SqliteWrapper, true, query, '(Context, ContentResolver,
      Uri, String[], String, String[], String)', '', 'Argument[2]', open-url, manual]
  - [android.content, ContentUris, true, parseId, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.google.android.mms.util, PduCache, true, isUpdating, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.google.android.mms.util, 'AbstractCache<Uri,PduCacheEntry>', true, get, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.google.android.mms.util, PduCache, true, put, '(Uri, PduCacheEntry)', '',
    'Argument[0]', open-url, manual]
  - [java.lang, String, true, startsWith, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.telephony.mbms, MbmsUtils, true, isContainedIn, '(File, File)', '', 'Argument[1]',
    create-file, manual]
  - [android.net, Builder, true, encodedPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.telephony.mbms, MbmsDownloadReceiver, true, verifyTempFilePath, '(Context,
      String, Uri)', '', 'Argument[2]', create-file, manual]
  - [android.util, Log, true, w, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.telephony.mbms, MbmsDownloadReceiver, true, moveToFinalLocation, '(Uri,
      Path, String)', '', 'Argument[0]', create-file, manual]
  - [android.telephony.mbms, MbmsUtils, true, getEmbmsTempFileDirForService, '(Context,
      String)', '', 'Argument[1]', create-file, manual]
  - [android.test.mock, MockIContentProvider, true, getType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.test.mock, MockIContentProvider, true, canonicalize, '(String, String,
      Uri)', '', 'Argument[2]', open-url, manual]
  - [android.telephony.mbms, MbmsDownloadReceiver, true, generateSingleTempFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [android.telephony.mbms, MbmsTempFileProvider, true, getUriForFile, '(Context,
      String, File)', '', 'Argument[2]', create-file, manual]
  - [java.util, List<Uri>, true, contains, (Object), '', 'Argument[0]', create-file,
    manual]
  - [android.content, Context, true, getFileStreamPath, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, move, '(Path, Path, CopyOption[])', '', 'Argument[0]',
    create-file, manual]
  - [android.telephony.mbms, MbmsUtils, true, isContainedIn, '(File, File)', '', 'Argument[0]',
    create-file, manual]
  - [androidx.collection, 'LruCache<Uri,byte[]>', true, get, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String)', '', 'Argument[3]', sql, manual]
  - [com.android.ex.chips, DefaultPhotoManager, true, fetchPhotoAsync, '(RecipientEntry,
      Uri, PhotoManagerCallback)', '', 'Argument[1]', open-url, manual]
  - [com.android.ex.chips, RecipientEntry, true, RecipientEntry, '(int, String, String,
      int, String, long, Long, long, Uri, boolean, boolean, boolean, String, String[])',
    '', 'Argument[8]', open-url, manual]
  - [androidx.collection, 'LruCache<Uri,byte[]>', true, put, '(Uri, byte[])', '',
    'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,String>', true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<String,String>', true, get, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, Intent, true, putExtra, '(String, Parcelable)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.ex.photo, PhotoViewIntentBuilder, true, setThumbnailUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.ex.photo, PhotoViewIntentBuilder, true, setResolvedPhotoUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.telephony, CarrierMatchingRule, true, CarrierMatchingRule,
    '(String, String, String, String, String, String, String, String, List<String>,
      int, String, int)', '', 'Argument[2]', sql, manual]
  - [android.os, BaseBundle, true, putString, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.lang, ClassLoader, true, getResource, (String), '', 'Argument[0]', open-url,
    manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [libcore.io, ClassPathURLConnection, true, ClassPathURLConnection, (URL), '',
    'Argument[0]', open-url, manual]
  - [java.net, JarURLConnection, true, JarURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.org.kxml2.io, KXmlParser, true, setInput, '(InputStream, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, Context, true, declarePrefix, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [org.xml.sax.helpers, Context, true, getPrefix, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.util, Hashtable<>, true, put, '(Object, Object)', '', 'Argument[1]', open-url,
    manual]
  - [libcore.io, IoBridge, true, open, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileOutputStream, true, FileOutputStream, '(File, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileSystem, true, normalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileSystem, true, prefixLength, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.ch, FileChannelImpl, true, open, '(FileDescriptor, String, boolean, boolean,
      Object)', '', 'Argument[1]', create-file, manual]
  - [java.io, FileSystem, true, resolve, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [java.io, FileSystem, true, resolve, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, File, '(String, int)', '', 'Argument[0]', create-file, manual]
  - [java.io, FileSystem, true, canonicalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, slashify, '(String, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [java.lang, String, true, String, '(char[], int, int)', '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkRead, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkWrite, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileSystem, true, createFileExclusively, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, SecurityManager, true, checkDelete, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, resolve, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.io, UnixFileSystem, true, canonicalize0, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, ExpiringCache, true, get, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, parentOrNull, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, ExpiringCache, true, put, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [dalvik.system, VmPolicy, true, onPathAccess, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, getBooleanAttributes0, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, ClassLoader, true, getBootstrapResource, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.io, UnixFileSystem, true, createFileExclusively0, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, UnixFileSystem, true, createDirectory0, (File), '', 'Argument[0]', create-file,
    manual]
  - [java.util, ArrayList<File>, true, add, (File), '', 'Argument[0]', create-file,
    manual]
  - [java.io, IOException, true, IOException, '(String, Throwable)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileSystem, true, compare, '(File, File)', '', 'Argument[1]', create-file,
    manual]
  - [java.net, AddressCache, true, put, '(String, int, InetAddress[])', '', 'Argument[0]',
    open-url, manual]
  - [java.net, AddressCache, true, putUnknownHost, '(String, int, String)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLConnection, true, URLConnection, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, JarURLConnection, true, parseSpecs, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetAddressImpl, true, lookupAllHostAddr, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, InetAddress, true, getAllByName, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetSocketAddress, true, checkHost, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetSocketAddressHolder, true, InetSocketAddressHolder, '(String, InetAddress,
      int)', '', 'Argument[0]', open-url, manual]
  - [java.net, URL, true, URL, '(String, String, int, String, URLStreamHandler)',
    '', 'Argument[1]', open-url, manual]
  - [java.net, URL, true, URL, '(String, String, int, String, URLStreamHandler)',
    '', 'Argument[3]', create-file, manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.io, IOException, true, IOException, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[3]',
    create-file, manual]
  - [java.net, Parts, true, Parts, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [java.net, Parts, true, Parts, '(String, String)', '', 'Argument[1]', open-url,
    manual]
  - [java.net, URI, true, toString, '(String, String, String, String, String, int,
      String, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.net, URI, true, checkPath, '(String, String, String)', '', 'Argument[2]',
    create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, int, String, String, String)',
    '', 'Argument[4]', create-file, manual]
  - [java.net, URI, true, resolve, '(URI, URI)', '', 'Argument[1]', open-url, manual]
  - [sun.misc, URLClassPath, true, getResource, '(String, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, FileSystemException, true, FileSystemException, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.util.jar, Manifest, true, getAttributes, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, FileSystemException, true, FileSystemException, (String), '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystem, true, getPath, '(String, String[])', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, newInputStream, '(Path, OpenOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, provider, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file.spi, FileSystemProvider, true, newByteChannel, '(Path, Set<? extends
      OpenOption>, FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.util, Objects, true, requireNonNull, (T), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Event, true, Event, '(EventType, Path, BasicFileAttributes, IOException)',
    '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, readAttributes, '(Path, Class<A>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, newByteChannel, '(Path, Set<? extends OpenOption>,
      FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, isSameFile, '(Path, Path)', '', 'Argument[1]', create-file,
    manual]
  - [java.nio.file.spi, FileSystemProvider, true, newDirectoryStream, '(Path, Filter<?
      super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.net, URI, true, appendSchemeSpecificPart, '(StringBuffer, String, String,
      String, String, int, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.nio.file, FileTreeWalker, true, visit, '(Path, boolean, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Event, true, Event, '(EventType, Path, IOException)', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file, Files, true, newByteChannel, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, delete, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, isSameFile, '(Path, Path)', '',
    'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, isSameFile, '(Path, Path)', '',
    'Argument[1]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, isHidden, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, readAttributes, '(Path, Class<A>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileTreeWalker, true, walk, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, visitFile, '(Path, BasicFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, visitFileFailed, '(Path, IOException)',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, preVisitDirectory, '(Path,
      BasicFileAttributes)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, postVisitDirectory, '(Path,
      IOException)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, walkFileTree, '(Path, Set<FileVisitOption>, int,
      FileVisitor<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, newInputStream, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, lines, '(Path, Charset)', '', 'Argument[0]', create-file,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[2]', create-file,
    manual]
  - [sun.net.www, URLConnection, true, URLConnection, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URLStreamHandler, true, sameFile, '(URL, URL)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLStreamHandler, true, sameFile, '(URL, URL)', '', 'Argument[1]',
    open-url, manual]
  - [sun.nio.ch, FileChannelImpl, true, FileChannelImpl, '(FileDescriptor, String,
      boolean, boolean, boolean, Object)', '', 'Argument[1]', create-file, manual]
  - [java.util, 'HashMap<JarFile,URL>', true, remove, (Object), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, AbstractFileSystemProvider, true, implDelete, '(Path, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileSystemProvider, true, readAttributes, '(Path, Class<A>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [sun.net.ftp, FtpDirEntry, true, FtpDirEntry, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixFileAttributes, true, get, '(UnixPath, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixException, true, rethrowAsIOException, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, AccessDeniedException, true, AccessDeniedException, '(String,
      String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, open, '(int, UnixPath, String, Flags, int)',
    '', 'Argument[1]', create-file, manual]
  - [java.nio.file, NoSuchFileException, true, NoSuchFileException, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, open, '(UnixPath, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, FileAlreadyExistsException, true, FileAlreadyExistsException,
    '(String, String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.ch, FileChannelImpl, true, open, '(FileDescriptor, String, boolean, boolean,
      boolean, Object)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, stat, '(UnixPath, UnixFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, lstat, '(UnixPath, UnixFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, newFileChannel, '(int, UnixPath, String,
      Set<? extends OpenOption>, int)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixException, true, rethrowAsIOException, '(UnixPath, UnixPath)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createBasicView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createPosixView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixPath, true, encode, '(UnixFileSystem, String)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixDirectoryStream, true, UnixDirectoryStream, '(UnixPath, long,
      Filter<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createOwnerView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileSystemProvider, true, getFileAttributeView, '(Path, Class<V>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, NativeBuffer, true, setOwner, (Object), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, copyToNativeBuffer, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, Basic, true, Basic, '(UnixPath, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, boolean)', '', 'Argument[0]',
    open-url, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, unlink, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, AtomicMoveNotSupportedException, true, AtomicMoveNotSupportedException,
    '(String, String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, newFileChannel, '(UnixPath, Set<? extends
      OpenOption>, int)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, rmdir, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, DirectoryNotEmptyException, true, DirectoryNotEmptyException,
    (String), '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, move, '(UnixPath, UnixPath, CopyOption[])', '',
    'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, copyDirectory, '(UnixPath, UnixFileAttributes,
      UnixPath, Flags)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, opendir, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, NotDirectoryException, true, NotDirectoryException, (String),
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, Posix, true, Posix, '(UnixPath, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixSecureDirectoryStream, true, UnixSecureDirectoryStream, '(UnixPath,
      long, int, Filter<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixPath, true, UnixPath, '(UnixFileSystem, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.gsi, IGsiService, true, openInstall, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.util, Slog, true, i, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[8]',
    open-url, manual]
  - [android.media, SoundPool, true, load, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [com.android.server.audio, SoundEffectsHelper, true, findOrAddResourceByFileName,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.server.audio, Resource, true, Resource, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[0]', open-url,
    manual]
  - [com.android.internal.util, FrameworkStatsLog, true, write, '(int, String, int,
      String, int, int, int, boolean, int, int, boolean, int, int, String)', '', 'Argument[3]',
    open-url, manual]
  - [android.util, Slog, true, w, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.content, Intent, true, setDataAndType, '(Uri, String)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, Intent, true, setComponent, (ComponentName), '', 'Argument[0]',
    open-url, manual]
  - [java.io, PrintWriter, true, println, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.content, IContentProvider, true, checkUriPermission, '(String, String,
      Uri, int, int)', '', 'Argument[2]', open-url, manual]
  - [com.android.server.textclassifier, IconsUriHelper, true, getResourceInfo, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProvider, true, openPipeHelper, '(Uri, String, Bundle,
      T, PipeDataWriter<T>)', '', 'Argument[0]', open-url, manual]
  - [com.android.server.uri, GrantUri, true, GrantUri, '(int, Uri, int)', '', 'Argument[1]',
    open-url, manual]
  - [android.os, PatternMatcher, true, match, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.content, IntentFilter, true, addDataPath, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.server.am, ActivityManagerService, true, checkContentProviderUriPermission,
    '(Uri, int, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.mapapi, BluetoothMapEmailProvider, true, getAccountId,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.avrcpcontroller, AvrcpCoverArtProvider, true, debug, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.google.android.mms.pdu, PduPersister, true, load, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppManager, true, saveSendingFileInfo, '(String,
      ArrayList<Uri>, boolean, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isForbiddenContent, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[3]',
    open-url, manual]
  - [android.util, Log, true, v, '(String, String)', '', 'Argument[1]', sql, manual]
  - [android.content, ContentValues, true, put, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [android.content, Intent, true, setDataAndNormalize, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, queryRecord, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, openReceivedFile, '(Context,
      String, String, Long, Uri)', '', 'Argument[1]', create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, openReceivedFile, '(Context,
      String, String, Long, Uri)', '', 'Argument[4]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, updateVisibilityToHidden,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentValues, true, put, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isInExternalStorageDir,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[3]',
    create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppSendFileInfo, true, BluetoothOppSendFileInfo,
    '(String, String, long, FileInputStream, int)', '', 'Argument[0]', create-file,
    manual]
  - [android.content, Intent, true, putExtra, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.util.regex, Matcher, true, appendReplacement, '(StringBuffer, String)',
    '', 'Argument[1]', open-url, manual]
  - [android.content, Context, true, getString, '(int, Object[])', '', 'Argument[1]',
    create-file, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String)', '', 'Argument[3]', sql, manual]
  - [android.net, Uri, true, parse, (String), '', 'Argument[0]', sql, manual]
  - [java.lang, StringBuilder, true, append, (Object), '', 'Argument[0]', open-url,
    manual]
  - [com.android.bluetooth.opp, BluetoothOppSendFileInfo, true, generateFileInfo,
    '(Context, Uri, String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppManager, true, saveSendingFileInfo, '(String,
      String, boolean, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.database, Cursor, true, setNotificationUri, '(ContentResolver, Uri)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, generateUri, '(Uri, BluetoothOppSendFileInfo)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, putSendFileInfo, '(Uri,
      BluetoothOppSendFileInfo)', '', 'Argument[0]', open-url, manual]
  - [java.util, ArrayList<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, update, '(String, ContentValues,
      String, String[])', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, update, '(String, ContentValues,
      String, String[])', '', 'Argument[3]', sql, manual]
  - [android.content, ContentResolver, true, notifyChange, '(Uri, ContentObserver)',
    '', 'Argument[0]', open-url, manual]
  - [android.view, ContextMenu, true, setHeaderTitle, (CharSequence), '', 'Argument[0]',
    create-file, manual]
  - [android.database.sqlite, SQLiteDatabase, true, delete, '(String, String, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, delete, '(String, String, String[])',
    '', 'Argument[2]', sql, manual]
  - [com.android.bluetooth.opp, BluetoothOppShareInfo, true, BluetoothOppShareInfo,
    '(int, Uri, String, String, String, int, String, int, int, int, long, long, long,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [java.util, ArrayList<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isBluetoothShareUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, fileExists, '(Context,
      Uri)', '', 'Argument[1]', create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isRecognizedFileType, '(Context,
      Uri, String)', '', 'Argument[1]', create-file, manual]
  - [android.content, Intent, true, setDataAndTypeAndNormalize, '(Uri, String)', '',
    'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, openFileDescriptor, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, Intent, true, setDataAndTypeAndNormalize, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppService, true, stringFromCursor, '(String,
      Cursor, String)', '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<Uri,BluetoothOppSendFileInfo>', true,
    put, '(Uri, BluetoothOppSendFileInfo)', '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<Uri,BluetoothOppSendFileInfo>', true,
    get, (Object), '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<Uri,BluetoothOppSendFileInfo>', true,
    remove, (Object), '', 'Argument[0]', open-url, manual]
  - [org.chromium.webview_shell, WebViewBrowserActivity, true, setUrlBarText, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.chromium.webview_shell, WebViewBrowserActivity, true, loadUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.chromium.webview_shell, FilePermissionRequest, true, FilePermissionRequest,
    (String), '', 'Argument[0]', open-url, manual]
  - [android.widget, EditText, true, setText, '(CharSequence, BufferType)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.camera.data, PhotoDataFactory, true, decodeBitmapDimensions, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.camera.data, FilmstripItemData, true, FilmstripItemData, '(long,
      String, String, Date, Date, String, Uri, Size, long, int, Location)', '', 'Argument[5]',
    create-file, manual]
  - [android.graphics, BitmapFactory, true, decodeFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.camera.data, VideoItemData, true, VideoItemData, '(long, String,
      String, Date, Date, String, Uri, Size, long, int, Location, long)', '', 'Argument[5]',
    create-file, manual]
  - [com.android.camera.ui, DetailsAdapter, true, resolveResolution, (String), '',
    'Argument[0]', create-file, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, appendWhere, (CharSequence),
    '', 'Argument[0]', sql, manual]
  - [com.android.contacts, DefaultImageRequest, true, DefaultImageRequest, '(String,
      String, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, DefaultImageRequest, true, DefaultImageRequest, '(String,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, loadPhoto, '(ImageView, Uri,
      int, boolean, boolean, DefaultImageRequest, DefaultImageProvider)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.certinstaller, CertInstallerMain, true, startWifiInstallActivity,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts, ContactLoadingAsyncTask, true, ContactLoadingAsyncTask,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, AsyncQueryHandler, true, startQuery, '(int, Object, Uri, String[],
      String, String[], String)', '', 'Argument[2]', open-url, manual]
  - [com.android.contacts, LoadingAsyncTask, true, LoadingAsyncTask, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.util, ContactPhotoUtils, true, savePhotoFromUriToUri, '(Context,
      Uri, Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.content, Intent, true, putExtra, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.contacts.activities, ContactEditor, true, load, '(String, Uri, Bundle)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, ContactLoader, '(Context, Uri,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [android.provider, Contacts, true, lookupContact, '(ContentResolver, Uri)', '',
    'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, EditorIntents, true, createEditContactIntentForRawContact,
    '(Context, Uri, long, MaterialPalette)', '', 'Argument[1]', open-url, manual]
  - [android.content, Intent, true, Intent, '(String, Uri, Context, Class<?>)', '',
    'Argument[1]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, getIntentForQuickContactLauncherShortcut,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.widget, QuickContactBadge, true, assignContactUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, loadPhoto, '(ImageView, Uri,
      int, boolean, boolean, DefaultImageRequest)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, ContactPickerFragment, true, editContact, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts, ShortcutIntentBuilder, true, createContactShortcutIntent,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, ContactPickerFragment, true, pickContact, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, loadDirectoryPhoto, '(ImageView,
      Uri, boolean, boolean, DefaultImageRequest)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, OnContactPickerActionListener, true, onEditContactAction,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, OnContactPickerActionListener, true, onPickContactAction,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, ContactBrowseListFragment, true, onContactUriQueryFinished,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, isDefaultImageUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManagerImpl, true, createAndApplyDefaultImageForUri,
    '(ImageView, Uri, int, boolean, boolean, DefaultImageProvider)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.contacts, Request, true, createFromUri, '(Uri, int, boolean, boolean,
      DefaultImageProvider, DefaultImageRequest)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, getDefaultImageRequestFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.interactions, ContactDeletionInteraction, true, showDialog,
    '(int, int, Uri)', '', 'Argument[2]', open-url, manual]
  - [com.android.contacts.interactions, ContactDeletionInteraction, true, doDeleteContact,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactSaveService, true, createDeleteContactIntent, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, ContactBrowseListFragment, true, setSelectedContactUri,
    '(Uri, boolean, boolean, boolean, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, OnContactBrowserActionListener, true, onViewContactAction,
    '(int, Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.content, Editor, true, putString, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, ContactLoader, '(Context, Uri,
      boolean, boolean, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, ContactBrowseListFragment, true, viewContact, '(int,
      Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, EditorIntents, true, createEditContactIntent, '(Context,
      Uri, MaterialPalette, long)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, loadEncodedContactEntity, '(Uri,
      Uri)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, loadContactEntity, '(ContentResolver,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.util, ContactPhotoUtils, true, isFilePathAndNotStorage,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, composeQuickContactIntent,
    '(Context, Uri, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, composeQuickContactIntent,
    '(Context, Uri, int, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorFragment, true, onSaveCompleted, '(boolean,
      int, boolean, Uri, Long)', '', 'Argument[3]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorFragment, true, getNameToDisplay, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorUtils, true, maybeConvertToLegacyLookupUri,
    '(Context, Uri, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[9]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorFragment, true, load, '(String, Uri,
      Bundle)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, Listener, true, onContactSplit, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.vcard, ExportRequest, true, ExportRequest, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, startQuickContact, '(Activity,
      Uri, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, setDirectoryMetaData, '(String, String,
      String, String, int)', '', 'Argument[0]', create-file, manual]
  - [com.android.contacts.util, UriUtils, true, isEncodedContactUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.net, Uri, true, withAppendedPath, '(Uri, String)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.vcard, ExportRequest, true, ExportRequest, (Uri), '', 'Argument[0]',
    create-file, manual]
  - [com.android.contacts.model, ContactLoader, true, loadContactHeaderData, '(Cursor,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [android.util, Log, true, d, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.provider, QuickContact, true, showQuickContact, '(Context, Rect, Uri,
      int, String[])', '', 'Argument[2]', open-url, manual]
  - [com.android.contacts.vcard, ExportVCardActivity, true, getOpenableUriDisplayName,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts, Request, true, Request, '(long, Uri, int, boolean, boolean,
      DefaultImageProvider, DefaultImageRequest)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.deskclock.data, SettingsModel, true, setDefaultAlarmRingtoneUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, Set<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [com.android.contacts.model, ContactLoader, true, setNewLookup, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, importVCard, '(Uri[],
      String[])', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, VCardCacheThread, true, VCardCacheThread, '(Uri[],
      String[])', '', 'Argument[0]', open-url, manual]
  - [com.android.deskclock.data, SettingsDAO, true, setDefaultAlarmRingtoneUri, '(SharedPreferences,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', open-url,
    manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, copyTo, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, readUriToLocalFile, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, isStorageUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, getDisplayName, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.deskclock, HandleApiCalls, true, getSelectedTimer, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContextWrapper, true, getFileStreamPath, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.deskclock.data, AlarmModel, true, setDefaultAlarmRingtoneUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, startImport, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardDialogFragment, true, show, '(Activity,
      Uri, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, readUriToLocalUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, importVCard, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[9]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, setDirectoryMetaData, '(String,
      String, String, String, int)', '', 'Argument[0]', create-file, manual]
  - [com.android.contacts.common.model, ContactLoader, true, loadEncodedContactEntity,
    '(Uri, Uri)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.common.model, ContactLoader, true, loadContactEntity, '(ContentResolver,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.common.model, ContactLoader, true, loadContactHeaderData,
    '(Cursor, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.dialer.app.voicemail, VoicemailPlaybackPresenter, true, setPlaybackView,
    '(PlaybackView, long, Uri, boolean, View)', '', 'Argument[2]', open-url, manual]
  - [com.android.dialer.app.calllog, CallLogAsyncTaskUtil, true, markVoicemailAsRead,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.dialer.app.calllog, NewCall, true, NewCall, '(Uri, Uri, String, int,
      String, String, String, String, long, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.dialer.common, Assert, true, isNotNull, (T), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentResolver, true, registerContentObserver, '(Uri, boolean,
      ContentObserver)', '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.callintent, CallIntentBuilder, true, CallIntentBuilder, '(Uri,
      CallSpecificAppData)', '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.app.voicemail, VoicemailPlaybackPresenter, true, getFileName,
    '(String, String, String, long)', '', 'Argument[0]', create-file, manual]
  - [android.support.v4.content, FileProvider, true, getUriForFile, '(Context, String,
      File)', '', 'Argument[2]', create-file, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadDialerThumbnailOrPhoto,
    '(QuickContactBadge, Uri, long, Uri, String, int)', '', 'Argument[1]', open-url,
    manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadDialerThumbnailOrPhoto,
    '(QuickContactBadge, Uri, long, Uri, String, int)', '', 'Argument[3]', open-url,
    manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadDirectoryPhoto,
    '(ImageView, Uri, boolean, boolean, DefaultImageRequest)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadPhoto, '(ImageView,
      Uri, int, boolean, boolean, DefaultImageRequest, DefaultImageProvider)', '',
    'Argument[1]', open-url, manual]
  - [com.android.dialer.contactsfragment, ContactViewHolder, true, bind, '(String,
      String, Uri, long, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.dialer.phonelookup, Builder, true, setPhotoThumbnailUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.phonelookup, Builder, true, setPhotoUri, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.phonelookup, Builder, true, setLookupUri, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.dialer.util, UriUtils, true, NoneForNonContactsUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.common, LogUtil, true, d, '(String, String, Object[])', '',
    'Argument[2]', open-url, manual]
  - [com.android.dialer.common, LogUtil, true, d, '(String, String, Object[])', '',
    'Argument[5]', open-url, manual]
  - [com.android.dialer.oem, Builder, true, setPhotoUri, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManagerImpl, true, isDrawableUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, isDefaultImageUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManagerImpl, true, createAndApplyDefaultImageForUri,
    '(ImageView, Uri, int, boolean, boolean, DefaultImageProvider)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.dialer.contactphoto, Request, true, createFromUri, '(Uri, int, boolean,
      boolean, DefaultImageProvider)', '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.searchfragment.common, SearchCursor, true, updateQuery, (String),
    '', 'Argument[0]', sql, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, getDefaultImageRequestFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.util, UriUtils, true, areEqual, '(Uri, Uri)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.util, UriUtils, true, uriToString, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.common, LogUtil, true, d, '(String, String, Object[])', '',
    'Argument[6]', open-url, manual]
  - [com.android.dialer.util, UriUtils, true, isEncodedContactUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.dialercontact, Builder, true, setContactUri, (String), '',
    'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.dialer.contactphoto, Request, true, Request, '(long, Uri, int, boolean,
      boolean, DefaultImageProvider)', '', 'Argument[1]', open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, isBusinessContactUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.util, SparseArray<String>, true, put, '(int, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.dialer.app.calllog, CallLogAdapter, true, getVoicemailId, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui, Metrics, true, sanitizeRoot, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.archives, ArchiveId, true, ArchiveId, '(Uri, int, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.archives, ArchiveId, true, ArchiveId, '(Uri, int, String)',
    '', 'Argument[2]', create-file, manual]
  - [com.android.documentsui.archives, ArchivesProvider, true, buildUriForArchive,
    '(Uri, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.files, LauncherActivity, true, isLaunchUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.documentsui, Metrics, true, getRootIdSafely, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.archives, Archive, true, Archive, '(Context, Uri, int,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.archives, MorePreconditions, true, checkArgumentEquals,
    '(Uri, Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui, SizeIndexKey, true, SizeIndexKey, '(Uri, UserId)', '',
    'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, getRootId, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.clipping, PersistTask, true, PersistTask, '(ClipStorage,
      Iterable<Uri>, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.clipping, RuntimeDocumentClipper, true, getClipDataForDocuments,
    '(List<Uri>, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.clipping, Writer, true, write, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.clipping, RuntimeDocumentClipper, true, createJumboClipData,
    '(List<Uri>, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.archives, ReadableArchive, true, ReadableArchive, '(Context,
      ParcelFileDescriptor, Uri, String, int, Uri)', '', 'Argument[2]', open-url,
    manual]
  - [com.android.documentsui.clipping, UrisSupplier, true, create, '(List<Uri>, ClipStore)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.archives, WriteableArchive, true, WriteableArchive, '(Context,
      ParcelFileDescriptor, Uri, int, Uri)', '', 'Argument[2]', open-url, manual]
  - [android.provider, DocumentsContract, true, buildDocumentUri, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.base, DocumentInfo, true, addMimeTypes, '(ContentResolver,
      Uri, Set<String>)', '', 'Argument[1]', open-url, manual]
  - [android.content, Item, true, Item, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.clipping, ClipStore, true, persistUris, (Iterable<Uri>),
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.files, QuickViewIntentBuilder, true, computeSiblingsRange,
    '(List<Uri>, int)', '', 'Argument[0]', open-url, manual]
  - [androidx.core.util, Preconditions, true, checkNotNull, (T), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.roots, LoadRootTask, true, LoadRootTask, '(T, ProvidersAccess,
      Uri, UserId, LoadRootCallback)', '', 'Argument[2]', open-url, manual]
  - [android.content, ContentResolver, true, getStreamTypes, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, isRootUri, '(Context, Uri)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.documentsui, AbstractActionHandler<T>, true, loadRoot, '(Uri, UserId)',
    '', 'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, isDocumentUri, '(Context, Uri)', '',
    'Argument[1]', open-url, manual]
  - [com.android.documentsui, AbstractActionHandler<T>, true, launchToDocument, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.emergency, Contact, true, Contact, '(Uri, Uri, String, String, String,
      Bitmap)', '', 'Argument[0]', open-url, manual]
  - [android.os, 'AsyncTask<Uri,Void,DocumentStack>', true, executeOnExecutor, '(Executor,
      Uri[])', '', 'Argument[1]', open-url, manual]
  - [com.android.emergency.preferences, EditUserPhotoController, true, onPhotoCropped,
    '(Uri, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.emergency.preferences, EditUserPhotoController, true, copyAndCropPhoto,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.roots, LoadRootTask<T>, true, LoadRootTask<T>, '(T, ProvidersAccess,
      Uri, UserId, LoadRootCallback)', '', 'Argument[2]', open-url, manual]
  - [com.android.documentsui.base, 'Lookup<String,Executor>', true, lookup, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.roots, LoadFirstRootTask<T>, true, LoadFirstRootTask<T>,
    '(T, ProvidersAccess, Uri, LoadRootCallback)', '', 'Argument[2]', open-url, manual]
  - [com.android.documentsui.base, Providers, true, isArchiveUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui, AbstractActionHandler, true, loadDocument, '(Uri, UserId,
      LoadDocStackCallback)', '', 'Argument[0]', open-url, manual]
  - [android.widget, VideoView, true, setVideoURI, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.provider, DocumentsContract, true, isRootsUri, '(Context, Uri)', '',
    'Argument[1]', open-url, manual]
  - [com.android.documentsui, AbstractActionHandler<T>, true, loadFirstRoot, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [androidx.print, PrintHelper, true, printBitmap, '(String, Uri)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.gallery3d.data, DataManager, true, findPathByUri, '(Uri, String)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.gallery3d.data, Path, true, Path, '(Path, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.gallery3d.data, DataManager, true, findPathByUri, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.data, DataManager, true, getMediaObject, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.gallery3d.data, UriImage, true, UriImage, '(GalleryApp, Path, Uri,
      String)', '', 'Argument[2]', open-url, manual]
  - [android.webkit, MimeTypeMap, true, getFileExtensionFromUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.services, CopyJob, true, queryChildren, '(ContentProviderClient,
      Uri, String[])', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.services, CopyJob, true, calculateFileSizesRecursively,
    '(ContentProviderClient, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.services, Job, true, releaseClient, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.services, ResourceException, true, ResourceException,
    '(String, Uri, Exception)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.data, UriSource, true, getMimeType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, forceRewriteExif, (String),
    '', 'Argument[0]', create-file, manual]
  - [android.content, ContentProviderClient, true, query, '(Uri, String[], String,
      String[], String)', '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.data, Path, true, fromString, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.documentsui.services, DirectoryChildrenObserver, true, DirectoryChildrenObserver,
    (Object), '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getMimeType, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, readExif, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, RuntimeException, true, RuntimeException, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getMetadataOrientation,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.content, UriMatcher, true, match, (Uri), '', 'Argument[0]', create-file,
    manual]
  - [com.android.gallery3d.data, MediaSource, true, findPathByUri, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.data, LocalSource, true, getAlbumPath, '(Uri, int)', '',
    'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadBitmap, '(Context,
      Uri, Options)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadBitmapBounds,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadDownsampledBitmap,
    '(Context, Uri, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadConstrainedBitmap,
    '(Uri, Context, int, Rect, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getLocalPathFromUri,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.os, 'AsyncTask<Uri,Void,Bitmap>', true, execute, '(Uri[])', '', 'Argument[0]',
    open-url, manual]
  - [com.android.gallery3d.filtershow.imageshow, MasterImage, true, setUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getExif, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadOrientedConstrainedBitmap,
    '(Uri, Context, int, int, Rect)', '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getMetadataRotation,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.gadget, WidgetDatabaseHelper, true, setWidget, '(int, int,
      String, String)', '', 'Argument[2]', create-file, manual]
  - [com.android.gallery3d.provider, GalleryProvider, true, queryPicasaItem, '(MediaObject,
      String[], String, String[], String)', '', 'Argument[3]', sql, manual]
  - [com.android.gallery3d.filtershow, FilterShowActivity, true, startLoadBitmap,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.io, FileNotFoundException, true, FileNotFoundException, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.os, 'AsyncTask<Uri,Boolean,Boolean>', true, execute, '(Uri[])', '', 'Argument[0]',
    open-url, manual]
  - [android.app.admin, IDevicePolicyManager, true, choosePrivateKeyAlias, '(int,
      Uri, String, IBinder)', '', 'Argument[1]', open-url, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[0]', open-url, manual]
  - [android.text, TextUtils, true, equals, '(CharSequence, CharSequence)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[0]', sql, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[1]', sql, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[2]', sql, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[0]', create-file, manual]
  - [com.android.launcher3.keyboard, CustomActionsPopup, true, CustomActionsPopup,
    '(Launcher, View)', '', 'Argument[1]', open-url, manual]
  - [com.android.launcher3, DatabaseHelper, true, DatabaseHelper, '(Context, String,
      boolean)', '', 'Argument[1]', create-file, manual]
  - [com.android.launcher3.accessibility, LauncherAccessibilityDelegate, true, performResizeAction,
    '(int, View, LauncherAppWidgetInfo)', '', 'Argument[1]', open-url, manual]
  - [com.android.launcher3, ButtonDropTarget, true, supportsAccessibilityDrop, '(ItemInfo,
      View)', '', 'Argument[1]', open-url, manual]
  - [com.android.managedprovisioning.common, StoreUtils, true, copyUriIntoFile, '(ContentResolver,
      Uri, File)', '', 'Argument[1]', create-file, manual]
  - [com.android.managedprovisioning.common, ProvisionLogger, true, logi, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.managedprovisioning.common, ProvisionLogger, true, logi, '(String,
      Throwable)', '', 'Argument[0]', create-file, manual]
  - [com.android.managedprovisioning.model, CustomizationParams, true, createInstance,
    '(Integer, String, String, Context, Utils)', '', 'Argument[2]', open-url, manual]
  - [com.android.managedprovisioning.common, StoreUtils, true, copyUriIntoFile, '(ContentResolver,
      Uri, File)', '', 'Argument[1]', open-url, manual]
  - [com.android.managedprovisioning.model, CustomizationParams, true, CustomizationParams,
    '(int, int, boolean, String, String)', '', 'Argument[4]', open-url, manual]
  - [com.android.managedprovisioning.parser, DisclaimersParser, true, saveDisclaimerContentIntoFile,
    '(Uri, int)', '', 'Argument[0]', open-url, manual]
  - [androidx.appcompat.mms, DefaultApnSettingsLoader, true, trimV4AddrZeros, (String),
    '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, rawQuery, '(String, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [com.android.messaging.util, ContactUtil, true, createRecipientEntry, '(String,
      int, String, int, String, long, String, long, String, boolean)', '', 'Argument[8]',
    open-url, manual]
  - [com.android.messaging.datamodel, DatabaseWrapper, true, explainQueryPlan, '(SQLiteQueryBuilder,
      SQLiteDatabase, String[], String, String[], String, String, String, String)',
    '', 'Argument[4]', sql, manual]
  - [com.android.messaging.datamodel, DatabaseWrapper, true, query, '(String, String[],
      String, String[], String, String, String, String)', '', 'Argument[3]', sql,
    manual]
  - [com.android.managedprovisioning.model, Builder, true, setSupportUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.data, MessagePartData, true, MessagePartData,
    '(String, String, Uri, int, int, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.datamodel.data, PendingAttachmentData, true, createPendingAttachmentData,
    '(String, String, Uri, int, int)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.datamodel.data, PendingAttachmentData, true, PendingAttachmentData,
    '(String, String, Uri, int, int, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarGroupRequestDescriptor, true, convertToDescriptor,
    '(Uri, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.managedprovisioning.model, Builder, true, setPacUrl, (String), '',
    'Argument[0]', open-url, manual]
  - [com.android.messaging.util, UriUtil, true, getUriForResourceFile, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.managedprovisioning.model, Builder, true, setLocation, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.media, FileImageRequestDescriptor, true, FileImageRequestDescriptor,
    '(String, int, int, int, int, boolean, boolean, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.messaging.datamodel.media, AvatarRequestDescriptor, true, AvatarRequestDescriptor,
    '(Uri, int, int, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.data, MessagePartData, true, MessagePartData,
    '(String, Uri, int, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarRequestDescriptor, true, AvatarRequestDescriptor,
    '(Uri, int, int, boolean, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.managedprovisioning.common, LogoUtils, true, saveOrganisationLogo,
    '(Context, Uri)', '', 'Argument[1]', create-file, manual]
  - [com.android.messaging.datamodel.media, UriImageRequestDescriptor, true, UriImageRequestDescriptor,
    '(Uri, int, int, boolean, boolean, boolean, int, int)', '', 'Argument[0]', open-url,
    manual]
  - [com.android.messaging.util, UriUtil, true, isLocalResourceUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, isAvatarUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getAvatarType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getFallbackUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.datamodel.media, UriImageRequestDescriptor, true, UriImageRequestDescriptor,
    '(Uri, int, int, int, int, boolean, boolean, boolean, int, int)', '', 'Argument[0]',
    open-url, manual]
  - [android.media, ExifInterface, true, ExifInterface, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getGroupParticipantUris, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getName, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getIdentifier, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getSimSelected, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getSimColor, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getSimIncoming, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, MediaMetadataRetrieverWrapper, true, setDataSource,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, update, '(Uri, ContentValues, String,
      String[])', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarRequestDescriptor, true, AvatarRequestDescriptor,
    '(Uri, int, int)', '', 'Argument[0]', open-url, manual]
  - [android.graphics, BitmapFactory, true, decodeStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.sms, BugleApnSettingsLoader, true, trimV4AddrZeros, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.io, RandomAccessFile, true, RandomAccessFile, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [android.util, SparseArray<Object>, true, put, '(int, Object)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.messaging.datamodel.data, MessagePartData, true, createMediaMessagePart,
    '(String, Uri, int, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.ui, ContactIconView, true, setImageResourceUri, '(Uri,
      long, String, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarGroupRequestDescriptor, true, AvatarGroupRequestDescriptor,
    '(Uri, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.mmslib.pdu, PduPart, true, setFilename, '(byte[])', '',
    'Argument[0]', create-file, manual]
  - [com.android.messaging.ui, ContactIconView, true, setImageResourceUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversationlist, ShareIntentActivity, true, extractContentType,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversationlist, ShareIntentActivity, true, addSharedPartToDraft,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.datamodel, MediaScratchFileProvider, true, isMediaScratchSpaceUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversation, SaveAttachmentTask, true, SaveAttachmentTask,
    '(Context, Uri, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.util, UriUtil, true, isFileUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, LogUtil, true, v, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.messaging.ui.conversationlist, ShareIntentActivity, true, getTextStringFromContentUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [androidx.collection, 'SimpleArrayMap<Uri,String>', true, put, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, createAvatarUri, '(Uri, CharSequence,
      String, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, createAvatarUri, '(Uri, CharSequence,
      String, String)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, fromLocalResourceWithFallback,
    '(Uri, Uri)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, fromLocalResourceWithFallback,
    '(Uri, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.util, FileUtil, true, isFileUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, FileUtil, true, isSameOrSubDirectory, '(File, File)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.messaging.util, Assert, true, notNull, (Object), '', 'Argument[0]',
    open-url, manual]
  - [com.android.ex.chips, RecipientEntry, true, constructTopLevelEntry, '(String,
      int, String, int, String, long, Long, long, String, boolean, String)', '', 'Argument[8]',
    open-url, manual]
  - [com.android.ex.chips, RecipientEntry, true, constructSecondLevelEntry, '(String,
      int, String, int, String, long, Long, long, String, boolean, String)', '', 'Argument[8]',
    open-url, manual]
  - [com.android.messaging.widget, BaseWidgetFactory, true, getAvatarBitmap, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, FileUtil, true, isInPrivateDir, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.datamodel.data, PendingAttachmentData, true, createPendingAttachmentData,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.mmslib.util, DrmConvertSession, true, close, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.messaging.mmslib, SqliteWrapper, true, update, '(Context, ContentResolver,
      Uri, ContentValues, String, String[])', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.util, UriUtil, true, isSmsMmsUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.nfc, NdefRecord, true, createUri, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isValidUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.nfc, BeamShareActivity, true, tryUri, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContextWrapper, true, grantUriPermission, '(String, Uri, int)',
    '', 'Argument[1]', open-url, manual]
  - [android.nfc, BeamShareData, true, BeamShareData, '(NdefMessage, Uri[], UserHandle,
      int)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.ui.conversation, SaveAttachmentTask, true, addAttachmentToSave,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversation, AttachmentToSave, true, AttachmentToSave,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.quicksearchbox, PackageIconLoader, true, getDrawable, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.quicksearchbox, IconLaterTask, true, IconLaterTask, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.quicksearchbox, PackageIconLoader, true, getResourceId, (Uri), '',
    'Argument[0]', open-url, manual]
  - [org.apache.http.client.methods, HttpGet, true, HttpGet, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.quicksearchbox, SuggestionUtils, true, makeKeyComponent, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.quicksearchbox, SuggestionUtils, true, makeKeyComponent, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.quicksearchbox.google, GoogleSuggestionProvider, true, getQuery,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings, ProxySelector, true, validate, '(String, String, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.development, DSULoader, true, readAll, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.development, Fetcher, true, fetch, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.homepage.contextualcards, CardContentProvider, true, bulkInsert,
    '(Uri, ContentValues[])', '', 'Argument[0]', open-url, manual]
  - [com.android.settings.homepage.contextualcards, Builder, true, setSliceUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.homepage.contextualcards, CardContentProvider, true, getTableFromMatch,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, delete, '(Uri, String, String[])', '',
    'Argument[2]', sql, manual]
  - [com.android.settings.network.telephony, Enhanced4gLteSliceHelper, true, getEnhanced4gLteSlice,
    '(Uri, boolean, int)', '', 'Argument[0]', open-url, manual]
  - [androidx.slice.builders, ListBuilder, true, ListBuilder, '(Context, Uri, long)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.settings.notification.app, NotificationSoundPreference, true, setRingtone,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [androidx.preference, Preference, true, callChangeListener, (Object), '', 'Argument[0]',
    open-url, manual]
  - [android.media, RingtoneManager, true, isDefault, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.android.settings.slices, CustomSliceRegistry, true, isValidUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.settings.slices, CustomSliceRegistry, true, getSliceClassByUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SlicesDatabaseAccessor, true, getSliceDataFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, CustomSliceRegistry, true, removeParameterFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, get, (Object), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.slices, SliceBackgroundWorker, true, getInstance, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SliceBuilderUtils, true, getPathData, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SlicesDatabaseAccessor, true, buildSliceData, '(Cursor,
      Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SliceBackgroundWorker, true, createInstance, '(Context,
      Uri, Class<? extends SliceBackgroundWorker<>>)', '', 'Argument[1]', open-url,
    manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, put, '(Uri, SliceBackgroundWorker<>)',
    '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,Integer>', true, put, '(Uri, Integer)', '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<Uri,Integer>', true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<Uri,Integer>', true, remove, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.lang.reflect, 'Constructor<? extends SliceBackgroundWorker<>>', true, newInstance,
    '(Object[])', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SlicesFeatureProvider, true, getSliceableFromUri,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, registerIntentToUri,
    '(IntentFilter, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, startBackgroundWorker,
    '(Sliceable, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, Builder, true, setUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, loadSliceInBackground,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, VolumeSliceHelper, true, unregisterUri, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settingslib, SliceBroadcastRelay, true, unregisterReceivers, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, stopBackgroundWorker,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,SliceData>', true, get, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util, 'Map<Uri,Class<? extends CustomSliceable>>', true, get, (Object),
    '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,Class<? extends CustomSliceable>>', true, containsKey, (Object),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.users, EditUserPhotoController, true, onPhotoCropped, '(Uri,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.settings.users, EditUserPhotoController, true, copyAndCropPhoto,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, createWifiCallingSlice,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.network.telephony, Enhanced4gLteSliceHelper, true, createEnhanced4gLteSlice,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, createWifiCallingPreferenceSlice,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, getSliceStub, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [java.util, List<Uri>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util, 'Map<Uri,SliceData>', true, remove, (Object), '', 'Argument[0]', open-url,
    manual]
  - [com.android.settings.slices, VolumeSliceHelper, true, registerIntentToUri, '(Context,
      IntentFilter, Uri, int)', '', 'Argument[2]', open-url, manual]
  - [java.util, 'Map<Uri,SliceData>', true, put, '(Uri, SliceData)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, loadSlice, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.settingslib, SliceBroadcastRelay, true, registerReceiver, '(Context,
      Uri, Class<? extends BroadcastReceiver>, IntentFilter)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, getNonActionableWifiCallingSlice,
    '(CharSequence, CharSequence, Uri, PendingIntent)', '', 'Argument[2]', open-url,
    manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, getWifiCallingSlice,
    '(Uri, boolean, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, getWifiCallingPreferenceSlice,
    '(boolean, int, Uri, int)', '', 'Argument[2]', open-url, manual]
  - [com.android.settings.slices, SliceBackgroundWorker, true, getInstance, '(Context,
      Sliceable, Uri)', '', 'Argument[2]', open-url, manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, containsKey, (Object), '',
    'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, remove, (Object), '', 'Argument[0]',
    open-url, manual]
  - [androidx.slice, Builder, true, Builder, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.wallpaperpicker.common, InputStreamProvider, true, fromUri, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.photos, InputStreamSource, true, InputStreamSource, '(Context, Uri)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.wallpaperpicker, WallpaperCropActivity, true, cropImageAndSetWallpaper,
    '(Uri, OnBitmapCroppedHandler, boolean)', '', 'Argument[0]', open-url, manual]
  - [java.io, File, true, File, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [com.android.inputmethod.dictionarypack, MetadataDbHelper, true, registerMetadataDownloadId,
    '(Context, String, long)', '', 'Argument[1]', open-url, manual]
  - [com.android.wallpaperpicker.tileinfo, UriWallpaperInfo, true, UriWallpaperInfo,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.dictionarypack, CompletedDownloadInfo, true, CompletedDownloadInfo,
    '(String, long, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.dictionarypack, UpdateHandler, true, writeMetadataDownloadId,
    '(Context, String, long)', '', 'Argument[1]', open-url, manual]
  - [com.android.inputmethod.dictionarypack, MetadataDbHelper, true, saveLastUpdateTimeOfUri,
    '(Context, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.wallpaperpicker, WallpaperPickerActivity, true, addTemporaryWallpaperTile,
    '(Uri, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.latin.utils, DictionaryInfoUtils, true, replaceFileNameDangerousCharacters,
    (String), '', 'Argument[0]', create-file, manual]
  - [android.net, Builder, true, appendPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.net, Builder, true, appendPath, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentProviderClient, true, getType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.inputmethod.latin, BinaryDictionaryFileDumper, true, getProviderUriBuilder,
    (String), '', 'Argument[0]', create-file, manual]
  - [android.content, ContentProviderClient, true, openAssetFile, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.latin, BinaryDictionaryFileDumper, true, openAssetFileDescriptor,
    '(ContentProviderClient, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentProviderClient, true, delete, '(Uri, String, String[])',
    '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[2]', open-url,
    manual]
  - [com.android.captiveportallogin, CaptivePortalLoginActivity, true, makeURL, (String),
    '', 'Argument[0]', open-url, manual]
  - [android.net, Builder, true, setVenueInfoUrl, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.net, Builder, true, setUserPortalUrl, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.android.providers.contacts.debug, DumpFileProvider, true, extractFileName,
    (Uri), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.contacts.debug, DataExporter, true, ensureValidFileName,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadDrmHelper, true, getOriginalMimeType,
    '(Context, File, String)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, ConcreteFile, true, ConcreteFile, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, findDocumentPath, '(File,
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, startViewIntent, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [android.provider, MediaStore, true, getVolumeName, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getAppendedSelection,
    '(String, Uri)', '', 'Argument[0]', sql, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getAppendedSelection,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getDatabaseForUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, MimeUtils, true, resolveMimeType, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, OpenHelper, true, buildViewIntentForMediaStoreDownload,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getTableName, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [android.system, Os, true, lstat, (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, native_should_open_with_fuse,
    '(long, String, boolean, int)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, native_invalidate_fuse_dentry_cache,
    '(long, String)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.playlist, PlaylistPersister, true, resolvePersister,
    (File), '', 'Argument[0]', create-file, manual]
  - [java.io, FileOutputStream, true, FileOutputStream, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, extractFileExtension, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, Logging, true, dumpPersistentFile, '(Path,
      PrintWriter)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeDownloadFromCursor,
    '(MatrixCursor, Cursor, Set<String>, Bundle)', '', 'Argument[2]', create-file,
    manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeDownloadsFromMediaStore,
    '(MatrixCursor, Bundle, Set<String>, ArrayList<Uri>, String, int, boolean)', '',
    'Argument[2]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeFilesFromSharedStorage,
    '(DownloadsCursor, Set<String>, String)', '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, lines, (Path), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, openSafely, '(File, int)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeSearchFilesFromSharedStorage,
    '(DownloadsCursor, String[], Set<String>, Bundle)', '', 'Argument[2]', create-file,
    manual]
  - [com.android.internal.content, FileSystemProvider, true, querySearchDocuments,
    '(File, String[], Set<String>, Bundle)', '', 'Argument[2]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeFileFromSharedStorage,
    '(MatrixCursor, File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.util, RedactingFileDescriptor, true, RedactingFileDescriptor,
    '(Context, File, int, long[], long[])', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, isRawDocId, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, getAbsoluteFilePath,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, containsCanonical, '(File[],
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, getDocIdForFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.internal.util, ArrayUtils, true, contains, '(T[], T)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.providers.media.scan, ModernMediaScanner, true, scanFile, '(File,
      int, String)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, LocalUriMatcher, true, matchUri, '(Uri, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.scan, Scan, true, Scan, '(File, int, String)', '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, containsCanonical, '(File, File)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, contains, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, includeFile, '(MatrixCursor,
      String, File)', '', 'Argument[2]', create-file, manual]
  - [java.util.function, Consumer<Path>, true, accept, (Path), '', 'Argument[0]',
    create-file, manual]
  - [android.util, Pair, true, create, '(A, B)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, buildSearchSelection,
    '(Bundle, Set<String>, String)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeDownloadFromMediaStore,
    '(MatrixCursor, Cursor, Set<String>, boolean)', '', 'Argument[2]', create-file,
    manual]
  - [com.android.providers.downloads, Helpers, true, isFilenameValidInKnownPublicDir,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadProvider, true, getDownloadIdFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.database, DatabaseUtils, true, stringForQuery, '(SQLiteDatabase, String,
      String[])', '', 'Argument[2]', sql, manual]
  - [android.os, Environment, true, getExternalStoragePublicDirectory, (String), '',
    'Argument[0]', create-file, manual]
  - [android.os.storage, StorageManager, true, getStorageVolume, (File), '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileInputStream, true, FileInputStream, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.providers.media.scan, ModernMediaScanner, true, resolveMediaTypeFromFilePath,
    '(File, String, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadProvider, true, checkInsertPermissions,
    (ContentValues), '', 'Argument[0]', sql, manual]
  - [com.android.dreams.phototable, PhotoSource, true, log, '(String, String)', '',
    'Argument[1]', sql, manual]
  - [com.android.providers.media.util, FileUtils, true, isDirectoryHidden, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.scan, Scan, true, releaseDirectoryLock, (Path), '',
    'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[2]', sql, manual]
  - [com.android.providers.media.util, FileUtils, true, contains, '(File, File)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.server.connectivity, NetworkMonitor, true, readAsString, '(InputStream,
      int, Charset)', '', 'Argument[0]', open-url, manual]
  - [com.android.mms.service, MmsHttpClient, true, execute, '(String, byte[], String,
      boolean, String, int, Bundle, int, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, FileUtils, true, extractRelativePath, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.mms.service, LogUtil, true, d, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.mms.service, MmsHttpClient, true, redactUrlForNonVerbose, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, getFileUri, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, isFileInExternalAndroidDirs,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, isFilenameValidInPublicDownloadsDir,
    (File), '', 'Argument[0]', create-file, manual]
  - [android.net, Network, true, getByName, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.mms.service, MmsHttpClient, true, maybeWaitForIpv4, '(String, URL)',
    '', 'Argument[1]', open-url, manual]
  - [android.net, Network, true, openConnection, '(URL, Proxy)', '', 'Argument[0]',
    open-url, manual]
  - [android.net, NetworkUtils, true, trimV4AddrZeros, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.mms.service.exception, ApnException, true, ApnException, (String),
    '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.mms.service, ApnSettings, true, ApnSettings, '(String, String, int,
      String)', '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.providers.downloads, DownloadProvider, true, getQueryBuilder, '(Uri,
      int)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, logVerboseQueryInfo,
    '(String[], String, String[], String, SQLiteDatabase)', '', 'Argument[2]', sql,
    manual]
  - [com.android.mms.service.exception, MmsHttpException, true, MmsHttpException,
    '(int, String, Throwable)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media.util, FileUtils, true, sanitizePath, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, extractRelativePathForDirectory,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.mtp, MtpDatabase, true, disconnectDocumentsRecursively, '(String,
      String[])', '', 'Argument[1]', sql, manual]
  - [com.android.mtp, MtpDatabase, true, deleteDocumentsAndRootsRecursively, '(String,
      String[])', '', 'Argument[1]', sql, manual]
  - [com.android.providers.media, MediaProvider, true, matchUri, '(Uri, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentUris, true, removeId, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.android.providers.media, MediaProvider, true, queryForSingleItem, '(Uri,
      String[], String, String[], CancellationSignal)', '', 'Argument[0]', open-url,
    manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, update, '(SQLiteDatabase,
      ContentValues, String, String[])', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, update, '(SQLiteDatabase,
      ContentValues, String, String[])', '', 'Argument[3]', sql, manual]
  - [android.content, ContentResolver, true, call, '(String, String, String, Bundle)',
    '', 'Argument[2]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, uncanonicalize, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, notifyContentChanged,
    '(Uri, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, appendWhereExpression,
    '(StringBuilder, String)', '', 'Argument[1]', sql, manual]
  - [com.android.providers.media.util, FileUtils, true, isFileHidden, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.media.scan, ModernMediaScanner, true, isFileAlbumArt, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, getContentUriForFile, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, delete, '(SQLiteDatabase,
      String, String[])', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, delete, '(SQLiteDatabase,
      String, String[])', '', 'Argument[2]', sql, manual]
  - [com.android.providers.downloads, DownloadProvider, true, query, '(Uri, String[],
      String, String[], String)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, logVerboseOpenFileInfo,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, isMimeTypeSupportedInPath,
    '(String, String)', '', 'Argument[0]', create-file, manual]
  - [android.util, Log, true, v, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [com.android.providers.media, MediaProvider, true, renameDirectoryUncheckedForFuse,
    '(String, String, ArrayList<String>)', '', 'Argument[2]', create-file, manual]
  - [com.android.server.telecom.ui, MissedCallNotifierImpl, true, createTelecomPendingIntent,
    '(String, Uri, UserHandle)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, query, '(Uri, String[], Bundle,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, DatabaseUtils, true, createSqlQueryBundle,
    '(String, String[], String)', '', 'Argument[1]', sql, manual]
  - [com.android.phone, ServiceStateProvider, true, isPathPrefixMatch, '(Uri, Uri)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getDefaultTitle, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getTitleFromResourceUri, '(String,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.providers.media, MediaProvider, true, insert, '(Uri, ContentValues,
      Bundle)', '', 'Argument[0]', open-url, manual]
  - [java.io, InputStreamReader, true, InputStreamReader, '(InputStream, Charset)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, delete, '(Uri, Bundle)', '',
    'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, DatabaseUtils, true, createSqlQueryBundle,
    '(String, String[], String)', '', 'Argument[0]', sql, manual]
  - [com.android.providers.calendar, CalendarDatabaseHelper, true, scheduleSync, '(Account,
      boolean, String)', '', 'Argument[2]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, update, '(Uri, ContentValues,
      Bundle)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.playlist, Playlist, true, read, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media, MediaProvider, true, queryForPlaylistMember, '(String,
      Path)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, queryForSingleItem, '(Uri,
      String[], String, String[], CancellationSignal)', '', 'Argument[3]', create-file,
    manual]
  - [com.android.providers.media.playlist, Playlist, true, add, '(int, Path)', '',
    'Argument[1]', create-file, manual]
  - [com.android.providers.media.playlist, Playlist, true, write, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media, MediaProvider, true, openFileCommon, '(Uri, String,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, safeUncanonicalize, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, ensureThumbnail, '(Uri, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, openFileAndEnforcePathPermissionsHelper,
    '(Uri, int, String, CancellationSignal)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, openTypedAssetFileCommon, '(Uri,
      String, Bundle, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getVolumeId, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media, MediaProvider, true, invalidateFuseDentry, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, getFuseDaemonForFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, invalidateFuseDentryCache,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, hasOwnerPackageName, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, isRedactionNeeded, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, invalidateThumbnails, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, invalidateFuseDentry, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, updateImageMetadata, '(ContentValues,
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.scan, MediaScanner, true, scanFile, '(File, int)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkAccess, '(Uri, Bundle,
      File, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkAccess, '(Uri, Bundle,
      File, boolean)', '', 'Argument[2]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, requireOwnershipForItem, '(String,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getRedactionRanges, (File),
    '', 'Argument[0]', create-file, manual]
  - [android.provider, MediaStore, true, getRequireOriginal, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getFuseFile, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media.util, RedactingFileDescriptor, true, open, '(Context,
      File, int, long[], long[])', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, shouldOpenWithFuse, '(String,
      boolean, int)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, deleteAndInvalidate, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, getVolumeName, '(Context,
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, extractTopLevelDir, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, enforceCallingPermission, '(Uri,
      Bundle, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkWorldReadAccess, (String),
    '', 'Argument[0]', create-file, manual]
  - [android.system, Os, true, stat, (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkLeadingPathComponentsWorldExecutable,
    (String), '', 'Argument[0]', create-file, manual]
