extensions:
- addsTo: {extensible: sinkModel, pack: codeql/java-all}
  data:
  - [java.io, InputStreamReader, true, InputStreamReader, '(InputStream, Charset)',
    '', 'Argument[0]', open-url, manual]
  - [org.gradle.internal.resource.transport.http, ApacheDirectoryListingParser, true,
    parse, '(URI, InputStream, String)', '', 'Argument[1]', open-url, manual]
  - [java.util, Properties, true, load, (InputStream), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Intent, true, putExtra, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [androidx.core.net, UriKt, true, toUri, (String), '', 'Argument[0]', open-url,
    manual]
  - [build.tools.generatenimbus, TemplateReader, true, TemplateReader, '(Map<String,String>,
      InputStream)', '', 'Argument[1]', create-file, manual]
  - [java.lang, StringBuilder, true, append, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, PrintWriter, true, println, (String), '', 'Argument[0]', sql, manual]
  - [java.io, PrintStream, true, println, (String), '', 'Argument[0]', sql, manual]
  - [sun.nio.fs, LinuxDosFileAttributeView, true, LinuxDosFileAttributeView, '(UnixPath,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, Basic, true, Basic, '(UnixPath, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, LinuxUserDefinedFileAttributeView, true, LinuxUserDefinedFileAttributeView,
    '(UnixPath, boolean)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, LinuxFileSystemProvider, true, getFileAttributeView, '(Path, Class<V>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileSystemProvider, true, readAttributes, '(Path, Class<A>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.io, PrintStream, true, println, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.net, HttpURLConnection, true, HttpURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [sun.net.www.protocol.https, AbstractDelegateHttpsURLConnection, true, AbstractDelegateHttpsURLConnection,
    '(URL, Proxy, Handler)', '', 'Argument[0]', open-url, manual]
  - [com.sun.net.ssl, HttpsURLConnection, true, HttpsURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.sun.net.ssl.internal.www.protocol.https, DelegateHttpsURLConnection, true,
    DelegateHttpsURLConnection, '(URL, Proxy, Handler, HttpsURLConnection)', '', 'Argument[0]',
    open-url, manual]
  - [java.util, HashSet<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileSystem, true, normalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileSystem, true, prefixLength, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, File, (String), '', 'Argument[0]', create-file, manual]
  - [java.io, FileOutputStream, true, FileOutputStream, '(File, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileSystem, true, resolve, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [java.io, FileSystem, true, resolve, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileInputStream, true, FileInputStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileOutputStream, true, FileOutputStream, (File), '', 'Argument[0]',
    create-file, manual]
  - [java.io, FilePermission, true, FilePermission, '(String, FilePermission, Path,
      Path, int, String)', '', 'Argument[0]', create-file, manual]
  - [java.io, File, true, File, '(String, int)', '', 'Argument[0]', create-file, manual]
  - [java.io, FileSystem, true, canonicalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkRead, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkWrite, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, FileSystem, true, getPath, '(String, String[])', '', 'Argument[0]',
    create-file, manual]
  - [java.lang, SecurityManager, true, checkDelete, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, DeleteOnExitHook, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.security, Permission, true, Permission, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, RandomAccessFile, true, RandomAccessFile, '(File, String, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [java.io, FileSystem, true, compare, '(File, File)', '', 'Argument[1]', create-file,
    manual]
  - [java.io, IOException, true, IOException, '(String, Throwable)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, FilePermission, true, FilePermission, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [java.net, SocketPermission, true, SocketPermission, '(String, String)', '', 'Argument[0]',
    open-url, manual]
  - [java.lang, ClassLoader, true, findResource, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.util, Optional, true, of, (T), '', 'Argument[0]', open-url, manual]
  - [java.net, HttpConnectSocketImpl, true, privilegedDoTunnel, '(String, int)', '',
    'Argument[0]', open-url, manual]
  - [java.lang, SecurityManager, true, checkConnect, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, HttpConnectSocketImpl, true, doTunnel, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URL, true, URL, (String), '', 'Argument[0]', open-url, manual]
  - [java.net, InetSocketAddress, true, checkHost, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetSocketAddressHolder, true, InetSocketAddressHolder, '(String, InetAddress,
      int)', '', 'Argument[0]', open-url, manual]
  - [java.net, URLConnection, true, URLConnection, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, JarURLConnection, true, parseSpecs, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(URL, String)', '', 'Argument[0]', open-url, manual]
  - [java.net, InetAddress, true, getAddressesFromNameService, '(String, InetAddress)',
    '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentMap<String,Addresses>', true, remove, '(Object,
      Object)', '', 'Argument[0]', open-url, manual]
  - [java.net, CachedAddresses, true, CachedAddresses, '(String, InetAddress[], long)',
    '', 'Argument[0]', open-url, manual]
  - [java.net, UnknownHostException, true, UnknownHostException, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.net, InetAddressImpl, true, lookupAllHostAddr, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, toString, '(String, String, String, String, String, int,
      String, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.net, URI, true, checkPath, '(String, String, String)', '', 'Argument[2]',
    create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, int, String, String, String)',
    '', 'Argument[4]', create-file, manual]
  - [java.net, URL, true, URL, '(String, String, int, String, URLStreamHandler)',
    '', 'Argument[1]', open-url, manual]
  - [java.net, URL, true, URL, '(String, String, int, String, URLStreamHandler)',
    '', 'Argument[3]', create-file, manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[3]',
    create-file, manual]
  - [java.net, InetAddress, true, getByAddress, '(String, byte[])', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, URI, (String), '', 'Argument[0]', open-url, manual]
  - [sun.net.www, ParseUtil, true, encodePath, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, ProxySelector, true, select, (URI), '', 'Argument[0]', open-url, manual]
  - [java.net, ProxySelector, true, connectFailed, '(URI, SocketAddress, IOException)',
    '', 'Argument[0]', open-url, manual]
  - [java.net, InetAddress, true, getAllByName, (String), '', 'Argument[0]', open-url,
    manual]
  - [jdk.internal.loader, URLClassPath, true, getResource, '(String, boolean)', '',
    'Argument[0]', create-file, manual]
  - [sun.net.util, IPAddressUtil, true, textToNumericFormatV4, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.net, UnknownHostException, true, UnknownHostException, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.net, InetAddress, true, getAllByName0, '(String, InetAddress, boolean, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [java.util.jar, Manifest, true, getAttributes, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.util, 'Map<String,Addresses>', true, get, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util.concurrent, 'ConcurrentMap<String,Addresses>', true, putIfAbsent, '(String,
      Addresses)', '', 'Argument[0]', open-url, manual]
  - [java.net, NameService, true, lookupAllHostAddr, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLStreamHandler, true, setURL, '(URL, String, String, int, String,
      String, String, String, String)', '', 'Argument[2]', open-url, manual]
  - [java.net, URLStreamHandler, true, setURL, '(URL, String, String, int, String,
      String, String, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.net, URL, true, set, '(String, String, int, String, String, String, String,
      String)', '', 'Argument[1]', open-url, manual]
  - [java.net, URL, true, set, '(String, String, int, String, String, String, String,
      String)', '', 'Argument[5]', create-file, manual]
  - [java.net, URI, true, quote, '(String, long, long)', '', 'Argument[0]', create-file,
    manual]
  - [java.net, URI, true, appendSchemeSpecificPart, '(StringBuilder, String, String,
      String, String, int, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, newFileChannel, '(Path, Set<? extends
      OpenOption>, FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.channels, FileChannel, true, open, '(Path, Set<? extends OpenOption>,
      FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystemException, true, FileSystemException, (String), '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystemException, true, FileSystemException, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, deleteIfExists, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, exists, '(Path, LinkOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, FileAlreadyExistsException, true, FileAlreadyExistsException,
    (String), '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, createDirectory, '(Path, FileAttribute<?>[])', '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, copy, '(InputStream, Path, CopyOption[])', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file, Files, true, getFileAttributeView, '(Path, Class<V>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, delete, (Path), '', 'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, newInputStream, '(Path, OpenOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, provider, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file.spi, FileSystemProvider, true, newOutputStream, '(Path, OpenOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystem, true, getPath, '(String, String[])', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, newByteChannel, '(Path, Set<? extends
      OpenOption>, FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, getPath, (URI), '', 'Argument[0]',
    open-url, manual]
  - [java.nio.file, Path, true, of, '(String, String[])', '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Path, true, of, '(String, String[])', '', 'Argument[1]', create-file,
    manual]
  - [java.nio.file, Path, true, of, (URI), '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Path, true, resolve, (Path), '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, newByteChannel, '(Path, Set<? extends OpenOption>,
      FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, newDirectoryStream, '(Path, Filter<?
      super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, createDirectory, '(Path, FileAttribute<?>[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, createAndCheckIsDirectory, '(Path, FileAttribute<?>[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Path, true, relativize, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, isDirectory, '(Path, LinkOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.util, Objects, true, requireNonNull, (T), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, TempFileHelper, true, generatePath, '(String, String, Path)',
    '', 'Argument[2]', create-file, manual]
  - [java.nio.file, Files, true, createFile, '(Path, FileAttribute<?>[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, delete, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, deleteIfExists, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, TempFileHelper, true, create, '(Path, String, String, boolean,
      FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, getFileAttributeView, '(Path, Class<V>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, readAttributes, '(Path, Class<A>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, newByteChannel, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, readAttributes, '(Path, Class<A>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, AbstractFileSystemProvider, true, isDirectory, (Path), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, AbstractFileSystemProvider, true, exists, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, checkAccess, '(Path, AccessMode[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, isAccessible, '(Path, AccessMode[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, newInputStream, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, newBufferedReader, '(Path, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, newOutputStream, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, newBufferedWriter, '(Path, Charset, OpenOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.io, BufferedInputStream, true, BufferedInputStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.util.jar, JarFile, true, getEntry0, (String), '', 'Argument[0]', create-file,
    manual]
  - [javax.crypto, Transform, true, Transform, '(String, String, String, String)',
    '', 'Argument[1]', create-file, manual]
  - [java.net, Socket, true, Socket, '(String, int)', '', 'Argument[0]', open-url,
    manual]
  - [jdk.internal.jrtfs, JrtFileSystem, true, isDirectory, '(JrtPath, boolean)', '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, NotDirectoryException, true, NotDirectoryException, (String),
    '', 'Argument[0]', create-file, manual]
  - [jdk.internal.jrtfs, JrtFileAttributeView, true, JrtFileAttributeView, '(JrtPath,
      boolean, LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [jdk.internal.jrtfs, JrtPath, true, normalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.util.regex, Pattern, true, matcher, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [jdk.internal.jrtfs, JrtFileSystem, true, checkNode, (JrtPath), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, IllegalArgumentException, true, IllegalArgumentException, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.util, Objects, true, requireNonNull, '(T, String)', '', 'Argument[0]', create-file,
    manual]
  - [jdk.internal.jrtfs, JrtFileSystemProvider, true, toJrtPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [jdk.internal.jrtfs, JrtFileAttributeView, true, get, '(JrtPath, Class<V>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [jdk.internal.jrtfs, JrtPath, true, move, '(JrtPath, CopyOption[])', '', 'Argument[0]',
    create-file, manual]
  - [jdk.internal.jrtfs, JrtFileSystem, true, getFileContent, (JrtPath), '', 'Argument[0]',
    create-file, manual]
  - [jdk.internal.jrtfs, JrtPath, true, resolve, (Path), '', 'Argument[0]', create-file,
    manual]
  - [jdk.internal.jrtfs, JrtPath, true, normalize, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.lang, StringBuilder, true, append, '(CharSequence, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, InvalidPathException, true, InvalidPathException, '(String, String)',
    '', 'Argument[0]', create-file, manual]
  - [java.net, URL, true, URL, '(URL, String)', '', 'Argument[1]', create-file, manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, boolean)', '', 'Argument[0]',
    open-url, manual]
  - [java.lang.module, Configuration, true, findModule, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, InternalError, true, InternalError, (String), '', 'Argument[0]', create-file,
    manual]
  - [jdk.internal.module, Resources, true, toSafeFilePath, '(FileSystem, String)',
    '', 'Argument[1]', create-file, manual]
  - [java.net, URI, true, create, (String), '', 'Argument[0]', open-url, manual]
  - [jdk.internal.module, Resources, true, toFilePath, '(Path, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.net, URI, true, create, (String), '', 'Argument[0]', create-file, manual]
  - [jdk.internal.org.objectweb.asm, ClassReader, true, readClass, '(InputStream,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [java.util, 'HashMap<String,LinkedList<String>>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [sun.net.www.content.text, PlainTextInputStream, true, PlainTextInputStream, (InputStream),
    '', 'Argument[0]', open-url, manual]
  - [sun.net.ftp, FtpDirEntry, true, FtpDirEntry, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, int, char)', '', 'Argument[0]',
    create-file, manual]
  - [sun.net.www, ParseUtil, true, firstEncodeIndex, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, System, true, arraycopy, '(Object, int, Object, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [sun.net.www, URLConnection, true, URLConnection, (URL), '', 'Argument[0]', open-url,
    manual]
  - [javax.net.ssl, SSLSocketFactory, true, createSocket, '(Socket, String, int, boolean)',
    '', 'Argument[1]', open-url, manual]
  - [sun.net.www.protocol.ftp, FtpInputStream, true, FtpInputStream, '(FtpClient,
      InputStream)', '', 'Argument[1]', open-url, manual]
  - [sun.net.www.protocol.http, HttpURLConnection, true, HttpURLConnection, '(URL,
      Proxy, Handler)', '', 'Argument[0]', open-url, manual]
  - [javax.net.ssl, HttpsURLConnection, true, HttpsURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [sun.net.www.protocol.https, DelegateHttpsURLConnection, true, DelegateHttpsURLConnection,
    '(URL, Proxy, Handler, HttpsURLConnection)', '', 'Argument[0]', open-url, manual]
  - [java.net, JarURLConnection, true, JarURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLStreamHandler, true, sameFile, '(URL, URL)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLStreamHandler, true, sameFile, '(URL, URL)', '', 'Argument[1]',
    open-url, manual]
  - [java.net, URL, true, URL, (String), '', 'Argument[0]', create-file, manual]
  - [sun.net.www.protocol.jrt, JavaRuntimeURLConnection, true, JavaRuntimeURLConnection,
    (URL), '', 'Argument[0]', open-url, manual]
  - [java.net, MalformedURLException, true, MalformedURLException, (String), '', 'Argument[0]',
    open-url, manual]
  - [sun.nio.ch, FileDispatcher, true, setDirectIO, '(FileDescriptor, String)', '',
    'Argument[1]', create-file, manual]
  - [sun.nio.ch, FileChannelImpl, true, FileChannelImpl, '(FileDescriptor, String,
      boolean, boolean, boolean, Object)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, AbstractFileSystemProvider, true, implDelete, '(Path, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [java.lang, Module, true, getResourceAsStream, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, InputStreamReader, true, InputStreamReader, '(InputStream, String)',
    '', 'Argument[0]', create-file, manual]
  - [sun.security.provider, PolicyFile, true, getInputStreamReader, (InputStream),
    '', 'Argument[0]', create-file, manual]
  - [java.net, SocketPermission, true, SocketPermission, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [sun.security.ssl, SSLContextImpl, true, createSSLEngineImpl, '(String, int)',
    '', 'Argument[0]', open-url, manual]
  - [sun.security.ssl, SSLSocketImpl, true, SSLSocketImpl, '(SSLContextImpl, String,
      int)', '', 'Argument[1]', open-url, manual]
  - [java.io, BufferedReader, true, BufferedReader, (Reader), '', 'Argument[0]', open-url,
    manual]
  - [java.io, InputStreamReader, true, InputStreamReader, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [sun.text.normalizer, Normalizer2, true, normalize, '(CharSequence, StringBuilder)',
    '', 'Argument[1]', create-file, manual]
  - [java.io, UnixFileSystem, true, normalize, '(String, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, UnixFileSystem, true, resolve, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.io, UnixFileSystem, true, canonicalize0, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, ExpiringCache, true, get, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, parentOrNull, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, ExpiringCache, true, put, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [sun.net.www, ParseUtil, true, decode, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.net.www.protocol.file, Handler, true, createFileURLConnection, '(URL, File)',
    '', 'Argument[1]', create-file, manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[1]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[2]', create-file,
    manual]
  - [sun.net.www.protocol.file, FileURLConnection, true, FileURLConnection, '(URL,
      File)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, open, '(int, UnixPath, String, Flags, int)',
    '', 'Argument[1]', create-file, manual]
  - [sun.nio.ch, FileChannelImpl, true, open, '(FileDescriptor, String, boolean, boolean,
      boolean, Object)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, newFileChannel, '(int, UnixPath, String,
      Set<? extends OpenOption>, int)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, mkdir, '(UnixPath, int)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixException, true, rethrowAsIOException, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, open, '(UnixPath, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, rmdir, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, AccessDeniedException, true, AccessDeniedException, '(String,
      String, String)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, NoSuchFileException, true, NoSuchFileException, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileAlreadyExistsException, true, FileAlreadyExistsException,
    '(String, String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributes, true, get, '(UnixPath, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixException, true, rethrowAsIOException, '(UnixPath, UnixPath)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, utimes, '(UnixPath, long, long)', '',
    'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, unlink, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, lstat, '(UnixPath, UnixFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixUriUtils, true, fromUri, '(UnixFileSystem, URI)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, symlink, '(byte[], UnixPath)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createBasicView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createPosixView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createOwnerView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, mknod, '(UnixPath, int, long)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, chmod, '(UnixPath, int)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixFileSystemProvider, true, getFileAttributeView, '(Path, Class<V>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, opendir, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixDirectoryStream, true, UnixDirectoryStream, '(UnixPath, long,
      Filter<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, DirectoryNotEmptyException, true, DirectoryNotEmptyException,
    (String), '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, rename, '(UnixPath, UnixPath)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, newFileChannel, '(UnixPath, Set<? extends
      OpenOption>, int)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, AtomicMoveNotSupportedException, true, AtomicMoveNotSupportedException,
    '(String, String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixPath, true, encode, '(UnixFileSystem, String)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, copyDirectory, '(UnixPath, UnixFileAttributes,
      UnixPath, Flags)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, copyDirectory, '(UnixPath, UnixFileAttributes,
      UnixPath, Flags)', '', 'Argument[2]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, copyLink, '(UnixPath, UnixFileAttributes, UnixPath,
      Flags)', '', 'Argument[2]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, copySpecial, '(UnixPath, UnixFileAttributes,
      UnixPath, Flags)', '', 'Argument[2]', create-file, manual]
  - [sun.nio.fs, NativeBuffer, true, setOwner, (Object), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, Posix, true, Posix, '(UnixPath, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, copyToNativeBuffer, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixPath, true, UnixPath, '(UnixFileSystem, String)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, move, '(UnixPath, UnixPath, CopyOption[])', '',
    'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, move, '(UnixPath, UnixPath, CopyOption[])', '',
    'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixPath, true, toUnixPath, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkExec, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, access, '(UnixPath, int)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixSecureDirectoryStream, true, UnixSecureDirectoryStream, '(UnixPath,
      long, int, Filter<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.io, File, true, File, (URI), '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, stat, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, exists, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, realpath, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.io, InputStreamReader, true, InputStreamReader, '(InputStream, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.sun.media.sound, DirectAudioFloatInputStream, true, DirectAudioFloatInputStream,
    (AudioInputStream), '', 'Argument[0]', open-url, manual]
  - [com.sun.media.sound, JavaSoundAudioClip, true, init, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.io, BufferedInputStream, true, BufferedInputStream, '(InputStream, int)',
    '', 'Argument[0]', open-url, manual]
  - [com.sun.media.sound, SunFileReader, true, closeSilently, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.util, Objects, true, requireNonNull, (T), '', 'Argument[0]', open-url, manual]
  - [java.awt.peer, DesktopPeer, true, browse, (URI), '', 'Argument[0]', open-url,
    manual]
  - [javax.swing, JFileChooser, true, setCurrentDirectory, (File), '', 'Argument[0]',
    create-file, manual]
  - [javax.swing, JFileChooser, true, isTraversable, (File), '', 'Argument[0]', create-file,
    manual]
  - [javax.swing.filechooser, FileSystemView, true, getParentDirectory, (File), '',
    'Argument[0]', create-file, manual]
  - [javax.swing, MenuSelectionManager, true, printMenuElementArray, '(MenuElement[])',
    '', 'Argument[0]', create-file, manual]
  - [javax.swing.plaf, TreeUI, true, getRowForPath, '(JTree, TreePath)', '', 'Argument[1]',
    create-file, manual]
  - [sun.awt.shell, ShellFolder, true, isFileSystemRoot, (File), '', 'Argument[0]',
    create-file, manual]
  - [sun.awt.shell, ShellFolder, true, isComputerNode, (File), '', 'Argument[0]',
    create-file, manual]
  - [java.io, File, true, File, '(File, String)', '', 'Argument[1]', create-file,
    manual]
  - [javax.swing.filechooser, FileSystemView, true, getShellFolder, (File), '', 'Argument[0]',
    create-file, manual]
  - [java.io, IOException, true, IOException, (String), '', 'Argument[0]', create-file,
    manual]
  - [javax.swing.filechooser, FileSystemRoot, true, FileSystemRoot, (File), '', 'Argument[0]',
    create-file, manual]
  - [javax.swing, JFileChooser, true, setSelectedFiles, '(File[])', '', 'Argument[0]',
    create-file, manual]
  - [javax.swing, JFileChooser, true, setSelectedFile, (File), '', 'Argument[0]',
    create-file, manual]
  - [javax.swing.tree, AbstractLayoutCache, true, getRowForPath, (TreePath), '', 'Argument[0]',
    create-file, manual]
  - [javax.swing.text.html, SelectorMapping, true, getChildSelectorMapping, '(String,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [javax.swing.tree, FixedHeightLayoutCache, true, getNodeForPath, '(TreePath, boolean,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [javax.swing.text.rtf, RTFReader, true, readCharset, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Hashtable<TreePath,FHTreeStateNode>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [javax.swing.tree, VariableHeightLayoutCache, true, getNodeForPath, '(TreePath,
      boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [javax.swing.tree, FixedHeightLayoutCache, true, getMapping, (TreePath), '', 'Argument[0]',
    create-file, manual]
  - [java.net, URL, true, URL, '(URL, String)', '', 'Argument[1]', open-url, manual]
  - [java.util, 'Hashtable<TreePath,TreeStateNode>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [javax.swing.tree, VariableHeightLayoutCache, true, getMapping, (TreePath), '',
    'Argument[0]', create-file, manual]
  - [java.util, Stack<TreePath>, true, push, (TreePath), '', 'Argument[0]', create-file,
    manual]
  - [sun.awt.shell, ShellFolder, true, ShellFolder, '(ShellFolder, String)', '', 'Argument[1]',
    create-file, manual]
  - [sun.awt.shell, DefaultShellFolder, true, DefaultShellFolder, '(ShellFolder, File)',
    '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Paths, true, get, '(String, String[])', '', 'Argument[0]', create-file,
    manual]
  - [sun.awt.shell, ShellFolderManager, true, createShellFolder, (File), '', 'Argument[0]',
    create-file, manual]
  - [sun.awt.shell, ShellFolderManager, true, isComputerNode, (File), '', 'Argument[0]',
    create-file, manual]
  - [sun.awt.shell, ShellFolderManager, true, isFileSystemRoot, (File), '', 'Argument[0]',
    create-file, manual]
  - [sun.awt.X11, XDesktopPeer, true, launch, (URI), '', 'Argument[0]', open-url,
    manual]
  - [java.nio.file, Files, true, createTempFile, '(Path, String, String, FileAttribute<?>[])',
    '', 'Argument[0]', create-file, manual]
  - [java.io, File, true, renameTo, (File), '', 'Argument[0]', create-file, manual]
  - [java.io, FileInputStream, true, FileInputStream, (File), '', 'Argument[0]', create-file,
    manual]
  - [com.sun.jmx.mbeanserver, Util, true, newObjectName, (String), '', 'Argument[0]',
    open-url, manual]
  - [javax.management.remote, JMXServiceURL, true, indexOf, '(String, char, int)',
    '', 'Argument[0]', open-url, manual]
  - [javax.management.remote, JMXServiceURL, true, indexOfFirstNotInSet, '(String,
      BitSet, int)', '', 'Argument[0]', open-url, manual]
  - [javax.management.remote, JMXServiceURL, true, isNumericIPv6Address, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.net, InetAddress, true, getByName, (String), '', 'Argument[0]', open-url,
    manual]
  - [javax.management.modelmbean, RequiredModelMBean, true, writeToLog, '(String,
      String)', '', 'Argument[1]', create-file, manual]
  - [com.sun.jndi.ldap, Connection, true, createSocket, '(String, int, String, int)',
    '', 'Argument[0]', open-url, manual]
  - [com.sun.jndi.ldap, LdapClient, true, LdapClient, '(String, int, String, int,
      int, OutputStream, PoolCallback)', '', 'Argument[0]', open-url, manual]
  - [javax.management.remote, JMXServiceURL, true, JMXServiceURL, '(String, String,
      int, String)', '', 'Argument[1]', open-url, manual]
  - [com.sun.jndi.ldap, Connection, true, createInetSocketAddress, '(String, int)',
    '', 'Argument[0]', open-url, manual]
  - [javax.net, SocketFactory, true, createSocket, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [com.sun.jndi.ldap, Ber, true, dumpBER, '(OutputStream, String, byte[], int, int)',
    '', 'Argument[0]', create-file, manual]
  - [com.sun.jndi.ldap, LdapClientFactory, true, LdapClientFactory, '(String, int,
      String, int, int, OutputStream)', '', 'Argument[0]', open-url, manual]
  - [javax.naming, CompositeName, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.sun.jndi.ldap, Connection, true, Connection, '(LdapClient, String, int, String,
      int, int, OutputStream)', '', 'Argument[1]', open-url, manual]
  - [com.sun.jndi.toolkit.url, Uri, true, init, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.sun.jndi.ldap, LdapClient, true, delete, '(String, Control[])', '', 'Argument[0]',
    create-file, manual]
  - [com.sun.jndi.ldap, LdapCtx, true, fullyQualifiedName, (String), '', 'Argument[0]',
    create-file, manual]
  - [javax.naming.directory, DirContext, true, getAttributes, '(String, String[])',
    '', 'Argument[0]', open-url, manual]
  - [com.sun.jndi.ldap, LdapCtx, true, LdapCtx, '(LdapCtx, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.sun.jndi.toolkit.url, Uri, true, parse, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.sun.jndi.ldap, LdapURL, true, LdapURL, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.sun.jndi.toolkit.url, GenericURLContext, true, urlEquals, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [com.sun.jndi.ldap, LdapSearchEnumeration, true, LdapSearchEnumeration, '(LdapCtx,
      LdapResult, String, SearchArgs, Continuation)', '', 'Argument[2]', create-file,
    manual]
  - [com.sun.jndi.ldap, LdapPoolManager, true, getLdapClient, '(String, int, String,
      int, int, OutputStream, int, String, Control[], String, String, Object, Hashtable<?,?>)',
    '', 'Argument[0]', open-url, manual]
  - [com.sun.jndi.ldap, LdapClient, true, getInstance, '(boolean, String, int, String,
      int, int, OutputStream, int, String, Control[], String, String, Object, Hashtable<?,?>)',
    '', 'Argument[1]', open-url, manual]
  - [com.sun.jndi.ldap, LdapCtx, true, processReturnCode, '(LdapResult, Name, Object,
      Name, Hashtable<?,?>, String)', '', 'Argument[5]', create-file, manual]
  - [com.sun.naming.internal, ResourceManager, true, getFactory, '(String, Hashtable<?,?>,
      Context, String, String)', '', 'Argument[3]', create-file, manual]
  - [sun.rmi.transport.tcp, TCPEndpoint, true, TCPEndpoint, '(String, int, RMIClientSocketFactory,
      RMIServerSocketFactory)', '', 'Argument[0]', open-url, manual]
  - [sun.rmi.transport.tcp, TCPEndpoint, true, TCPEndpoint, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.io, OutputStream, true, write, '(byte[])', '', 'Argument[0]', sql, manual]
  - [com.sun.security.sasl.digest, DigestMD5Base, true, generateResponseValue, '(String,
      String, String, String, String, char[], byte[], byte[], int, byte[])', '', 'Argument[1]',
    open-url, manual]
  - [org.xml.sax, InputSource, true, InputSource, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.io, IOException, true, IOException, (String), '', 'Argument[0]', sql, manual]
  - [java.sql, SQLException, true, SQLException, (String), '', 'Argument[0]', sql,
    manual]
  - [com.sun.org.apache.bcel.internal.classfile, CodeException, true, CodeException,
    (DataInput), '', 'Argument[0]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, Attribute, true, readAttribute, '(DataInput,
      ConstantPool)', '', 'Argument[0]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, UnknownAttributeReader, true, createAttribute,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, Unknown, true, Unknown, '(int, int,
      DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, ConstantValue, true, ConstantValue,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, SourceFile, true, SourceFile, '(int,
      int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, Code, true, Code, '(int, int, DataInput,
      ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, ExceptionTable, true, ExceptionTable,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, LineNumberTable, true, LineNumberTable,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, LocalVariableTable, true, LocalVariableTable,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, InnerClasses, true, InnerClasses,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, Synthetic, true, Synthetic, '(int,
      int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, Deprecated, true, Deprecated, '(int,
      int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, PMGClass, true, PMGClass, '(int,
      int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, Signature, true, Signature, '(int,
      int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, StackMap, true, StackMap, '(int,
      int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, RuntimeVisibleAnnotations, true,
    RuntimeVisibleAnnotations, '(int, int, DataInput, ConstantPool)', '', 'Argument[2]',
    create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, RuntimeInvisibleAnnotations, true,
    RuntimeInvisibleAnnotations, '(int, int, DataInput, ConstantPool)', '', 'Argument[2]',
    create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, RuntimeVisibleParameterAnnotations,
    true, RuntimeVisibleParameterAnnotations, '(int, int, DataInput, ConstantPool)',
    '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, RuntimeInvisibleParameterAnnotations,
    true, RuntimeInvisibleParameterAnnotations, '(int, int, DataInput, ConstantPool)',
    '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, AnnotationDefault, true, AnnotationDefault,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, LocalVariableTypeTable, true, LocalVariableTypeTable,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, EnclosingMethod, true, EnclosingMethod,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, BootstrapMethods, true, BootstrapMethods,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, MethodParameters, true, MethodParameters,
    '(int, int, DataInput, ConstantPool)', '', 'Argument[2]', create-file, manual]
  - [com.sun.org.apache.bcel.internal.classfile, FieldOrMethod, true, FieldOrMethod,
    '(DataInput, ConstantPool)', '', 'Argument[0]', create-file, manual]
  - [java.io, PrintWriter, true, println, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.sun.org.apache.xalan.internal.xsltc.compiler.util, Util, true, println, (String),
    '', 'Argument[0]', sql, manual]
  - [com.sun.org.apache.xerces.internal.xni, XNIException, true, XNIException, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.io, PrintWriter, true, print, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.sun.org.apache.xml.internal.serializer.utils, MalformedURIException, true,
    MalformedURIException, (String), '', 'Argument[0]', create-file, manual]
  - [javax.xml.catalog, GroupEntry, true, verifyCatalogFile, '(CatalogImpl, URI)',
    '', 'Argument[1]', open-url, manual]
  - [javax.xml.catalog, CatalogImpl, true, getCatalog, '(CatalogImpl, URI)', '', 'Argument[1]',
    open-url, manual]
  - [javax.xml.catalog, GroupEntry, true, getLoadedCatalog, (String), '', 'Argument[0]',
    open-url, manual]
  - [javax.xml.catalog, CatalogImpl, true, CatalogImpl, '(CatalogImpl, CatalogFeatures,
      URI[])', '', 'Argument[2]', open-url, manual]
  - [javax.xml.catalog, Util, true, isFileUri, (URI), '', 'Argument[0]', create-file,
    manual]
  - [javax.xml.catalog, Util, true, isFileUriExist, '(URI, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [com.sun.tools.javac.code, ClassFinder, true, scanPlatformPath, (PackageSymbol),
    '', 'Argument[0]', create-file, manual]
  - [com.sun.tools.javac.util, Log, true, printVerbose, '(String, Object[])', '',
    'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, newBufferedReader, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.io, OutputStreamWriter, true, append, (CharSequence), '', 'Argument[0]',
    create-file, manual]
  - [java.net, URISyntaxException, true, URISyntaxException, '(String, String)', '',
    'Argument[0]', open-url, manual]
  - [sun.jvmstat.monitor, VmIdentifier, true, canonicalize, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.nio.channels, FileChannel, true, open, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [java.nio.file, Paths, true, get, '(String, String[])', '', 'Argument[1]', create-file,
    manual]
  - [org.graalvm.compiler.debug, PathUtilities, true, sanitizeFileName, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.graalvm.compiler.debug, PathUtilities, true, createUnique, '(OptionValues,
      OptionKey<String>, String, String, String, boolean)', '', 'Argument[3]', create-file,
    manual]
  - [org.graalvm.compiler.debug, TTY, true, println, '(String, Object[])', '', 'Argument[1]',
    create-file, manual]
  - [jdk.internal.vm.compiler.collections, 'EconomicMap<OptionKey<?>,Object>', true,
    put, '(OptionKey<?>, Object)', '', 'Argument[1]', open-url, manual]
  - [org.graalvm.compiler.hotspot, HotSpotGraalRuntime, true, dumpMethod, '(HotSpotResolvedJavaMethod,
      String, String, int)', '', 'Argument[2]', open-url, manual]
  - [org.graalvm.compiler.debug, GraalError, true, GraalError, '(String, Object[])',
    '', 'Argument[1]', create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[2]', create-file,
    manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[0]', create-file,
    manual]
  - [org.graalvm.compiler.printer, GraphPrinter, true, simplifyClassArgs, '(Object[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Path, true, resolve, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileWriter, true, FileWriter, (File), '', 'Argument[0]', create-file,
    manual]
  - [java.util.zip, ZipEntry, true, ZipEntry, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.util.zip, ZipFile, true, getEntry, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.util.function, 'BiConsumer<String,String>', true, accept, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [java.util.jar, JarFile, true, getEntry, (String), '', 'Argument[0]', create-file,
    manual]
  - [jdk.javadoc.internal.doclets.toolkit, Messages, true, notice, '(String, Object[])',
    '', 'Argument[1]', create-file, manual]
  - [jdk.javadoc.doclet, Reporter, true, print, '(Kind, String)', '', 'Argument[1]',
    create-file, manual]
  - [jdk.javadoc.internal.doclets.toolkit.util, SimpleDocletException, true, SimpleDocletException,
    (String), '', 'Argument[0]', create-file, manual]
  - [jdk.javadoc.internal.doclets.toolkit.util, Extern, true, readElementList, '(InputStream,
      String, boolean)', '', 'Argument[0]', open-url, manual]
  - [jdk.javadoc.internal.doclets.toolkit.util, Fault, true, Fault, '(String, Exception)',
    '', 'Argument[0]', open-url, manual]
  - [sun.tools.jconsole, AboutDialog, true, browse, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.awt, Desktop, true, browse, (URI), '', 'Argument[0]', open-url, manual]
  - [com.sun.tools.javap, CustomVerificationTypeInfo, true, CustomVerificationTypeInfo,
    (String), '', 'Argument[0]', create-file, manual]
  - [java.net, InetSocketAddress, true, InetSocketAddress, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [com.sun.tools.example.debug.tty, MessageOutput, true, println, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [jdk.jfr.internal, RepositoryChunk, true, findFileName, '(SafePath, String, String)',
    '', 'Argument[1]', create-file, manual]
  - [jdk.jfr.internal, SafePath, true, SafePath, (Path), '', 'Argument[0]', create-file,
    manual]
  - [jdk.jfr.internal, WriteableUserPath, true, WriteableUserPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [jdk.jfr.internal, JVM, true, setOutput, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, newBufferedWriter, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, isWritable, (Path), '', 'Argument[0]', create-file,
    manual]
  - [jdk.jfr.internal, MetadataRepository, true, setOutput, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, move, '(Path, Path, CopyOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, move, '(Path, Path, CopyOption[])', '', 'Argument[1]',
    create-file, manual]
  - [java.io, RandomAccessFile, true, RandomAccessFile, '(File, String)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, createDirectories, '(Path, FileAttribute<?>[])',
    '', 'Argument[0]', create-file, manual]
  - [jdk.jfr.internal.dcmd, DCmdException, true, DCmdException, '(String, Object[])',
    '', 'Argument[0]', create-file, manual]
  - [java.util, List, true, add, (E), '', 'Argument[0]', create-file, manual]
  - [jdk.tools.jlink.builder, DefaultImageBuilder, true, entryToFileName, (ResourcePoolEntry),
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystem, true, getPathMatcher, (String), '', 'Argument[0]',
    create-file, manual]
  - [jdk.tools.jlink.internal, Utils, true, getPathMatcher, '(FileSystem, String)',
    '', 'Argument[1]', create-file, manual]
  - [jdk.tools.jlink.internal, Utils, true, getJRTFSPath, '(String, String[])', '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, PathMatcher, true, matches, (Path), '', 'Argument[0]', create-file,
    manual]
  - [jdk.tools.jlink.internal, JlinkTask, true, toPathLocation, (ResolvedModule),
    '', 'Argument[0]', create-file, manual]
  - [java.io, InputStreamReader, true, InputStreamReader, (InputStream), '', 'Argument[0]',
    create-file, manual]
  - [jdk.internal.joptsimple, OptionParser, true, accepts, '(String, String)', '',
    'Argument[1]', create-file, manual]
  - [java.net, URL, true, URL, '(URL, String, URLStreamHandler)', '', 'Argument[1]',
    open-url, manual]
  - [java.net, URI, true, URI, '(String, String, String, String)', '', 'Argument[2]',
    create-file, manual]
  - [java.lang, String, true, startsWith, (String), '', 'Argument[0]', create-file,
    manual]
  - [jdk.internal.jshell.tool, JShellTool, true, runFile, '(String, String)', '',
    'Argument[0]', create-file, manual]
  - [jdk.internal.jshell.tool, JShellTool, true, toPathResolvingUserHome, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Paths, true, get, (URI), '', 'Argument[0]', open-url, manual]
  - [java.io, FileNotFoundException, true, FileNotFoundException, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileReader, true, FileReader, (String), '', 'Argument[0]', create-file,
    manual]
  - [jdk.internal.jshell.tool, JShellTool, true, getResource, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.util, Scanner, true, Scanner, (InputStream), '', 'Argument[0]', open-url,
    manual]
  - [jdk.internal.jshell.tool, JShellTool, true, errormsg, '(String, Object[])', '',
    'Argument[2]', create-file, manual]
  - [java.lang, Class<JShellTool>, true, getResourceAsStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, newBufferedWriter, '(Path, Charset, OpenOption[])',
    '', 'Argument[1]', create-file, manual]
  - [com.sun.jndi.toolkit.url, Uri, true, Uri, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.sun.jndi.dns, DnsUrl, true, DnsUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.sun.jndi.rmi.registry, RegistryContext, true, RegistryContext, '(String,
      int, Hashtable<?,?>)', '', 'Argument[0]', open-url, manual]
  - [com.sun.jndi.rmi.registry, RegistryContext, true, getRegistry, '(String, int,
      RMIClientSocketFactory)', '', 'Argument[0]', open-url, manual]
  - [javax.management.remote, JMXServiceURL, true, JMXServiceURL, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.rmi.registry, LocateRegistry, true, getRegistry, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.rmi.registry, LocateRegistry, true, getRegistry, '(String, int, RMIClientSocketFactory)',
    '', 'Argument[0]', open-url, manual]
  - [jdk.internal.agent, AgentConfigurationError, true, AgentConfigurationError, '(String,
      Throwable, String[])', '', 'Argument[2]', open-url, manual]
  - [sun.tools.java, FileClassFile, true, FileClassFile, (File), '', 'Argument[0]',
    create-file, manual]
  - [sun.tools.java, PathClassFile, true, PathClassFile, (Path), '', 'Argument[0]',
    create-file, manual]
  - [sun.tools.java, ClassPathEntry, true, getFile, '(String, String, String, boolean)',
    '', 'Argument[1]', create-file, manual]
  - [sun.tools.java, ClassPathEntry, true, getFile, '(String, String, String, boolean)',
    '', 'Argument[2]', create-file, manual]
  - [java.util, 'Hashtable<String,String[]>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [java.util, 'Hashtable<String,String[]>', true, put, '(String, String[])', '',
    'Argument[0]', create-file, manual]
  - [java.io, File, true, File, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [sun.tools.java, DirClassPathEntry, true, getFiles, (String), '', 'Argument[0]',
    create-file, manual]
  - [sun.tools.java, ClassFile, true, newClassFile, (File), '', 'Argument[0]', create-file,
    manual]
  - [sun.tools.java, ClassPath, true, getFile, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.tools.java, Package, true, makeName, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, newDirectoryStream, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.util, 'Map<String,Path>', true, put, '(String, Path)', '', 'Argument[1]',
    create-file, manual]
  - [sun.tools.java, JrtClassPathEntry, true, getPackagePath, (String), '', 'Argument[0]',
    create-file, manual]
  - [sun.tools.javac, BatchEnvironment, true, output, (String), '', 'Argument[0]',
    create-file, manual]
  - [jdk.nashorn.internal.codegen, OptimisticTypesPersistence, true, isSymbolicLink,
    (File), '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, isSymbolicLink, (Path), '', 'Argument[0]', create-file,
    manual]
  - [jdk.nashorn.internal.runtime.logging, DebugLogger, true, warning, (String), '',
    'Argument[0]', create-file, manual]
  - [jdk.nashorn.internal.ir, Symbol, true, trace, (String), '', 'Argument[0]', sql,
    manual]
  - [java.util, List<Object>, true, add, (Object), '', 'Argument[0]', sql, manual]
  - [jdk.nashorn.internal.runtime, DirectoryCodeStore, true, getCacheFile, '(Source,
      String)', '', 'Argument[1]', create-file, manual]
  - [jdk.nashorn.internal.runtime, Source, true, Source, '(String, String, Data)',
    '', 'Argument[1]', create-file, manual]
  - [jdk.nashorn.internal.runtime, Source, true, readFully, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [jdk.nashorn.internal.runtime, Source, true, readFully, '(InputStream, Charset)',
    '', 'Argument[0]', open-url, manual]
  - [jdk.nashorn.internal.runtime, ECMAErrors, true, getMessage, '(String, String[])',
    '', 'Argument[1]', create-file, manual]
  - [sun.security.util, Password, true, readPassword, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, URI, (String), '', 'Argument[0]', create-file, manual]
  - [jdk.nio.zipfs, ZipFileSystemProvider, true, getFileSystem, (URI), '', 'Argument[0]',
    create-file, manual]
  - [jdk.nio.zipfs, ZipFileAttributeView, true, ZipFileAttributeView, '(ZipPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [jdk.nio.zipfs, ZipPath, true, normalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [jdk.nio.zipfs, ZipFileSystemProvider, true, uriToPath, (URI), '', 'Argument[0]',
    open-url, manual]
  - [jdk.nio.zipfs, ZipFileSystemProvider, true, toZipPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [jdk.nio.zipfs, ZipFileAttributeView, true, get, '(ZipPath, Class<V>)', '', 'Argument[0]',
    create-file, manual]
  - [jdk.nio.zipfs, ZipPath, true, move, '(ZipPath, CopyOption[])', '', 'Argument[0]',
    create-file, manual]
  - [jdk.nio.zipfs, ZipPath, true, ZipPath, '(ZipFileSystem, byte[], boolean)', '',
    'Argument[1]', create-file, manual]
  - [jdk.nio.zipfs, ZipPath, true, resolve, '(byte[])', '', 'Argument[0]', create-file,
    manual]
  - [jdk.nio.zipfs, ZipPath, true, normalize, '(byte[], int)', '', 'Argument[0]',
    create-file, manual]
  - [java.util, Arrays, true, copyOf, '(byte[], int)', '', 'Argument[0]', create-file,
    manual]
  - [jdk.nio.zipfs, ZipFileSystem, true, getString, '(byte[])', '', 'Argument[0]',
    create-file, manual]
  - [jdk.nio.zipfs, ZipFileSystem, true, getBytes, (String), '', 'Argument[0]', create-file,
    manual]
  - [jdk.nio.zipfs, ZipPath, true, normalize, '(String, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.backward_codecs.store, EndiannessReverserUtil, true, openChecksumInput,
    '(Directory, String, IOContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.backward_codecs.lucene70, Lucene70SegmentInfoFormat, true,
    parseSegmentInfo, '(Directory, DataInput, String, MemorySegment[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.index, SegmentInfo, true, SegmentInfo, '(Directory, Version,
      Version, String, int, boolean, Codec, Map<String,String>, MemorySegment[], Map<String,String>,
      Sort)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.backward_codecs.lucene86, Lucene86SegmentInfoFormat, true,
    parseSegmentInfo, '(Directory, DataInput, String, MemorySegment[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.codecs.lucene90, Lucene90SegmentInfoFormat, true, parseSegmentInfo,
    '(Directory, DataInput, String, MemorySegment[])', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.lucene.index, SegmentInfos, true, readCommit, '(Directory, String,
      int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, StandardDirectoryReader, true, open, '(Directory, IndexCommit,
      Comparator<LeafReader>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, MergeScheduler, true, initialize, '(InfoStream, Directory)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.index, ConcurrentMergeScheduler, true, initDynamicDefaults,
    (Directory), '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, DocumentsWriterPerThread, true, DocumentsWriterPerThread,
    '(int, String, Directory, Directory, LiveIndexWriterConfig, DocumentsWriterDeleteQueue,
      Builder, AtomicLong, boolean)', '', 'Argument[2]', create-file, manual]
  - [org.apache.lucene.index, IndexFileNames, true, indexOfSegmentName, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, SegmentInfos, true, readCommit, '(Directory, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, CommitPoint, true, CommitPoint, '(Collection<CommitPoint>,
      Directory, SegmentInfos)', '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.index, DocumentsWriter, true, DocumentsWriter, '(FlushNotifications,
      int, AtomicLong, boolean, Supplier<String>, LiveIndexWriterConfig, Directory,
      Directory, FieldNumbers)', '', 'Argument[6]', create-file, manual]
  - [org.apache.lucene.index, ReaderPool, true, ReaderPool, '(Directory, Directory,
      SegmentInfos, FieldNumbers, LongSupplier, InfoStream, String, StandardDirectoryReader)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.index, IndexFileDeleter, true, IndexFileDeleter, '(String[],
      Directory, Directory, IndexDeletionPolicy, SegmentInfos, InfoStream, IndexWriter,
      boolean, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.index, SegmentInfos, true, readCommit, '(Directory, ChecksumIndexInput,
      long, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, SegmentInfos, true, parseSegmentInfos, '(Directory,
      DataInput, SegmentInfos, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.codecs, SegmentInfoFormat, true, read, '(Directory, String,
      MemorySegment[], IOContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, DirectoryReader, true, DirectoryReader, '(Directory,
      LeafReader[], Comparator<LeafReader>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, StandardDirectoryReader, true, open, '(Directory, int,
      IndexCommit, Comparator<LeafReader>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, '', true, '', (Directory), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.lucene.index, StandardDirectoryReader, true, StandardDirectoryReader,
    '(Directory, LeafReader[], IndexWriter, SegmentInfos, Comparator<LeafReader>,
      boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[3]',
    create-file, manual]
  - [org.apache.lucene.store, ByteBuffersIndexOutput, true, ByteBuffersIndexOutput,
    '(ByteBuffersDataOutput, String, String, Checksum, Consumer<ByteBuffersDataOutput>)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.store, ByteBuffersIndexOutput, true, ByteBuffersIndexOutput,
    '(ByteBuffersDataOutput, String, String, Checksum, Consumer<ByteBuffersDataOutput>)',
    '', 'Argument[2]', create-file, manual]
  - [org.apache.lucene.index, IndexFileNames, true, segmentFileName, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, createTempOutput, '(String, String,
      IOContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, FSDirectory, true, open, '(Path, LockFactory)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, MMapDirectory, true, MMapDirectory, '(Path, LockFactory)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, NIOFSDirectory, true, NIOFSDirectory, '(Path, LockFactory)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, getTempFileName, '(String, String,
      long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, FileSwitchDirectory, true, getDirectory, (String), '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, NoSuchFileException, true, NoSuchFileException, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, MMapDirectory, true, MMapDirectory, '(Path, LockFactory,
      long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, FSDirectory, true, FSDirectory, '(Path, LockFactory)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, FSDirectory, true, ensureCanRead, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.store, MMapIndexInputProvider, true, openInput, '(Path, IOContext,
      int, boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [java.util.function, 'BiPredicate<String,IOContext>', true, test, '(String, IOContext)',
    '', 'Argument[0]', create-file, manual]
  - [java.util, Set<String>, true, remove, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.lucene.store, OutputStreamIndexOutput, true, OutputStreamIndexOutput,
    '(String, String, OutputStream, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, NIOFSIndexInput, true, NIOFSIndexInput, '(String, FileChannel,
      IOContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, NIOFSIndexInput, true, NIOFSIndexInput, '(String, FileChannel,
      long, long, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.util, IOUtils, true, rm, '(LinkedHashMap<Path,Throwable>, Path[])',
    '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, walkFileTree, '(Path, FileVisitor<? super Path>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.util, Unwrappable, true, unwrapAll, (T), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.misc.store, DirectIOIndexInput, true, DirectIOIndexInput, '(Path,
      int, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.misc.store, DirectIOIndexOutput, true, DirectIOIndexOutput,
    '(Path, String, int, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, IndexOutput, true, IndexOutput, '(String, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, IndexOutput, true, IndexOutput, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.store, IndexInput, true, IndexInput, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.store, Directory, true, openInput, '(String, IOContext)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, FSDirectory, true, open, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.util, IOUtils, true, rm, '(Path[])', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.http.client.methods, HttpGet, true, HttpGet, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.lucene.replicator.http, HttpClientBase, true, queryString, '(String,
      String[])', '', 'Argument[1]', open-url, manual]
  - [java.lang, StringBuilder, true, append, (String), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.lucene.replicator, Revision, true, open, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.lucene.replicator.http, HttpClientBase, true, executeGET, '(String,
      String[])', '', 'Argument[1]', open-url, manual]
  - [org.apache.lucene.replicator, Replicator, true, obtainFile, '(String, String,
      String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, createOutput, '(String, IOContext)',
    '', 'Argument[0]', create-file, manual]
  - [java.util, List<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.lucene.replicator, RevisionFile, true, RevisionFile, (String), '',
    'Argument[0]', create-file, manual]
  - [java.io, DataOutput, true, writeUTF, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.util, 'Map<String,Replicator>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [java.util, Set<String>, true, contains, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.lucene.replicator, Replicator, true, obtainFile, '(String, String,
      String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.lucene.tests.store, MockIndexInputWrapper, true, MockIndexInputWrapper,
    '(MockDirectoryWrapper, String, IndexInput, MockIndexInputWrapper)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.tests.util, TestUtil, true, checkIndex, '(Directory, boolean,
      boolean, boolean, ByteArrayOutputStream)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.index, CheckIndex, true, CheckIndex, '(Directory, Lock)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, NoLockFactory, true, obtainLock, '(Directory, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.api, V2HttpCall, true, getApiInfo, '(PluginBag<SolrRequestHandler>,
      String, String, String, Map<String,String>)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.common.util, PathTrie, true, getPathSegments, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.util, 'Map<Object,Object>', true, put, '(Object, Object)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.solr.core, SolrCore, true, getRequestHandler, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.api, V2HttpCall, true, initAdminRequest, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.api, AnnotatedApi, true, AnnotatedApi, '(SpecProvider, EndPoint,
      Map<String,Cmd>, Api)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.servlet, SolrRequestParsers, true, parse, '(SolrCore, String,
      HttpServletRequest)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.api, ApiBag, true, unregister, '(METHOD, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.solr.core, PluginBag<SolrRequestHandler>, true, v2lookup, '(String,
      String, Map<String,String>)', '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object, Object)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.solr.api, ApiInfo, true, get, (EndPoint), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.commons.io.file, PathUtils, true, deleteDirectory, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, String, true, replaceAll, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.common.util, PathTrie<Api>, true, remove, (List<String>), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, create, '(String, byte[], CreateMode,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, delete, '(String, int, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, exists, '(String, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, getData, '(String, Watcher,
      Stat, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, makePath, '(String, byte[],
      CreateMode, Watcher, boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, getChildren, '(String, Watcher,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, PathTrie<Api>, true, lookup, '(String, Map<String,String>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.zookeeper, BadVersionException, true, BadVersionException, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, clean, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, setData, '(String, byte[],
      int, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.cloud, Stats, true, time, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.core, DirectoryFactory, true, get, '(String, DirContext, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[5]', create-file,
    manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[6]', create-file,
    manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[7]', create-file,
    manual]
  - [org.apache.solr.common.cloud, ZkMaintenanceUtils, true, getZkParent, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.cloud, ElectionContext, true, ElectionContext, '(String, String,
      String, ZkNodeProps, SolrZkClient)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.cloud, OverseerTaskQueue, true, createData, '(String, byte[],
      CreateMode)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.cloud, ElectionContext, true, ElectionContext, '(String, String,
      String, ZkNodeProps, SolrZkClient)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, release, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common.cloud, ZkCoreNodeProps, true, getCoreUrl, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, info, '(String, Object[])', '', 'Argument[3]', open-url,
    manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, exists, '(String, Watcher,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object, Object)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.zookeeper, Op, true, delete, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.cloud, RecoveryStrategy, true, pingLeader, '(String, CoreDescriptor,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, info, '(String, Object)', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.solr.cloud, ZkSolrResourceLoader, true, ZkSolrResourceLoader, '(Path,
      String, ClassLoader, ZkController)', '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, warn, '(String, Object, Object)', '', 'Argument[1]',
    create-file, manual]
  - [java.util, List<String>, true, add, (String), '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, info, '(String, Object, Object)', '', 'Argument[1]',
    open-url, manual]
  - [org.slf4j, Logger, true, info, '(String, Object, Object)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.solr.cloud, SyncStrategy, true, requestSync, '(String, String, String,
      String, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.cloud, SyncStrategy, true, requestSync, '(String, String, String,
      String, int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.cloud, SyncStrategy, true, requestSync, '(String, String, String,
      String, int)', '', 'Argument[2]', open-url, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, SolrResourceLoader, '(Path, ClassLoader)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.params, ModifiableSolrParams, true, set, '(String, String[])',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.common.util, 'Pair<String,Integer>', true, 'Pair<String,Integer>',
    '(String, Integer)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.cloud, ZkController, true, pathExists, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.cloud, ZkByteArrayInputStream, true, ZkByteArrayInputStream,
    '(byte[], String, Stat)', '', 'Argument[1]', create-file, manual]
  - [org.slf4j, Logger, true, info, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, makePath, '(String, byte[],
      CreateMode, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.impl, SolrClientBuilder<Builder>, true, withHttpClient,
    (HttpClient), '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, info, '(String, Object)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.cloud, ZkController, true, getLeader, '(CloudDescriptor, int)',
    '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[4]', open-url,
    manual]
  - [org.slf4j, Logger, true, debug, '(String, Object, Object)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.solr.common, EntryWriter, true, put, '(CharSequence, CharSequence)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.cloud, PerReplicaStatesFetcher, true, fetch, '(String,
      SolrZkClient, PerReplicaStates)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, PerReplicaStatesOps, true, persist, '(String, SolrZkClient)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, DistribStateManager, true, removeRecursively,
    '(String, boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, DistribStateManager, true, hasData, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.cloud.api.collections, CreateCollectionCmd, true, getConfName,
    '(DistribStateManager, String, String, Map<String,Object>, ConfigSetService)',
    '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, DistribStateManager, true, makePath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, DistribStateManager, true, getData, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, warn, '(String, Object, Object)', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.solr.common.cloud, ZkNodeProps, true, ZkNodeProps, '(String[])', '',
    'Argument[7]', open-url, manual]
  - [org.apache.solr.common.util, Utils, true, getBaseUrlForNodeName, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.common.util, Utils, true, makeMap, '(Object[])', '', 'Argument[7]',
    open-url, manual]
  - [java.util, 'Map<String,Object>', true, put, '(String, Object)', '', 'Argument[1]',
    open-url, manual]
  - [java.util, 'IdentityHashMap<Directory,CacheValue>', true, get, (Object), '',
    'Argument[0]', create-file, manual]
  - [java.util, 'IdentityHashMap<Directory,CacheValue>', true, remove, (Object), '',
    'Argument[0]', create-file, manual]
  - [java.util, 'Map<String,CacheValue>', true, remove, (Object), '', 'Argument[0]',
    create-file, manual]
  - [java.util, 'Map<Directory,List<CloseListener>>', true, remove, (Object), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.core, CorePropertiesLocator, true, writePropertiesFile, '(CoreDescriptor,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, CorePropertiesLocator, true, buildCoreProperties, (CoreDescriptor),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, ConfigOverlay, true, isEditable, '(boolean, List<String>,
      List<String>)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.util, FileUtils, true, createDirectories, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.slf4j, Logger, true, error, '(String, Object, Object)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.solr.common, SolrException, true, SolrException, '(ErrorCode, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, ObjectReleaseTracker, true, release, (Object), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.core, CachingDirectoryFactory, true, normalize, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, create, '(String, LockFactory,
      DirContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, CacheValue, true, CacheValue, '(String, Directory)', '',
    'Argument[0]', create-file, manual]
  - [java.util, 'Map<String,CacheValue>', true, put, '(String, CacheValue)', '', 'Argument[0]',
    create-file, manual]
  - [org.slf4j, Logger, true, info, '(String, Object, Object)', '', 'Argument[2]',
    create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.core, CachingDirectoryFactory, true, remove, '(String, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, CachingDirectoryFactory, true, remove, '(Directory, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<String,CacheValue>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, ConfigSet, true, ConfigSet, '(String, SolrConfig, SchemaSupplier,
      NamedList<?>, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, CachingDirectoryFactory, true, stripTrailingSlash, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.schema, IndexSchemaFactory, true, create, '(String, SolrConfig,
      ConfigSetService)', '', 'Argument[0]', sql, manual]
  - [org.apache.solr.core, ConfigSetProperties, true, readFromResourceLoader, '(SolrResourceLoader,
      String)', '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, notExists, '(Path, LinkOption[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, CorePropertiesLocator, true, createName, '(Properties,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.security, AuthorizationPlugin, true, init, '(Map<String,Object>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, FileSystemConfigSetService, true, locateInstanceDir, (CoreDescriptor),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, sizeOfDirectory, (Directory), '',
    'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, copyFrom, '(Directory, String, String,
      IOContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, copyFrom, '(Directory, String, String,
      IOContext)', '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, copyFrom, '(Directory, String, String,
      IOContext)', '', 'Argument[2]', create-file, manual]
  - [org.apache.lucene.store, Directory, true, deleteFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.solr.core, CoreDescriptor, true, CoreDescriptor, '(String, Path, Map<String,String>,
      Properties, ZkController)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, sizeOf, '(Directory, String)',
    '', 'Argument[0]', create-file, manual]
  - [java.util, Properties, true, setProperty, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file, Files, true, list, (Path), '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, info, '(String, Object[])', '', 'Argument[2]', create-file,
    manual]
  - [java.nio.file, Files, true, getLastModifiedTime, '(Path, LinkOption[])', '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.core, ConfigOverlay, true, getXPathProperty, (List<String>),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrPaths, true, assertPathAllowed, '(Path, Set<Path>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrPaths, true, assertPathAllowed, '(Path, Set<Path>)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, modifyIndexProps, '(DirectoryFactory, String,
      SolrConfig, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, CorePropertiesLocator, true, buildCoreDescriptor, '(Path,
      CoreContainer)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrPaths, true, assertNotUnc, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, AllowPathBuilder, true, addPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.util, Set<Path>, true, add, (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.api, ApiBag, true, lookup, '(String, String, Map<String,String>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, getBaseDir, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, move, '(Directory, Directory, String,
      IOContext)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, move, '(Directory, Directory, String,
      IOContext)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, move, '(Directory, Directory, String,
      IOContext)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, renameWithOverwrite, '(Directory,
      String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, getIndexPropertyFromPropFile, (Directory),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, exists, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, NodeConfigBuilder, true, setConfigSetServiceClass, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, NodeConfigBuilder, true, setCoreRootDirectory, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, NodeConfigBuilder, true, setAllowPaths, (Set<Path>), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrXmlConfig, true, separatePaths, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotMetaDataManager, true, SolrSnapshotMetaDataManager,
    '(SolrCore, Directory)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.util, SafeXMLParsing, true, parseConfigXML, '(Logger, ResourceLoader,
      String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, AllowPathBuilder, true, addPath, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, addURLsToClassLoader, '(URLClassLoader,
      List<URL>)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotMetaDataManager, true, listSnapshotsInIndexDir,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, info, '(String, Object, Object)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, remove, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotManager, true, deleteNonSnapshotIndexFiles,
    '(SolrCore, Directory, Collection<SnapshotMetaData>)', '', 'Argument[1]', create-file,
    manual]
  - [java.util, List<URL>, true, addAll, '(Collection<? extends URL>)', '', 'Argument[0]',
    open-url, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object)', '', 'Argument[1]', open-url,
    manual]
  - [java.nio.file, Files, true, newDirectoryStream, '(Path, Filter<? super Path>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, getURLs, '(Path, Filter<Path>)',
    '', 'Argument[0]', create-file, manual]
  - [java.net, URLClassLoader, true, getResourceAsStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, SolrResourceNotFoundException, true, SolrResourceNotFoundException,
    (String), '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Path, true, startsWith, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, isReadable, (Path), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.core, SolrCore, true, SolrCore, '(CoreContainer, CoreDescriptor,
      ConfigSet, String, UpdateHandler, IndexDeletionPolicyWrapper, SolrCore, boolean)',
    '', 'Argument[3]', create-file, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, openResource, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, getURLs, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.util, Set<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.core, DirectoryFactory, true, normalize, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, getFilteredURLs, '(Path, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, isWriterLocked, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [org.slf4j, Logger, true, warn, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.lucene.store, LockObtainFailedException, true, LockObtainFailedException,
    (String), '', 'Argument[0]', create-file, manual]
  - [java.util, List<URL>, true, add, (URL), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, addToClassLoader, (List<URL>),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.update, SolrIndexWriter, true, create, '(SolrCore, String, String,
      DirectoryFactory, boolean, IndexSchema, SolrIndexConfig, IndexDeletionPolicy,
      Codec)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.update, SolrIndexWriter, true, create, '(SolrCore, String, String,
      DirectoryFactory, boolean, IndexSchema, SolrIndexConfig, IndexDeletionPolicy,
      Codec)', '', 'Argument[3]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, createURI, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, resolve, '(URI,
      String[])', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, copyIndexFileFrom,
    '(Directory, String, URI, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, copyIndexFileTo,
    '(URI, String, Directory, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, initDataDir, '(String, SolrConfig, CoreDescriptor)',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Path, true, of, '(String, String[])', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotManager, true, getSnapshotMetaDataZkPath,
    '(String, Optional<String>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.backup.repository, LocalFileSystemRepository, true, exists,
    (URI), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, copyIndexFileFrom,
    '(Directory, String, Directory, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotMetaDataManager, true, SolrSnapshotMetaDataManager,
    '(SolrCore, Directory, OpenMode)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core.snapshots, SnapshotMetaData, true, SnapshotMetaData, '(String,
      String, long)', '', 'Argument[1]', create-file, manual]
  - [org.slf4j, Logger, true, info, '(String, Object[])', '', 'Argument[4]', create-file,
    manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotManager, true, deleteSnapshotIndexFiles,
    '(SolrCore, Directory, IndexDeletionPolicy)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.core, SolrCore, true, findDataDir, '(DirectoryFactory, String,
      SolrConfig, CoreDescriptor)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, findDataDir, '(DirectoryFactory, String,
      SolrConfig, CoreDescriptor)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, findDataDir, '(DirectoryFactory, String,
      SolrConfig, CoreDescriptor)', '', 'Argument[3]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, isAbsolute, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, SolrPaths, true, normalizeDir, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, SolrCore, true, modifyIndexProps, '(DirectoryFactory, String,
      SolrConfig, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, modifyIndexProps, '(DirectoryFactory, String,
      SolrConfig, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, writeNewIndexProps, '(Directory, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.update, SolrIndexWriter, true, SolrIndexWriter, '(String, Directory,
      IndexWriterConfig)', '', 'Argument[1]', create-file, manual]
  - [org.apache.lucene.util, IOUtils, true, deleteFilesIgnoringExceptions, '(Directory,
      String[])', '', 'Argument[0]', create-file, manual]
  - [java.lang, IllegalStateException, true, IllegalStateException, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.io.stream.expr, StreamExpression, true, addParameter,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.commons.io, FileUtils, true, lineIterator, '(File, String)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.client.solrj.io, Tuple, true, Tuple, '(String, Object, String,
      Object)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, CrawlFile, true, CrawlFile, '(String, Path)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.search, SolrIndexSearcher, true, SolrIndexSearcher, '(SolrCore,
      String, IndexSchema, String, DirectoryReader, boolean, boolean, boolean, DirectoryFactory)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.client.solrj.io.stream.expr, StreamFactory, true, withCollectionZkHost,
    '(String, String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream.expr, StreamFactory, true, withDefaultZkHost,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io, ModelCache, true, ModelCache, '(int, String,
      SolrClientCache)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.handler, IncrementalShardBackup, true, incrementalCopy, '(Collection<String>,
      Directory)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler.export, ExportWriter, true, ExportWriter, '(SolrQueryRequest,
      SolrQueryResponse, String, StreamContext, SolrMetricsContext, String)', '',
    'Argument[5]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, checksum, '(Directory,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, getUsableSpace, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, setLeaderUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.security, AllowListUrlChecker, true, checkAllowList, '(List<String>,
      ClusterState)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.security, AllowListUrlChecker, true, checkAllowList, '(List<String>,
      ClusterState)', '', 'Argument[1]', open-url, manual]
  - [java.util, Collections, true, singletonList, (T), '', 'Argument[0]', open-url,
    manual]
  - [java.nio.file, Files, true, write, '(Path, byte[], OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common, SolrException, true, SolrException, '(ErrorCode, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, resolveDirectory,
    '(URI, String[])', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.impl, Builder, true, Builder, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.slf4j, Logger, true, warn, '(String, Object, Object)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.solr.handler, IndexFetcher, true, compareFile, '(Directory, String,
      Long, Long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, RestoreRepository, true, repoCopy, '(String, Directory)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, RestoreRepository, true, localCopy, '(Directory, String,
      Directory)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, RestoreRepository, true, localCopy, '(Directory, String,
      Directory)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, doneWithDirectory, (Directory),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, deleteNonSnapshotIndexFiles, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, SnapShooter, true, initialize, '(BackupRepository, SolrCore,
      URI, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.core, CoreContainer, true, assertPathAllowed, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, copyFileTo, '(URI,
      String, Directory)', '', 'Argument[2]', create-file, manual]
  - [java.nio.file, Paths, true, get, (URI), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, listAll, (URI),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, exists, (URI),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, isIndexStale, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, remove, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, remove, '(String, boolean)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, hasUnusedFiles, '(Directory, IndexCommit)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, downloadIndexFiles, '(boolean, Directory,
      Directory, String, String, long)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, downloadIndexFiles, '(boolean, Directory,
      Directory, String, String, long)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, downloadIndexFiles, '(boolean, Directory,
      Directory, String, String, long)', '', 'Argument[3]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, downloadIndexFiles, '(boolean, Directory,
      Directory, String, String, long)', '', 'Argument[4]', create-file, manual]
  - [org.slf4j, Logger, true, error, '(String, Object[])', '', 'Argument[2]', create-file,
    manual]
  - [org.apache.solr.handler, IndexFetcher, true, moveIndexFiles, '(Directory, Directory)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, moveIndexFiles, '(Directory, Directory)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, cleanup, '(SolrCore, Directory,
      Directory, boolean, File, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, cleanup, '(SolrCore, Directory,
      Directory, boolean, File, boolean)', '', 'Argument[2]', create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[2]', create-file,
    manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, copyFileFrom,
    '(Directory, String, URI)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrCore, true, checkStale, '(SolrZkClient, String, int)',
    '', 'Argument[1]', create-file, manual]
  - [java.lang, Thread, true, Thread, '(Runnable, String)', '', 'Argument[1]', create-file,
    manual]
  - [org.slf4j, Logger, true, debug, '(String, Object, Object)', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, cleanupOldIndexDirectories, '(String,
      String, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, DirectoryFactory, true, cleanupOldIndexDirectories, '(String,
      String, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, createDirectoryURI,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.handler, RestoreCore, true, create, '(BackupRepository, SolrCore,
      URI, String)', '', 'Argument[2]', open-url, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, listAll, (URI),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.handler, OldBackupDirectory, true, OldBackupDirectory, '(URI,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.slf4j, MDC, true, put, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, createDirectoryURI,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, SnapShooter, true, SnapShooter, '(BackupRepository,
      SolrCore, URI, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.handler, LocalFsFileFetcher, true, LocalFsFileFetcher, '(File,
      Map<String,Object>, String, String, long)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.handler, LocalFsFileFetcher, true, LocalFsFileFetcher, '(File,
      Map<String,Object>, String, String, long)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.handler, LocalFsFileFetcher, true, LocalFsFileFetcher, '(File,
      Map<String,Object>, String, String, long)', '', 'Argument[2]', create-file,
    manual]
  - [java.util, 'HashMap<String,Object>', true, 'HashMap<String,Object>', '(Map<?
      extends String,? extends Object>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, copyTmpConfFiles2Conf, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, delTree, (File), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.store, FilterDirectory, true, unwrap, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [java.util.function, 'Function<String,Long>', true, apply, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, deleteFilesInAdvance, '(Directory,
      String, long, long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, deleteFilesInAdvance, '(Directory,
      String, long, long)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, compareFile, '(Directory, String,
      Long, Long)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, filesToAlwaysDownloadIfNoChecksums,
    '(String, long, CompareResult)', '', 'Argument[0]', create-file, manual]
  - [java.io, File, true, File, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, createLink, '(Path, Path)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.handler, DirectoryFileFetcher, true, DirectoryFileFetcher, '(Directory,
      Map<String,Object>, String, String, long)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.handler, DirectoryFileFetcher, true, DirectoryFileFetcher, '(Directory,
      Map<String,Object>, String, String, long)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.common.cloud, ZkStateReader, true, getBaseUrlForNodeName, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.nio.file, Files, true, getFileStore, (Path), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.handler, ReplicationHandler, true, getConfFileInfoFromCache,
    '(NamedList<String>, Map<String,FileInfo>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, slowFileExists, '(Directory, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, slowFileExists, '(Directory, String)',
    '', 'Argument[1]', create-file, manual]
  - [java.util, 'Map<String,FileInfo>', true, get, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.lucene.store, Directory, true, fileLength, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.slf4j, Logger, true, warn, '(String, Object)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.handler, IndexFetcher, true, moveAFile, '(Directory, Directory,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, moveAFile, '(Directory, Directory,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, moveAFile, '(Directory, Directory,
      String)', '', 'Argument[2]', create-file, manual]
  - [java.nio.file, Files, true, walk, '(Path, FileVisitOption[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.handler, IndexFetcher, true, makeTmpConfDirFileList, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common, SolrException, true, SolrException, '(ErrorCode, String,
      Throwable)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, NamedList<Object>, true, add, '(String, Object)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, NamedList<Object>, true, add, '(String, Object)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.io, SolrClientCache, true, getHttpSolrClient, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, error, '(String, Object)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.common.params, ModifiableSolrParams, true, set, '(String, String[])',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, DirectoryFile, true, DirectoryFile, '(Directory, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, DirectoryFile, true, DirectoryFile, '(Directory, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler, FileFetcher, true, FileFetcher, '(FileInterface, Map<String,Object>,
      String, String, long)', '', 'Argument[2]', create-file, manual]
  - [java.io, File, true, File, '(File, String)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.handler, LocalFsFile, true, LocalFsFile, '(File, String)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.handler, LocalFsFile, true, LocalFsFile, '(File, String)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, PropertiesUtil, true, substituteProperty, '(String,
      Properties)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core, CoreContainer, true, create, '(String, Path, Map<String,String>,
      boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.core.snapshots, SolrSnapshotMetaDataManager, true, snapshot,
    '(String, String, long)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.response, SolrQueryResponse, true, add, '(String, Object)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, NamedList<String>, true, add, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler.admin, CoreAdminHandler, true, normalizePath, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<Directory,Boolean>', true, put, '(Directory, Boolean)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.lucene.index, DirectoryReader, true, open, (Directory), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.cloud, OverseerTaskProcessor, true, getSortedElectionNodes, '(SolrZkClient,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.handler.admin, ShowFileRequestHandler, true, getAdminFileFromFileSystem,
    '(SolrQueryRequest, SolrQueryResponse, Set<String>)', '', 'Argument[2]', create-file,
    manual]
  - [org.apache.solr.handler.admin, ZookeeperStatusHandler, true, getZkStatus, '(String,
      ZkDynamicConfig)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.cloud, ZkDynamicConfig, true, fromZkConnectString, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.handler.admin, ZookeeperStatusHandler, true, monitorZookeeper,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.handler.admin, ZookeeperStatusHandler, true, getZkRawResponse,
    '(String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.handler.admin, ZookeeperStatusHandler, true, validateZkRawResponse,
    '(List<String>, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.solr.common, SolrException, true, SolrException, '(ErrorCode, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.solr.handler.admin.api, ReplaceNodeAPI, true, createRemoteMessage,
    '(String, ReplaceNodeRequestBody)', '', 'Argument[1]', sql, manual]
  - [java.util, 'Map<String,List<String>>', true, put, '(String, List<String>)', '',
    'Argument[1]', open-url, manual]
  - [org.apache.solr.handler.component, HttpShardHandlerFactory, true, newLBHttpSolrClientReq,
    '(QueryRequest, List<String>)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, Req, true, Req, '(SolrRequest<?>, List<String>,
      Integer)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.common.util, StrUtils, true, splitSmart, '(String, String, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [java.util, List<String>, true, set, '(int, String)', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.solr.handler.component, HttpShardHandlerFactory, true, buildUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.util, URLUtil, true, hasScheme, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.commons.lang3, StringUtils, true, defaultIfEmpty, '(T, T)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.common.util, URLUtil, true, removeScheme, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.util, SafeXMLParsing, true, parseConfigXML, '(Logger, ResourceLoader,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.http.client.methods, HttpEntityEnclosingRequestBase, true, setEntity,
    (HttpEntity), '', 'Argument[0]', open-url, manual]
  - [org.apache.http.entity, ByteArrayEntity, true, ByteArrayEntity, '(byte[])', '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.handler.designer, SchemaDesignerConfigSetHelper, true, isMatchingLangOrNonLangFile,
    '(String, Set<String>)', '', 'Argument[0]', create-file, manual]
  - [org.glassfish.jersey.server, ContainerRequest, true, ContainerRequest, '(URI,
      URI, String, SecurityContext, PropertiesDelegate, Configuration)', '', 'Argument[1]',
    open-url, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[6]',
    open-url, manual]
  - [org.apache.solr.client.solrj.request, Builder, true, Builder, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.fasterxml.jackson.databind, ObjectMapper, true, readValue, '(String, Class<T>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.io, IOUtils, true, toString, '(InputStream, String)', '',
    'Argument[0]', open-url, manual]
  - [com.fasterxml.jackson.databind, ObjectMapper, true, readValue, '(String, Class<T>)',
    '', 'Argument[0]', create-file, manual]
  - [com.fasterxml.jackson.databind, ObjectMapper, true, writeValueAsString, (Object),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.packagemanager, PackageUtils, true, postFile, '(SolrClient, ByteBuffer,
      String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.solr.packagemanager, PackageUtils, true, postFile, '(SolrClient, ByteBuffer,
      String, String)', '', 'Argument[2]', open-url, manual]
  - [java.util, Arrays, true, asList, '(T[])', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.packagemanager, PackageRepository, true, download, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.util, SolrCLI, true, postJsonToSolr, '(SolrClient, String, String)',
    '', 'Argument[2]', open-url, manual]
  - [com.fasterxml.jackson.databind, ObjectMapper, true, writeValueAsString, (Object),
    '', 'Argument[0]', sql, manual]
  - [org.apache.solr.util, SolrCLI, true, postJsonToSolr, '(SolrClient, String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.packagemanager, PackageUtils, true, resolve, '(String, Map<String,String>,
      Map<String,String>, Map<String,String>)', '', 'Argument[2]', open-url, manual]
  - [org.apache.solr.packagemanager, PackageUtils, true, printGreen, (Object), '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.packagemanager, PackageUtils, true, getJsonStringFromUrl, '(HttpClient,
      String)', '', 'Argument[1]', open-url, manual]
  - [com.jayway.jsonpath, ReadContext, true, read, '(String, Predicate[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.response.transform, SubQueryAugmenterFactory, true, retainAndShiftPrefix,
    '(SolrParams, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common, SolrException, true, SolrException, '(ErrorCode, String,
      Throwable)', '', 'Argument[1]', sql, manual]
  - [org.apache.solr.schema, IndexSchema, true, IndexSchema, '(String, ConfigResource,
      Version, SolrResourceLoader, Properties)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.util, IOUtils, true, fsync, '(Path, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.schema, ManagedIndexSchemaFactory, true, locateConfigFile, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, resourceLocation, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkCmdExecutor, true, ensureExists, '(String, SolrZkClient)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, setData, '(String, byte[],
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.util, ResourceLoader, true, openResource, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.schema, IndexSchema, true, isValidFieldGlob, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.util, VersionedFile, true, getLatestFile, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.security, AllowListUrlChecker, true, parseHostPort, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.util.regex, Pattern, true, matcher, (CharSequence), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.servlet, SolrRequestParsers, true, parseQueryString, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.security, AuthenticationProvider, true, authenticate, '(String,
      String)', '', 'Argument[0]', sql, manual]
  - [java.util, Set<String>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [org.slf4j, Logger, true, error, '(String, Object, Object)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.solr.core, CoreContainer, true, getRequestHandler, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.security, WildCardSupportMap, true, get, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.servlet, HttpSolrCall, true, remoteQuery, '(String, HttpServletResponse)',
    '', 'Argument[0]', open-url, manual]
  - [io.opentracing, SpanBuilder, true, withTag, '(Tag<T>, T)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.solr.security, WildCardSupportMap, true, put, '(String, List<Permission>)',
    '', 'Argument[0]', create-file, manual]
  - [javax.servlet, ServletRequest, true, getRequestDispatcher, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.servlet, HttpSolrCallFactory, true, createInstance, '(SolrDispatchFilter,
      String, CoreContainer, HttpServletRequest, HttpServletResponse, boolean)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.solr.core, RequestHandlers, true, normalize, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.http.client.methods, HttpHead, true, HttpHead, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http.client.methods, HttpPost, true, HttpPost, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http.client.methods, HttpPut, true, HttpPut, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http.client.methods, HttpDelete, true, HttpDelete, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http.client.methods, HttpOptions, true, HttpOptions, (String), '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.core, SolrResourceLoader, true, getLines, '(String, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.security, AuthorizationUtils, true, getCollectionRequests, '(String,
      List<String>, SolrParams)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj, SolrRequest<UpdateResponse>, true, setBasePath,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj, SolrClient, true, request, '(SolrRequest<?>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.update, SolrIndexWriter, true, SolrIndexWriter, '(SolrCore, String,
      String, Directory, boolean, IndexSchema, SolrIndexConfig, IndexDeletionPolicy,
      Codec)', '', 'Argument[2]', create-file, manual]
  - [org.apache.lucene.index, IndexWriter, true, IndexWriter, '(Directory, IndexWriterConfig)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.lucene.misc.store, HardlinkCopyDirectoryWrapper, true, HardlinkCopyDirectoryWrapper,
    (Directory), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.update, StreamingSolrClients, true, getFullUrl, (String), '',
    'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,ConcurrentUpdateHttp2SolrClient>', true, get, (Object),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.update, Builder, true, Builder, '(String, Http2SolrClient, Req,
      List<SolrError>)', '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,ConcurrentUpdateHttp2SolrClient>', true, put, '(String,
      ConcurrentUpdateHttp2SolrClient)', '', 'Argument[0]', open-url, manual]
  - [org.slf4j, Logger, true, error, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.client.solrj.impl, Builder, true, Builder, '(String, Http2SolrClient)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.update, TransactionLog, true, TransactionLog, '(Path, Collection<String>,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj, SolrRequest<SimpleSolrResponse>, true, setBasePath,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.update, UpdateLog, true, newTransactionLog, '(Path, Collection<String>,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, walk, '(Path, int, FileVisitOption[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.update.processor, NestedUpdateProcessor, true, setPathField,
    '(SolrInputDocument, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.update.processor, NestedUpdateProcessor, true, processDocChildren,
    '(SolrInputDocument, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common, SolrInputDocument, true, setField, '(String, Object)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common, SolrInputDocument, true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.common, SolrInputDocument, true, getFieldValue, (String), '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.update.processor, URLClassifyProcessor, true, getNormalizedURL,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.io, FileExistsException, true, FileExistsException, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.util, SystemIdResolver, true, createSystemIdFromResourceName,
    (String), '', 'Argument[0]', create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, String, String)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.solr.util, SimplePostTool, true, postDirectory, '(File, OutputStream,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.client.solrj.request, ContentStreamUpdateRequest, true, ContentStreamUpdateRequest,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.util, SimplePostTool, true, postData, '(InputStream, Long, OutputStream,
      String, URL)', '', 'Argument[2]', open-url, manual]
  - [java.util.zip, GZIPInputStream, true, GZIPInputStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.util.zip, InflaterInputStream, true, InflaterInputStream, '(InputStream,
      Inflater)', '', 'Argument[0]', open-url, manual]
  - [java.util, List<Path>, true, add, (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.handler.clustering, PathResourceLookup, true, PathResourceLookup,
    (List<Path>), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.gcs, GCSConfig, true, GCSConfig, '(String, String, int, int,
      Builder)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.gcs, GCSConfig, true, GCSConfig, '(String, String, int, int,
      Builder)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.gcs, GCSBackupRepository, true, createURI, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.lang, StringBuilder, true, StringBuilder, (String), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.gcs, GCSBackupRepository, true, resolve, '(URI, String[])', '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.gcs, GCSBackupRepository, true, exists, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.cloud.storage, Storage, true, get, '(String, String, BlobGetOption[])',
    '', 'Argument[1]', create-file, manual]
  - [com.google.cloud.storage, Storage, true, get, '(String, String, BlobGetOption[])',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.gcs, GCSBackupRepository, true, appendTrailingSeparatorIfNecessary,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.google.cloud.storage, BlobListOption, true, prefix, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.hdfs.store, HdfsFileWriter, true, HdfsFileWriter, '(FileSystem,
      Path, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.hdfs.store, HdfsFileWriter, true, HdfsFileWriter, '(FileSystem,
      Path, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(Path, String)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(Path, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.solr.hdfs.backup.repository, HdfsBackupRepository, true, resolve,
    '(URI, String[])', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, (URI), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.hdfs.store, HdfsIndexInput, true, HdfsIndexInput, '(String, FileSystem,
      Path, int)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, listStatus, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.hdfs.store.blockcache, CachedIndexInput, true, CachedIndexInput,
    '(IndexInput, int, String, String, Cache, int)', '', 'Argument[3]', create-file,
    manual]
  - [org.apache.solr.hdfs.store.blockcache, BlockDirectoryCache, true, BlockDirectoryCache,
    '(BlockCache, String, Metrics, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.hdfs.store.blockcache, BlockDirectory, true, BlockDirectory,
    '(String, Directory, Cache, Set<String>, boolean, boolean, boolean, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.hdfs.store.blockcache, Cache, true, renameCacheFile, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.hdfs.store.blockcache, Cache, true, renameCacheFile, '(String,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.hdfs.store.blockcache, Cache, true, delete, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.hdfs, HdfsDirectoryFactory, true, getCachedFileSystem, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.hdfs.util, HdfsUtil, true, addHdfsResources, '(Configuration,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.hdfs.store.blockcache, BlockCacheKey, true, setPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.github.benmanes.caffeine.cache, 'Cache<String,Integer>', true, getIfPresent,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.github.benmanes.caffeine.cache, 'Cache<String,Integer>', true, invalidate,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.cloud, ZkController, true, trimLeadingAndTrailingSlashes, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.core, CachingDirectoryFactory, true, getPath, (Directory), '',
    'Argument[0]', create-file, manual]
  - [com.google.common.cache, 'Cache<String,FileSystem>', true, get, '(String, Callable<?
      extends FileSystem>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.security, UserGroupInformation, true, loginUserFromKeytab,
    '(String, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, checkPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(Path, Path)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.solr.hdfs, HdfsDirectoryFactory, true, getConf, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, open, (Path), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.fs, RawLocalFileSystem, true, pathToFile, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, delete, '(Path, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, listStatus, '(Path, PathFilter)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, RawLocalFileSystem, true, getFileLinkStatusInternal, '(Path,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.hdfs.update, HdfsUpdateLog, true, getBufferLogList, '(FileSystem,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.security.jwt, JWTIssuerConfig, true, fetchWellKnown, (URL), '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.security.jwt, JWTIssuerConfig, true, setWellKnownUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.security.jwt, JWTIssuerConfig, true, setJwksUrl, (Object), '',
    'Argument[0]', open-url, manual]
  - [org.apache.solr.security.jwt, JWTIssuerConfig, true, setAuthorizationEndpoint,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.security.jwt, WellKnownDiscoveryConfig, true, parse, '(URL, Collection<X509Certificate>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.security.jwt, JWTIssuerConfig, true, checkAllowOutboundHttpConnections,
    '(String, URL)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.s3, S3StorageClient, true, S3StorageClient, '(String, String,
      String, String, boolean, String, boolean)', '', 'Argument[3]', open-url, manual]
  - [org.apache.solr.s3, S3StorageClient, true, S3StorageClient, '(String, String,
      String, String, boolean, String, boolean)', '', 'Argument[5]', open-url, manual]
  - [org.apache.solr.common, StringUtils, true, isEmpty, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, URI, '(String, String, String, String)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.solr.s3, S3StorageClient, true, createInternalClient, '(String, String,
      String, boolean, String, boolean)', '', 'Argument[2]', open-url, manual]
  - [org.apache.solr.s3, S3StorageClient, true, createInternalClient, '(String, String,
      String, boolean, String, boolean)', '', 'Argument[4]', open-url, manual]
  - [org.apache.solr.common, StringUtils, true, isEmpty, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.s3, S3BackupRepository, true, createURI, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.s3, S3BackupRepository, true, resolve, '(URI, String[])', '',
    'Argument[0]', open-url, manual]
  - [software.amazon.awssdk.http.apache, Builder, true, endpoint, (URI), '', 'Argument[0]',
    open-url, manual]
  - [software.amazon.awssdk.core.client.builder, 'SdkClientBuilder<S3ClientBuilder,S3Client>',
    true, endpointOverride, (URI), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.s3, S3BackupRepository, true, getS3Path, (URI), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.scripting.update, EngineInfo, true, EngineInfo, '(Invocable,
      ScriptFile)', '', 'Argument[1]', create-file, manual]
  - [org.apache.commons.io, FilenameUtils, true, getExtension, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.calcite.avatica, UnregisteredDriver, true, connect, '(String, Properties)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.params, SolrParams, true, get, '(String, String)', '',
    'Argument[1]', open-url, manual]
  - [org.apache.calcite.avatica, UnregisteredDriver, true, acceptsURL, (String), '',
    'Argument[0]', open-url, manual]
  - [java.util, Properties, true, setProperty, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.solr.client.solrj.impl, BaseHttpClusterStateProvider, true, getSolrClient,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, RemoteExecutionException, true, RemoteExecutionException,
    '(String, int, String, NamedList<?>)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, ClusterStateProvider, true, newZkClusterStateProvider,
    '(Collection<String>, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.util, Utils, true, getBaseUrlForNodeName, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [java.lang.reflect, 'Constructor<? extends ClusterStateProvider>', true, newInstance,
    '(Object[])', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, Builder, true, withBaseSolrUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, valueOf, (Object), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj, 'SolrRequest<?>', true, setBasePath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj, SolrRequest<UpdateResponse>, true, setBasePath,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.slf4j, MDC, true, put, '(String, String)', '', 'Argument[1]', open-url, manual]
  - [java.util, 'Map<String,Future<NamedList<?>>>', true, put, '(String, Future<NamedList<?>>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.util, 'NamedList<NamedList<?>>', true, add, '(String,
      NamedList<?>)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.util, NamedList<Throwable>, true, add, '(String, Throwable)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.http.message, BasicHeader, true, BasicHeader, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.solr.client.solrj.impl, LBSolrClient, true, request, (Req), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.client.solrj.impl, Req, true, Req, '(SolrRequest<?>, List<String>)',
    '', 'Argument[1]', open-url, manual]
  - [java.util, Collections, true, shuffle, '(List<?>, Random)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.common, SolrException, true, SolrException, '(ErrorCode, String,
      Throwable)', '', 'Argument[1]', open-url, manual]
  - [org.apache.http.client.methods, HttpDelete, true, HttpDelete, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.client.solrj.impl, Builder, true, Builder, '(String, Http2SolrClient,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, Http2SolrClient, true, makeRequest, '(SolrRequest<?>,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, HttpSolrClient, true, fillContentStream, '(SolrRequest<?>,
      Collection<ContentStream>, ModifiableSolrParams, boolean, List<NameValuePair>,
      String)', '', 'Argument[5]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, HttpSolrClient, true, calculateQueryParams,
    '(Set<String>, ModifiableSolrParams)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj, SolrServerException, true, SolrServerException,
    '(String, Throwable)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, Http2SolrClient, true, createRequest, '(SolrRequest<?>,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.request, RequestWriter, true, getPath, '(SolrRequest<?>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, Http2SolrClient, true, changeV2RequestEndpoint,
    (String), '', 'Argument[0]', create-file, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<String,HttpSolrClient>', true, get,
    (Object), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, LBHttpSolrClient, true, makeSolrClient, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.eclipse.jetty.client, HttpClient, true, newRequest, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.client.solrj.impl, RemoteSolrException, true, RemoteSolrException,
    '(String, int, String, Throwable)', '', 'Argument[0]', open-url, manual]
  - [org.eclipse.jetty.client, HttpClient, true, newRequest, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.client.solrj.impl, Http2SolrClient, true, calculateQueryParams,
    '(Set<String>, ModifiableSolrParams)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, RemoteExecutionException, true, create, '(String,
      NamedList<?>)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj, SolrRequest, true, SolrRequest, '(METHOD, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.client.solrj.impl, Http2SolrClient, true, Http2SolrClient, '(String,
      Builder)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.request, AbstractUpdateRequest, true, AbstractUpdateRequest,
    '(METHOD, String)', '', 'Argument[1]', open-url, manual]
  - [java.util, 'Map<String,ServerWrapper>', true, put, '(String, ServerWrapper)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj, 'SolrRequest<?>', true, setBasePath, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, LBSolrClient, true, getClient, (String), '',
    'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,ServerWrapper>', true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<String,ServerWrapper>', true, remove, (Object), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.client.solrj.impl, LBSolrClient, true, removeFromAlive, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.request, V2Request, true, V2Request, '(METHOD, String,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [java.util, 'Map<String,T>', true, get, (Object), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.client.solrj, SolrRequest<UpdateResponse>, true, setPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.request, ReqSupplier<T>, true, get, '(UpdateRequest,
      List<String>)', '', 'Argument[1]', open-url, manual]
  - [java.util, 'Map<String,T>', true, put, '(String, T)', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.client.solrj.request, UpdateRequest, true, getRoutes, '(DocRouter,
      DocCollection, Map<String,List<String>>, ModifiableSolrParams, String, ReqSupplier<T>)',
    '', 'Argument[2]', open-url, manual]
  - [org.apache.solr.common.params, ModifiableSolrParams, true, add, '(String, String[])',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.params, ModifiableSolrParams, true, setNonNull, '(String,
      Object)', '', 'Argument[1]', create-file, manual]
  - [java.util, Objects, true, requireNonNull, '(T, String)', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.common.util, JsonRecordReader, true, addField, '(String, String,
      boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, JsonRecordReader, true, splitEscapeQuote, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, Node, true, build, '(List<String>, String, boolean,
      boolean, String)', '', 'Argument[4]', create-file, manual]
  - [org.apache.solr.common.util, JavaBinCodec, true, writeStr, (CharSequence), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, Node, true, build, '(List<String>, String, boolean,
      boolean, String)', '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<String,Node>', true, get, (Object), '', 'Argument[0]', create-file,
    manual]
  - [java.util, 'Map<String,Node>', true, put, '(String, Node)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common.util, Node, true, Node, '(String, Node)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common.util, StrUtils, true, splitSmart, '(String, char, List<String>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, Node, true, lookupNode, '(List<String>, int, Map<String,String>,
      Set<String>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, Node, true, lookup, '(List<String>, int, Map<String,String>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.util, TextWriter, true, writeStrRaw, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, TextWriter, true, writeStr, '(String, String, boolean)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.util, Node, true, findAvailableChildren, '(String, Set<String>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.io, ModelCache, true, getModel, '(String, String,
      String, long)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, CloudSolrStream, true, CloudSolrStream,
    '(String, String, SolrParams)', '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,SolrClient>', true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<String,SolrClient>', true, get, (Object), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.common.params, ModifiableSolrParams, true, set, '(String, String[])',
    '', 'Argument[1]', sql, manual]
  - [java.util, 'Map<String,SolrClient>', true, put, '(String, SolrClient)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.common.params, ModifiableSolrParams, true, ModifiableSolrParams,
    (SolrParams), '', 'Argument[0]', sql, manual]
  - [org.apache.solr.client.solrj.io.stream.expr, StreamExpressionNamedParameter,
    true, StreamExpressionNamedParameter, '(String, String)', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.solr.client.solrj.io.sql, DriverImpl, true, processUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.sql, DriverImpl, true, acceptsURL, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.sql, DriverImpl, true, loadParams, '(URI, Properties)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.sql, DriverImpl, true, loadParams, '(URI, Properties)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.io.sql, ConnectionImpl, true, ConnectionImpl, '(String,
      String, String, Properties)', '', 'Argument[0]', open-url, manual]
  - [org.apache.http.client.utils, URLEncodedUtils, true, parse, '(URI, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.sql, StatementImpl, true, containsLimit, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.solr.client.solrj.io.sql, StatementImpl, true, constructStream, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.solr.client.solrj.io.stream, SolrStream, true, SolrStream, '(String,
      SolrParams)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.sql, StatementImpl, true, executeQueryImpl, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.solr.client.solrj.io.stream, CloudSolrStream, true, init, '(String,
      String, SolrParams)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream.expr, StreamExpression, true, addParameter,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.solr.client.solrj.io, SolrClientCache, true, getCloudSolrClient, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, TupleStream, true, getReplicas, '(String,
      String, StreamContext, SolrParams)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, TupleStream, true, getShards, '(String,
      String, StreamContext, SolrParams)', '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,Tuple>', true, put, '(String, Tuple)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, FeaturesSelectionCall, true, FeaturesSelectionCall,
    '(String, Map<String,String>, String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, FeaturesSelectionCall, true, FeaturesSelectionCall,
    '(String, Map<String,String>, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.impl, Builder, true, Builder, '(List<String>, Optional<String>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, FeaturesSelectionStream, true, callShards,
    (List<String>), '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj, SolrRequest<QueryResponse>, true, setPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.sql, DriverManager, true, getDriver, (String), '', 'Argument[0]', sql, manual]
  - [java.io, IOException, true, IOException, '(String, Throwable)', '', 'Argument[0]',
    sql, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[2]',
    sql, manual]
  - [java.sql, Driver, true, connect, '(String, Properties)', '', 'Argument[0]', sql,
    manual]
  - [java.sql, Driver, true, connect, '(String, Properties)', '', 'Argument[1]', sql,
    manual]
  - [java.sql, Statement, true, executeQuery, (String), '', 'Argument[0]', sql, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[3]',
    sql, manual]
  - [org.apache.solr.client.solrj.io.stream.expr, StreamExpressionNamedParameter,
    true, StreamExpressionNamedParameter, '(String, String)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.solr.client.solrj.io.stream, TupleStream, true, getShards, '(String,
      String, StreamContext)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, StatsStream, true, init, '(String, SolrParams,
      Metric[], String)', '', 'Argument[3]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, SignificantTermsCall, true, SignificantTermsCall,
    '(String, Map<String,String>, String, float, float, int, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.io, IOException, true, IOException, (String), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.solr.client.solrj.io.stream, StatsStream, true, StatsStream, '(String,
      String, SolrParams, Metric[])', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, LogitCall, true, LogitCall, '(String,
      Map<String,String>, String, List<String>, List<Double>, String, int, double,
      int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, LogitCall, true, LogitCall, '(String,
      Map<String,String>, String, List<String>, List<Double>, String, int, double,
      int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.solr.client.solrj.io.stream, TextLogitStream, true, callShards, (List<String>),
    '', 'Argument[0]', open-url, manual]
  - [java.util, 'HashMap<String,String>', true, put, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.lang, Exception, true, Exception, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.solr.client.solrj.cloud, DistribStateManager, true, getData, '(String,
      Watcher)', '', 'Argument[0]', create-file, manual]
  - [java.util, Deque<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.util, NoSuchElementException, true, NoSuchElementException, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.impl, ZkDistribStateManager, true, listData, '(String,
      Watcher)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, makePath, '(String, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, AlreadyExistsException, true, AlreadyExistsException,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, NotEmptyException, true, NotEmptyException,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.client.solrj.cloud, BadVersionException, true, BadVersionException,
    '(int, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkStateReader, true, ZkStateReader, '(String, int,
      int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.cloud, ZkClientConnectionStrategy, true, createZooKeeper,
    '(String, int, Watcher)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, getChildren, '(String, Watcher,
      Stat, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, PerReplicaStates, true, PerReplicaStates, '(String,
      int, List<String>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, SolrZkClient, '(String, int,
      int, ZkClientConnectionStrategy, OnReconnect, BeforeReconnect, ZkACLProvider,
      IsClosed)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.common.cloud, ConnectionManager, true, ConnectionManager, '(String,
      SolrZkClient, String, ZkClientConnectionStrategy, OnReconnect, BeforeReconnect,
      IsClosed)', '', 'Argument[2]', open-url, manual]
  - [org.apache.solr.common.cloud, ZkClientConnectionStrategy, true, connect, '(String,
      int, Watcher, ZkUpdate)', '', 'Argument[0]', open-url, manual]
  - [org.apache.zookeeper, Op, true, create, '(String, byte[], List<ACL>, CreateMode)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkACLProvider, true, getACLsToAdd, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkCmdExecutor, true, ensureExists, '(String, byte[],
      CreateMode, SolrZkClient, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, makePath, '(String, byte[],
      CreateMode, Watcher, boolean, boolean, int)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.zookeeper, ZooKeeper, true, exists, '(String, Watcher)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common.cloud, ZkClientConnectionStrategy, true, newZooKeeperInstance,
    '(String, int, Watcher)', '', 'Argument[0]', open-url, manual]
  - [org.apache.zookeeper, ZooKeeper, true, ZooKeeper, '(String, int, Watcher)', '',
    'Argument[0]', open-url, manual]
  - [org.apache.zookeeper, ZooKeeper, true, setData, '(String, byte[], int)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, makePath, '(String, byte[],
      CreateMode, Watcher, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkMaintenanceUtils, true, traverseZkTree, '(SolrZkClient,
      String, VISIT_ORDER, ZkVisitor)', '', 'Argument[1]', create-file, manual]
  - [org.apache.zookeeper, ZooKeeper, true, create, '(String, byte[], List<ACL>, CreateMode)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, setACL, '(String, List<ACL>,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkMaintenanceUtils, true, clean, '(SolrZkClient,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.solr.common.cloud, ZkVisitor, true, visit, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, makePath, '(String, boolean,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.solr.common.cloud, SolrZkClient, true, SolrZkClient, '(String, int,
      int, OnReconnect)', '', 'Argument[0]', open-url, manual]
  - [org.apache.solr.core.backup.repository, BackupRepository, true, resolveDirectory,
    '(URI, String[])', '', 'Argument[0]', open-url, manual]
  - [org.elasticsearch.plugins.cli, TerminalProgressInputStream, true, TerminalProgressInputStream,
    '(InputStream, int, Terminal)', '', 'Argument[0]', open-url, manual]
  - [org.elasticsearch.xpack.core.security, CommandLineHttpClient, true, responseBuilder,
    (InputStream), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.conf, Configuration, true, parse, '(DocumentBuilder, URL)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.security, ProviderUtils, true, unnestUri, (URI), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, ClassLoader, true, getResource, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.crypto.key, KeyVersion, true, KeyVersion, '(String, String,
      byte[])', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.crypto.key, KeyProviderFactory, true, createProvider, '(URI,
      Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.crypto.key.kms, KMSClientProvider, true, createURL, '(String,
      String, String, Map<String,?>)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.security, ProviderUtils, true, unnestUri, (URI), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLEncoder, true, encode, '(String, String)', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.hadoop.crypto.key.kms, KMSClientProvider, true, checkNotEmpty, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.crypto.key.kms, KMSClientProvider, true, createURL, '(String,
      String, String, Map<String,?>)', '', 'Argument[3]', open-url, manual]
  - [org.apache.hadoop.fs, InvalidPathException, true, InvalidPathException, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, AbstractFileSystem, true, checkPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, ChecksumFileSystem, true, getChecksumFile, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, FSInputChecker, true, FSInputChecker, '(Path, int)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, FilterFileSystem, true, getFileStatus, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, open, '(Path, int)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, ChecksumFileSystem, true, reportChecksumFailure, '(Path,
      FSDataInputStream, long, FSDataInputStream, long)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.fs, ChecksumFs, true, reportChecksumFailure, '(Path, FSDataInputStream,
      long, FSDataInputStream, long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, FilterFs, true, getFileStatus, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, getContentSummary, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileStatus, true, FileStatus, '(long, boolean, int, long,
      long, long, FsPermission, String, String, Path)', '', 'Argument[9]', create-file,
    manual]
  - [org.apache.hadoop.fs, FileStatus, true, FileStatus, '(long, boolean, int, long,
      long, long, FsPermission, String, String, Path, Path)', '', 'Argument[10]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, get, '(URI, Configuration)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, fixName, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, FileSystem, true, canonicalizeUri, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, FileSystem, true, get, '(URI, Configuration)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, FileSystem, true, createFileSystem, '(URI, Configuration)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, Cache, true, get, '(URI, Configuration)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, FileSystem, true, exists, (Path), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.fs, FileSystem, true, initialize, '(URI, Configuration)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, Key, true, Key, '(URI, Configuration)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, Cache, true, getInternal, '(URI, Configuration, Key)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, HarFileSystem, true, decodeHarURI, '(URI, Configuration)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, HarFileSystem, true, decodeHarURI, '(URI, Configuration)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs, HarFileSystem, true, getHarAuth, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, Key, true, Key, '(URI, Configuration, long)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, resolve, (URI), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, Path, true, checkPathArg, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, hasWindowsDrive, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, initialize, '(String, String, String, String)',
    '', 'Argument[2]', create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, String, String)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hadoop.fs, Path, true, normalizePath, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.commons.lang, StringUtils, true, replace, '(String, String, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, get, '(URI, Configuration)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.fs, AllocatorPerContext, true, getLocalPathToRead, '(String,
      Configuration)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, PathIOException, true, PathIOException, '(String, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, PathExistsException, true, PathExistsException, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, initialize, '(URI, Configuration)', '',
    'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.util, DiskErrorException, true, DiskErrorException, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.conf, Configuration, true, set, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hadoop.fs.ftp, FTPFileSystem, true, makeAbsolute, '(Path, Path)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.ftp, FTPFileSystem, true, getFileStatus, '(FTPClient, Path)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.ftp, FTPFileSystem, true, delete, '(FTPClient, Path, boolean)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.ftp, FTPFileSystem, true, listStatus, '(FTPClient, Path)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(Path, Path)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.fs.ftp, FTPFileSystem, true, getFileStatus, '(FTPFile, Path)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.s3, FileSystemStore, true, initialize, '(URI, Configuration)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.s3, S3Credentials, true, initialize, '(URI, Configuration)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.s3, S3Credentials, true, initialize, '(URI, Configuration)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.fs.s3, Jets3tFileSystemStore, true, pathToKey, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.s3, Jets3tFileSystemStore, true, storeINode, '(Path, INode)',
    '', 'Argument[0]', create-file, manual]
  - [java.util, Set<Path>, true, remove, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.fs.s3native, NativeFileSystemStore, true, initialize, '(URI,
      Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.s3, FileSystemStore, true, retrieveINode, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.s3, S3FileSystem, true, makeAbsolute, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.s3, FileSystemStore, true, listSubPaths, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.s3native, NativeS3FileSystem, true, pathToKey, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.s3native, NativeS3FileSystem, true, makeAbsolute, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.s3native, NativeS3FileSystem, true, newDirectory, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.s3native, NativeS3FileSystem, true, newFile, '(FileMetadata,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.s3, S3FileSystem, true, checkFile, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileStatus, true, FileStatus, '(long, boolean, int, long,
      long, Path)', '', 'Argument[5]', create-file, manual]
  - [org.apache.hadoop.fs.s3, FileSystemStore, true, deleteINode, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.s3, S3FileSystem, true, listStatus, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.slf4j, Logger, true, info, (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, FilterFileSystem, true, checkPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(String, Path)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.fs.viewfs, ChRootedFileSystem, true, fullPath, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, ChRootedFs, true, fullPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.viewfs, ViewFileSystem, true, makeAbsolute, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, '', true, '', '(Configuration, String)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs, AbstractFileSystem, true, getUriPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.viewfs, ViewFsFileStatus, true, ViewFsFileStatus, '(FileStatus,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, ViewFileSystem, true, getUriPath, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs, FileSystem, true, makeQualified, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.viewfs, INode, true, INode, '(String, UserGroupInformation)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, INodeDir, true, INodeDir, '(String, UserGroupInformation)',
    '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<String,INode<T>>', true, containsKey, (Object), '', 'Argument[0]',
    create-file, manual]
  - [java.util, 'Map<String,INode<T>>', true, put, '(String, INode<T>)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.viewfs, INodeDir<T>, true, resolveInternal, (String), '',
    'Argument[0]', create-file, manual]
  - [java.lang, StringBuilder, true, StringBuilder, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.fs, FileAlreadyExistsException, true, FileAlreadyExistsException,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.util, StringUtils, true, getStrings, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs.viewfs, INodeLink<T>, true, INodeLink<T>, '(String, UserGroupInformation,
      T, URI[])', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, INodeLink<T>, true, INodeLink<T>, '(String, UserGroupInformation,
      T, URI[])', '', 'Argument[3]', open-url, manual]
  - [org.apache.hadoop.fs.viewfs, InodeTree, true, getTargetFileSystem, '(URI[])',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.viewfs, INodeLink<T>, true, INodeLink<T>, '(String, UserGroupInformation,
      T, URI)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, INodeLink<T>, true, INodeLink<T>, '(String, UserGroupInformation,
      T, URI)', '', 'Argument[3]', open-url, manual]
  - [org.apache.hadoop.fs.viewfs, InodeTree, true, getTargetFileSystem, (URI), '',
    'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.viewfs, INodeDir<T>, true, addLink, '(String, INodeLink<T>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.viewfs, InternalDirOfViewFs, true, checkPathIsSlash, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.http, HttpServer2, true, createWebAppContext, '(String, Configuration,
      AccessControlList, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.http, HttpServer2, true, initializeWebServer, '(String, String,
      Configuration, String[])', '', 'Argument[2]', create-file, manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.http, HtmlQuoting, true, quoteHtmlChars, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.mortbay.jetty, MimeTypes, true, getMimeByExtension, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, int, String, String, String)',
    '', 'Argument[2]', open-url, manual]
  - [org.apache.hadoop.net.unix, DomainSocket, true, connect0, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.net.unix, DomainSocket, true, DomainSocket, '(String, int)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, Path, true, getFileSystem, (Configuration), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, String, true, replace, '(CharSequence, CharSequence)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.security, LdapGroupsMapping, true, extractPassword, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.security, SaslPropertiesResolver, true, setConf, (Configuration),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.util, CombinedIPWhiteList, true, CombinedIPWhiteList, '(String,
      String, long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.util, CombinedIPWhiteList, true, CombinedIPWhiteList, '(String,
      String, long)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.security, WhitelistBasedResolver, true, getSaslProperties,
    (Configuration), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.security.alias, CredentialProviderFactory, true, createProvider,
    '(URI, Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.security, UserGroupInformation, true, prependFileAuthority,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.conf, Configuration, true, addResource, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.codehaus.jackson.map, ObjectMapper, true, readValue, '(InputStream, Class<T>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.util, FileBasedIPList, true, FileBasedIPList, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.util, FileBasedIPList, true, readLines, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileReader, true, FileReader, (File), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.util, HostsFileReader, true, readFileToSetWithFileInputStream,
    '(String, String, InputStream, Set<String>)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.hadoop.fs, FileSystem, true, getLocal, (Configuration), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, IllegalArgumentException, true, IllegalArgumentException, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.fs.s3, InMemoryFileSystemStore, true, normalize, (Path), '',
    'Argument[0]', create-file, manual]
  - [java.util, 'Map<String,Object>', true, put, '(String, Object)', '', 'Argument[1]',
    create-file, manual]
  - [javax.ws.rs.core, ResponseBuilder, true, header, '(String, Object)', '', 'Argument[1]',
    open-url, manual]
  - [javax.ws.rs.core, Response, true, created, (URI), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.hadoop.crypto.key.kms.server, KMSAudit, true, unauthenticated, '(String,
      String, String, String)', '', 'Argument[2]', open-url, manual]
  - [java.util, List<String>, true, add, (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.crypto.key.kms.server, Data, true, Data, '(UserGroupInformation,
      String, StringBuffer)', '', 'Argument[2]', open-url, manual]
  - [org.apache.hadoop.hdfs, BlockReaderLocalLegacy, true, newBlockReader, '(Conf,
      UserGroupInformation, Configuration, String, ExtendedBlock, Token<BlockTokenIdentifier>,
      DatanodeInfo, long, long)', '', 'Argument[3]', create-file, manual]
  - [org.apache.hadoop.hdfs, Builder, true, setFilename, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.shortcircuit, DomainSocketFactory, true, disableDomainSocketPath,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.shortcircuit, DomainSocketFactory, true, disableShortCircuitForPath,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, RemoteBlockReader, true, newBlockReader, '(String, ExtendedBlock,
      Token<BlockTokenIdentifier>, long, long, int, boolean, String, Peer, DatanodeID,
      PeerCache, CachingStrategy)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, RemoteBlockReader2, true, newBlockReader, '(String, ExtendedBlock,
      Token<BlockTokenIdentifier>, long, long, boolean, String, Peer, DatanodeID,
      PeerCache, CachingStrategy)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, BlockReaderLocalLegacy, true, BlockReaderLocalLegacy,
    '(Conf, String, ExtendedBlock, Token<BlockTokenIdentifier>, long, long, BlockLocalPathInfo,
      DataChecksum, boolean, FileInputStream, long, FileInputStream)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.hdfs, BlockReaderLocalLegacy, true, BlockReaderLocalLegacy,
    '(Conf, String, ExtendedBlock, Token<BlockTokenIdentifier>, long, long, BlockLocalPathInfo,
      FileInputStream)', '', 'Argument[1]', create-file, manual]
  - [org.apache.commons.logging, Log, true, debug, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hdfs, DFSClient, true, DFSClient, '(URI, ClientProtocol, Configuration,
      Statistics)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hdfs, NameNodeProxies, true, createProxyWithLossyRetryHandler,
    '(Configuration, URI, Class<T>, int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hdfs, NameNodeProxies, true, createProxy, '(Configuration,
      URI, Class<T>)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hdfs, DFSClient, true, create, '(String, boolean, short, long,
      Progressable)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, DFSClient, true, create, '(String, boolean, short, long,
      Progressable, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.conf, Configuration, true, get, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs, DFSClient, true, DFSClient, '(URI, Configuration, Statistics)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, FileSystem, true, fixRelativePart, (Path), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs, DistributedFileSystem, true, getPathName, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, NameNodeProxies, true, createFailoverProxyProvider, '(Configuration,
      URI, Class<T>, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NameNode, true, getAddress, (URI), '',
    'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hdfs, HAUtil, true, buildTokenServiceForLogicalUri, '(URI,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hdfs, HAUtil, true, isLogicalUri, '(Configuration, URI)', '',
    'Argument[1]', open-url, manual]
  - [org.apache.hadoop.net, NetUtils, true, getCanonicalUri, '(URI, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.lang.reflect, Constructor<FailoverProxyProvider<T>>, true, newInstance,
    '(Object[])', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hdfs, NameNodeProxies, true, getFailoverProxyProviderClass,
    '(Configuration, URI)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hdfs, RemoteBlockReader2, true, checkSuccess, '(BlockOpResponseProto,
      Peer, ExtendedBlock, String)', '', 'Argument[3]', create-file, manual]
  - [org.apache.hadoop.hdfs, RemoteBlockReader, true, RemoteBlockReader, '(String,
      String, long, DataInputStream, DataChecksum, boolean, long, long, long, Peer,
      DatanodeID, PeerCache)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, RemoteBlockReader2, true, RemoteBlockReader2, '(String,
      String, long, DataChecksum, boolean, long, long, long, Peer, DatanodeID, PeerCache)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol, HdfsFileStatus, true, getFullPath, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol.datatransfer, TrustedChannelResolver, true, setConf,
    (Configuration), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.conf, Configuration, true, get, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.net, NetUtils, true, createSocketAddr, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.hdfs.protocol.proto, Builder, true, setSrc, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.net, NetUtils, true, createSocketAddr, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.server.blockmanagement, HostFileManager, true, refresh,
    '(String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.blockmanagement, HostFileManager, true, refresh,
    '(String, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.util, HostsFileReader, true, readFileToSet, '(String, String,
      Set<String>)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.blockmanagement, HostFileManager, true, parseEntry,
    '(String, String, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.blockmanagement, HostFileManager, true, readFile,
    '(String, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.commons.logging, Log, true, error, '(Object, Throwable)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.commons.logging, Log, true, warn, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.server.common, Util, true, fileAsURI, (File), '', 'Argument[0]',
    create-file, manual]
  - [java.util, List<URI>, true, add, (URI), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hdfs.server.datanode.web.resources, DatanodeWebHdfsMethods,
    true, init, '(UserGroupInformation, DelegationParam, String, UriFsPathParam, HttpOpParam<?>,
      Param<?,?>[])', '', 'Argument[3]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.datanode.web.resources, DatanodeWebHdfsMethods,
    true, put, '(InputStream, String, String, PutOpParam, PermissionParam, OverwriteParam,
      BufferSizeParam, ReplicationParam, BlockSizeParam)', '', 'Argument[4]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.server.datanode.fsdataset.impl, FsDatasetImpl, true, getBlockFile,
    (ExtendedBlock), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol, BlockLocalPathInfo, true, BlockLocalPathInfo,
    '(ExtendedBlock, String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, addINode, '(String,
      INode)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, AddCloseOp, true, setPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, MkdirOp, true, setPath, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSImageSerialization, true, writeString,
    '(String, DataOutput)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, getINodesInPath4Write,
    '(String, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, getLastINodeInPath,
    '(String, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, normalizePath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, isReservedRawName,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, getINode, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, INodeDirectory, true, valueOf, '(INode,
      Object)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSImage, true, FSImage, '(Configuration,
      Collection<URI>, List<URI>)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSImage, true, FSImage, '(Configuration,
      Collection<URI>, List<URI>)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NNStorage, true, NNStorage, '(Configuration,
      Collection<URI>, Collection<URI>)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NNStorage, true, NNStorage, '(Configuration,
      Collection<URI>, Collection<URI>)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSEditLog, true, FSEditLog, '(Configuration,
      NNStorage, List<URI>)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, resolveDotInodesPath,
    '(String, byte[][], FSDirectory)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, constructRemainingPath,
    '(String, byte[][], int)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs, DFSUtil, true, bytes2String, '(byte[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, INode, true, getPathComponents, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, getINodesInPath, '(String,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, getFileInfo, '(String,
      boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, INode, true, getPathComponents, '(String[])',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, INode, true, getPathNames, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.util, StringUtils, true, split, '(String, char)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs, DFSUtil, true, path2String, (Object), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, INodeFile, true, valueOf, '(INode, String,
      boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, getStorageDirs, '(Configuration,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.util, Set<URI>, true, addAll, '(Collection<? extends URI>)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.server.common, Util, true, stringCollectionAsURIs, (Collection<String>),
    '', 'Argument[0]', create-file, manual]
  - [java.util, HashSet<URI>, true, add, (URI), '', 'Argument[0]', create-file, manual]
  - [com.google.common.collect, Lists, true, newArrayList, '(Iterable<? extends E>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, resolvePath, '(String,
      byte[][])', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, INodesInPath, true, constructPath, '(byte[][],
      int, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol, UnresolvedPathException, true, UnresolvedPathException,
    '(String, String, String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, getINodesInPath4Write,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, checkNameNodeSafeMode,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol, AlreadyBeingCreatedException, true, AlreadyBeingCreatedException,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, PathIsNotEmptyDirectoryException, true, PathIsNotEmptyDirectoryException,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, DFSUtil, true, isValidName, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NNStorage, true, setStorageDirectories,
    '(Collection<URI>, Collection<URI>, Collection<URI>)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.server.namenode, NNStorage, true, setStorageDirectories,
    '(Collection<URI>, Collection<URI>, Collection<URI>)', '', 'Argument[2]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, resolvePath, '(String,
      byte[][])', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, checkPermission,
    '(FSPermissionChecker, String, boolean, FsAction, FsAction, FsAction, FsAction,
      boolean, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, getAuditFileInfo,
    '(String, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NNStorage, true, checkSchemeConsistency,
    (URI), '', 'Argument[0]', create-file, manual]
  - [java.util, Collection<URI>, true, remove, (Object), '', 'Argument[0]', create-file,
    manual]
  - [java.util, Collection<URI>, true, contains, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSEditLog, true, logMkDir, '(String,
      INode)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, resolvePath, '(String,
      byte[][], FSDirectory)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, isDir, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, checkTraverse, '(FSPermissionChecker,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSEditLog, true, logCloseFile, '(String,
      INodeFile)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.web.resources, UserParam, true, setUserPattern, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[2]', open-url,
    manual]
  - [com.google.common.collect, Collections2, true, filter, '(Collection<E>, Predicate<?
      super E>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NameNodeResourceChecker, true, addDirToCheck,
    '(URI, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, checkPermission,
    '(FSPermissionChecker, String, boolean, FsAction, FsAction, FsAction, FsAction)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSDirectory, true, resolvePath, '(String,
      byte[][], FSDirectory)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSPermissionChecker, true, checkPermission,
    '(String, FSDirectory, boolean, FsAction, FsAction, FsAction, FsAction, boolean,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, startFile, '(String,
      PermissionStatus, String, String, EnumSet<CreateFlag>, boolean, short, long,
      List<CipherSuite>)', '', 'Argument[0]', create-file, manual]
  - [java.util, List<URI>, true, addAll, '(Collection<? extends URI>)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NameNodeRpcServer, true, checkPathLength,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, getNamespaceEditsDirs,
    '(Configuration, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.google.common.base, Joiner, true, join, '(Iterable<?>)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.conf, Configuration, true, setStrings, '(String, String[])',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NameNode, true, copyEditLogSegmentsToSharedDir,
    '(FSNamesystem, Collection<URI>, NNStorage, Configuration)', '', 'Argument[1]',
    create-file, manual]
  - [java.util, ArrayList<URI>, true, ArrayList<URI>, '(Collection<? extends URI>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, mkdirs, '(String,
      PermissionStatus, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol, ClientProtocol, true, getFileInfo, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, logFsckEvent, '(String,
      InetAddress)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NamenodeFsck, true, check, '(String,
      HdfsFileStatus, Result)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, listCorruptFileBlocks,
    '(String, String[])', '', 'Argument[0]', create-file, manual]
  - [java.util, List<String>, true, contains, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.protocol, ClientProtocol, true, getListing, '(String,
      byte[], boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, FSNamesystem, true, getBlockLocations,
    '(String, long, long, boolean, boolean, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hdfs.server.blockmanagement, BlockPlacementPolicy, true, verifyBlockPlacement,
    '(String, LocatedBlock, int)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NamenodeFsck, true, deleteCorruptedFile,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.protocol, ClientProtocol, true, delete, '(String, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode, NamenodeFsck, true, hdfsPathExists, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs, DFSClient, true, create, '(String, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hdfs.web.resources, Param, true, toSortedString, '(String,
      Param<?,?>[])', '', 'Argument[1]', open-url, manual]
  - [java.net, URI, true, URI, '(String, String, String, int, String, String, String)',
    '', 'Argument[5]', open-url, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, put, '(UserGroupInformation, DelegationParam, UserParam, DoAsParam, UriFsPathParam,
      PutOpParam, DestinationParam, OwnerParam, GroupParam, PermissionParam, OverwriteParam,
      BufferSizeParam, ReplicationParam, BlockSizeParam, ModificationTimeParam, AccessTimeParam,
      RenameOptionSetParam, CreateParentParam, TokenArgumentParam, AclPermissionParam,
      XAttrNameParam, XAttrValueParam, XAttrSetFlagParam, SnapshotNameParam, OldSnapshotNameParam,
      ExcludeDatanodesParam)', '', 'Argument[6]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, init, '(UserGroupInformation, DelegationParam, UserParam, DoAsParam, UriFsPathParam,
      HttpOpParam<?>, Param<?,?>[])', '', 'Argument[4]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, init, '(UserGroupInformation, DelegationParam, UserParam, DoAsParam, UriFsPathParam,
      HttpOpParam<?>, Param<?,?>[])', '', 'Argument[6]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, put, '(UserGroupInformation, DelegationParam, UserParam, DoAsParam, String,
      PutOpParam, DestinationParam, OwnerParam, GroupParam, PermissionParam, OverwriteParam,
      BufferSizeParam, ReplicationParam, BlockSizeParam, ModificationTimeParam, AccessTimeParam,
      RenameOptionSetParam, CreateParentParam, TokenArgumentParam, AclPermissionParam,
      XAttrNameParam, XAttrValueParam, XAttrSetFlagParam, SnapshotNameParam, OldSnapshotNameParam,
      ExcludeDatanodesParam)', '', 'Argument[6]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, redirectURI, '(NameNode, UserGroupInformation, DelegationParam, UserParam,
      DoAsParam, String, Op, long, long, String, Param<?,?>[])', '', 'Argument[11]',
    open-url, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, redirectURI, '(NameNode, UserGroupInformation, DelegationParam, UserParam,
      DoAsParam, String, Op, long, long, String, Param<?,?>[])', '', 'Argument[12]',
    open-url, manual]
  - [org.apache.hadoop.net.unix, DomainSocket, true, getEffectivePath, '(String, int)',
    '', 'Argument[0]', create-file, manual]
  - [com.google.common.cache, 'Cache<String,PathState>', true, getIfPresent, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.shortcircuit, PathInfo, true, PathInfo, '(String, PathState)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.net.unix, DomainSocket, true, connect, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.common.cache, 'Cache<String,PathState>', true, put, '(String, PathState)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, post, '(UserGroupInformation, DelegationParam, UserParam, DoAsParam, String,
      PostOpParam, ConcatSourcesParam, BufferSizeParam, ExcludeDatanodesParam)', '',
    'Argument[6]', create-file, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, post, '(UserGroupInformation, DelegationParam, UserParam, DoAsParam, String,
      PostOpParam, ConcatSourcesParam, BufferSizeParam, ExcludeDatanodesParam)', '',
    'Argument[8]', open-url, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, redirectURI, '(NameNode, UserGroupInformation, DelegationParam, UserParam,
      DoAsParam, String, Op, long, long, String, Param<?,?>[])', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.hadoop.hdfs.server.namenode.web.resources, NamenodeWebHdfsMethods,
    true, redirectURI, '(NameNode, UserGroupInformation, DelegationParam, UserParam,
      DoAsParam, String, Op, long, long, String, Param<?,?>[])', '', 'Argument[3]',
    open-url, manual]
  - [org.apache.hadoop.hdfs.web, URLConnectionFactory, true, newSslConnConfigurator,
    '(int, Configuration)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hdfs.web, AbstractFsPathRunner, true, AbstractFsPathRunner,
    '(Op, Path, Param<?,?>[])', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.web, FsPathResponseRunner, true, FsPathResponseRunner,
    '(Op, Path, Param<?,?>[])', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hdfs.web, FsPathBooleanRunner, true, FsPathBooleanRunner, '(Op,
      Path, Param<?,?>[])', '', 'Argument[1]', create-file, manual]
  - [java.lang, String, true, String, '(byte[], Charset)', '', 'Argument[0]', open-url,
    manual]
  - [java.io, FileOutputStream, true, FileOutputStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.http.client, HttpFSFileSystem, true, getConnection, '(String,
      Map<String,String>, Map<String,List<String>>, Path, boolean)', '', 'Argument[3]',
    create-file, manual]
  - [org.apache.hadoop.fs.http.client, HttpFSUtils, true, createURL, '(Path, Map<String,String>,
      Map<String,List<String>>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.client, HttpFSDataInputStream, true, HttpFSDataInputStream,
    '(InputStream, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.http.client, HttpFSFileSystem, true, getConnection, '(String,
      Map<String,String>, Path, boolean)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.fs.http.client, HttpFSFileSystem, true, getConnection, '(String,
      Map<String,String>, Path, boolean)', '', 'Argument[2]', open-url, manual]
  - [java.text, MessageFormat, true, format, '(String, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [org.json.simple.parser, JSONParser, true, parse, (Reader), '', 'Argument[0]',
    open-url, manual]
  - [java.io, InputStreamReader, true, InputStreamReader, (InputStream), '', 'Argument[0]',
    sql, manual]
  - [java.text, MessageFormat, true, format, '(String, Object[])', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.hadoop.fs.http.server, HttpFSServer, true, makeAbsolute, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSOpen, true, FSOpen, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSFileStatus, true, FSFileStatus, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSListStatus, true, FSListStatus, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, HttpFSServer, true, enforceRootPath, '(Operation,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSContentSummary, true, FSContentSummary, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSFileChecksum, true, FSFileChecksum, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSAclStatus, true, FSAclStatus, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSGetXAttrs, true, FSGetXAttrs, '(String, List<String>,
      XAttrCodec)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSListXAttrs, true, FSListXAttrs, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSDelete, true, FSDelete, '(String, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [javax.ws.rs.core, Response, true, temporaryRedirect, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.fs.http.server, HttpFSServer, true, createUploadRedirectionURL,
    '(UriInfo, Enum<?>)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.http.server, FSAppend, true, FSAppend, '(InputStream, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSConcat, true, FSConcat, '(String, String[])',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSCreate, true, FSCreate, '(InputStream, String,
      short, boolean, short, long)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSSetXAttr, true, FSSetXAttr, '(String, String,
      String, EnumSet<XAttrSetFlag>)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSRemoveXAttr, true, FSRemoveXAttr, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSMkdirs, true, FSMkdirs, '(String, short)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSRename, true, FSRename, '(String, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSSetOwner, true, FSSetOwner, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSSetPermission, true, FSSetPermission, '(String,
      short)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSSetReplication, true, FSSetReplication, '(String,
      short)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSSetTimes, true, FSSetTimes, '(String, long,
      long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSSetAcl, true, FSSetAcl, '(String, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSRemoveAcl, true, FSRemoveAcl, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSModifyAclEntries, true, FSModifyAclEntries,
    '(String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSRemoveAclEntries, true, FSRemoveAclEntries,
    '(String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.http.server, FSRemoveDefaultAcl, true, FSRemoveDefaultAcl,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.mount, MountEntry, true, MountEntry, '(String, String)', '',
    'Argument[0]', open-url, manual]
  - [org.apache.hadoop.yarn.util, StringHelper, true, join, '(Object[])', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, TD<TR<TABLE<DIV<Hamlet>>>>, true, a, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp, View, true, url, '(String[])', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, LI<UL<DIV<Hamlet>>>, true, a, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp, View, true, url, '(String[])', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, TD<TR<TBODY<TABLE<DIV<Hamlet>>>>>, true,
    a, '(String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp, View, true, url, '(String[])', '', 'Argument[3]',
    create-file, manual]
  - [java.lang, Class, true, forName, (String), '', 'Argument[0]', sql, manual]
  - [java.sql, DriverManager, true, getConnection, (String), '', 'Argument[0]', sql,
    manual]
  - [java.sql, DriverManager, true, getConnection, '(String, String, String)', '',
    'Argument[0]', sql, manual]
  - [java.sql, DriverManager, true, getConnection, '(String, String, String)', '',
    'Argument[1]', sql, manual]
  - [org.apache.hadoop.mapreduce.lib.partition, TotalOrderPartitioner, true, getPartitionFile,
    (Configuration), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, TH<TR<TABLE<DIV<Hamlet>>>>, true, a, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.hadoop.fs.azure, AzureNativeFileSystemStore, true, getAccountFromAuthority,
    (URI), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.azure, AzureNativeFileSystemStore, true, getContainerFromAuthority,
    (URI), '', 'Argument[0]', open-url, manual]
  - [com.microsoft.windowsazure.storage, StorageCredentialsSharedAccessSignature,
    true, StorageCredentialsSharedAccessSignature, (String), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.hadoop.fs.azure, AzureNativeFileSystemStore, true, connectUsingAnonymousCredentials,
    (URI), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.azure, NativeAzureFileSystem, true, reconstructAuthorityIfNeeded,
    '(URI, Configuration)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.azure, NativeAzureFileSystem, true, reconstructAuthorityIfNeeded,
    '(URI, Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.azure, NativeFileSystemStore, true, initialize, '(URI, Configuration,
      AzureFileSystemInstrumentation)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.azure, NativeAzureFileSystem, true, pathToKey, (Path), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.azure, AzureException, true, AzureException, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.azure, NativeAzureFileSystem, true, makeAbsolute, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.azure, NativeAzureFileSystem, true, newDirectory, '(FileMetadata,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.azure, NativeAzureFileSystem, true, newFile, '(FileMetadata,
      Path)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.io.compress, CompressionCodecFactory, true, getCodec, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.mapred.gridmix, CompressionEmulationUtil, true, getPossiblyDecompressedInputStream,
    '(Path, Configuration, long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.mapred.gridmix, PseudoLocalFs, true, validateFileNameFormat,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.mapred.gridmix, PseudoLocalFs, true, open, '(Path, int)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.mapred.gridmix, PseudoLocalFs, true, getFileStatus, (Path),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.exceptions, SwiftInvalidResponseException, true, SwiftInvalidResponseException,
    '(String, String, URI, HttpMethod)', '', 'Argument[2]', open-url, manual]
  - [org.apache.commons.httpclient.methods, EntityEnclosingMethod, true, EntityEnclosingMethod,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, HttpMethodProcessor, true, doCreateMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.httpclient.methods, GetMethod, true, GetMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.httpclient.methods, PostMethod, true, PostMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, Path, true, makeQualified, '(URI, Path)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.fs.swift.http, AuthPostMethod, true, AuthPostMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.httpclient.methods, PutMethod, true, PutMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, initialize,
    '(URI, Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, CopyMethod, true, CopyMethod, (String), '',
    'Argument[0]', open-url, manual]
  - [org.apache.commons.httpclient.methods, DeleteMethod, true, DeleteMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystem, true, makeAbsolute,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, getObjectMetadata,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.commons.httpclient.methods, HeadMethod, true, HeadMethod, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, RestClientBindings, true, bind, '(URI, Configuration)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, RestClientBindings, true, bind, '(URI, Configuration)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, getOption, '(Properties,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, getInstance, '(URI, Configuration)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, getObjectMetadata,
    '(Path, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, toObjectPath,
    (Path), '', 'Argument[0]', create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[3]', open-url,
    manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, getCorrectSwiftPath,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.exceptions, SwiftConfigurationException, true, SwiftConfigurationException,
    '(String, Throwable)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, getObject,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, doGet, '(URI, Header[])',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, getObject,
    '(Path, long, long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, listSubPaths,
    '(Path, boolean, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, toDirPath,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.util, SwiftObjectPath, true, fromPath, '(URI, Path,
      boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.swift.util, SwiftObjectPath, true, fromPath, '(URI, Path)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.util, SwiftObjectPath, true, fromPath, '(URI, Path)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystem, true, open, '(Path,
      int, long)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeInputStream, true, SwiftNativeInputStream,
    '(SwiftNativeFileSystemStore, Statistics, Path, long)', '', 'Argument[2]', create-file,
    manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, perform, '(String, URI,
      HttpMethodProcessor<M,R>)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, delete,
    '(Path, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, deleteObject,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.http, 'HttpMethodProcessor<M,R>', true, createMethod,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, checkNotNull, (T), '',
    'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, ExceptionDiags, true, wrapException, '(String,
      String, IOException)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, buildException, '(URI,
      M, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.exceptions, SwiftBadRequestException, true, SwiftBadRequestException,
    '(String, String, URI, HttpMethod)', '', 'Argument[2]', open-url, manual]
  - [org.apache.hadoop.fs.swift.exceptions, SwiftAuthenticationFailedException, true,
    SwiftAuthenticationFailedException, '(String, String, URI, HttpMethod)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.hadoop.fs.swift.exceptions, SwiftThrottledRequestException, true,
    SwiftThrottledRequestException, '(String, String, URI, HttpMethod)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.hadoop.fs.swift.http, HttpInputStreamWithRelease, true, HttpInputStreamWithRelease,
    '(URI, HttpMethod)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.exceptions, SwiftException, true, SwiftException,
    '(String, Throwable)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, SwiftRestClient, '(URI,
      Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, checkNotNull, '(T, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.util, SwiftUtils, true, joinPaths, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, pathToURI, '(SwiftObjectPath,
      URI)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.fs.swift.util, SwiftUtils, true, debug, '(Log, String, Object[])',
    '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.fs.swift.http, SwiftRestClient, true, getAuthenticationRequst,
    (AuthenticationRequest), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs.swift.snative, SwiftNativeFileSystemStore, true, rmdir,
    (Path), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs.swift.util, SwiftObjectPath, true, fromPath, '(URI, Path,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [java.io, FileWriter, true, FileWriter, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.codahale.metrics, Builder, true, build, (File), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.log4j, Category, true, error, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.yarn.api.records, NodeId, true, setHost, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.proto, Builder, true, setHost, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.codehaus.jackson.map, ObjectMapper, true, readTree, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.logaggregation, LogAggregationUtils, true, getRemoteAppLogDir,
    '(Path, ApplicationId, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.yarn.logaggregation, LogAggregationUtils, true, getRemoteLogSuffixedDir,
    '(Path, String, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.logaggregation, LogAggregationUtils, true, getRemoteLogUserDir,
    '(Path, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Dispatcher, true, removeErrorCookies, '(HttpServletResponse,
      String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, resolve, '(String, String)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Dispatcher, true, setMoreParams, '(RequestContext,
      String, Dest)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Dispatcher, true, redirectToErrorPage, '(HttpServletResponse,
      Throwable, String, boolean)', '', 'Argument[2]', open-url, manual]
  - [javax.servlet.http, Cookie, true, setPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [javax.servlet.http, HttpServletResponse, true, setHeader, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Dispatcher, true, removeCookie, '(HttpServletResponse,
      String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, addController, '(HTTP, String, Class<?
      extends Controller>, String, List<String>)', '', 'Argument[1]', create-file,
    manual]
  - [java.util, 'TreeMap<String,Dest>', true, get, (Object), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.yarn.webapp, Dest, true, Dest, '(String, Method, Class<? extends
      Controller>, List<String>, HTTP)', '', 'Argument[0]', create-file, manual]
  - [java.util, 'TreeMap<String,Dest>', true, put, '(String, Dest)', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, lookupRoute, '(HTTP, String)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, resolveDefault, '(HTTP, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, isGoodMatch, '(Dest, String)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, resolveAction, '(HTTP, Dest, String)',
    '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, prefixMatches, '(Dest, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.google.common.base, Splitter, true, split, (CharSequence), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, maybeController, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.common.base, CharMatcher, true, countIn, (CharSequence), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.yarn.webapp, WebApp, true, parseRoute, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.yarn.util, StringHelper, true, join, '(Object[])', '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Router, true, add, '(HTTP, String, Class<? extends
      Controller>, String, List<String>)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, P<Hamlet>, true, a, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp, View, true, url, '(String[])', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, A<TD>, true, $href, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, A<TH>, true, $href, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.server.nodemanager, LinuxContainerExecutor, true, getContainerExecutorExecutablePath,
    (Configuration), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, LocalDirAllocator, true, getLocalPathToRead, '(String,
      Configuration)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, A<LI>, true, $href, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.util, StringHelper, true, join, '(Object[])', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.yarn.util, StringHelper, true, join, '(Object[])', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, HTML<_>, true, meta_http, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.yarn.util, ConverterUtils, true, toContainerId, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.server.nodemanager.webapp, ContainerLogsUtils, true, getContainerLogFile,
    '(ContainerId, String, String, Context)', '', 'Argument[1]', create-file, manual]
  - [java.lang, Long, true, parseLong, (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.server.nodemanager.webapp, ContainerLogsUtils, true, openLogFileForRead,
    '(String, File, Context)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, View, true, url, '(String[])', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.yarn.server.nodemanager, LocalDirsHandlerService, true, getLogPathToRead,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.webapp, Controller, true, set, '(String, String)', '',
    'Argument[1]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, A<H3>, true, $href, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, A<P>, true, $href, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.yarn.server.resourcemanager.webapp, RMWebAppFilter, true, shouldRedirect,
    '(RMWebApp, String)', '', 'Argument[1]', open-url, manual]
  - [javax.servlet.http, HttpServletResponse, true, addHeader, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.yarn.util, StringHelper, true, ujoin, '(String, String[])',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.yarn.server.webproxy, ProxyUriUtils, true, appendQuery, '(StringBuilder,
      String, boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.yarn.server.webproxy, ProxyUriUtils, true, appendQuery, '(StringBuilder,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.yarn.server.webproxy, ProxyUriUtils, true, getPath, '(ApplicationId,
      String)', '', 'Argument[1]', create-file, manual]
  - [javax.servlet.http, HttpServletResponse, true, encodeRedirectURL, (String), '',
    'Argument[0]', open-url, manual]
  - [org.apache.hadoop.yarn.webapp.hamlet, H3<HTML<_>>, true, a, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.httpclient, URI, true, URI, '(String, boolean)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, URI, '(String, String, String, String, String)', '', 'Argument[2]',
    create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, String, String)', '', 'Argument[3]',
    open-url, manual]
  - [org.apache.hadoop.yarn.util, StringHelper, true, ujoin, '(String, String[])',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.commons.logging, Log, true, warn, (Object), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.hadoop.yarn.server.webproxy, WebAppProxyServlet, true, warnUserPage,
    '(HttpServletResponse, String, String, ApplicationId)', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.hadoop.yarn.server.webproxy, WebAppProxyServlet, true, proxyLink,
    '(HttpServletRequest, HttpServletResponse, URI, Cookie, String)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.hadoop.hive.metastore, IMetaStoreClient, true, listPartitionSpecsByFilter,
    '(String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.flink.table.utils, PartitionPathUtils, true, generatePartitionPath,
    '(LinkedHashMap<String,String>)', '', 'Argument[0]', create-file, manual]
  - [sun.net.util, IPAddressUtil, true, isIPv6LiteralAddress, (String), '', 'Argument[0]',
    open-url, manual]
  - [sun.net.util, IPAddressUtil, true, textToNumericFormatV6, (String), '', 'Argument[0]',
    open-url, manual]
  - [sun.net.util, IPAddressUtil, true, isIPv4LiteralAddress, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.flink.fs.s3.common.writer, UploadTask, true, UploadTask, '(S3AccessHelper,
      MultiPartUploadInfo, RefCountedFSOutputStream, CompletableFuture<PartETag>)',
    '', 'Argument[2]', create-file, manual]
  - [org.apache.flink.runtime.rpc.akka, AkkaUtils, true, addHostnameRemoteAkkaConfig,
    '(AkkaConfigBuilder, String, String)', '', 'Argument[2]', open-url, manual]
  - [org.apache.flink.runtime.rpc.akka, AkkaConfigBuilder, true, add, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.flink.runtime.io.network.netty, SSLHandlerFactory, true, createSSLEngine,
    '(ByteBufAllocator, String, int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.flink.shaded.netty4.io.netty.handler.ssl, SslContext, true, newEngine,
    '(ByteBufAllocator, String, int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.flink.runtime.rest.messages, TaskManagersInfo, true, TaskManagersInfo,
    '(String, ExecutionState, long, long, long, IOMetricsInfo, Map<ExecutionState,Integer>,
      String)', '', 'Argument[0]', open-url, manual]
  - [java.util, 'HashMap<String,Object>', true, put, '(String, Object)', '', 'Argument[1]',
    open-url, manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[1]',
    sql, manual]
  - [java.lang, String, true, contains, (CharSequence), '', 'Argument[0]', open-url,
    manual]
  - [java.util, List<String>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [org.owasp.webgoat.password_reset.resetlink, PasswordChangeForm, true, setResetLink,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.owasp.webgoat.password_reset, ResetLinkAssignmentForgotPassword, true, fakeClickingLinkEmail,
    '(String, String)', '', 'Argument[0]', open-url, manual]
  - [org.owasp.webgoat.password_reset, ResetLinkAssignmentForgotPassword, true, sendMailToUser,
    '(String, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.owasp.webgoat.password_reset, PasswordResetEmailBuilder, true, recipient,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.owasp.webgoat.password_reset, PasswordResetEmailBuilder, true, contents,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.owasp.webgoat.path_traversal, ProfileUploadBase, true, execute, '(MultipartFile,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.springframework.web.client, RestTemplate, true, exchange, '(String, HttpMethod,
      HttpEntity<?>, Class<T>, Object[])', '', 'Argument[0]', open-url, manual]
  - [org.owasp.webgoat.path_traversal, ProfileUploadBase, true, execute, '(MultipartFile,
      String)', '', 'Argument[1]', create-file, manual]
  - [java.sql, PreparedStatement, true, setString, '(int, String)', '', 'Argument[1]',
    sql, manual]
  - [org.owasp.webgoat.sql_injection.advanced, SqlInjectionLesson6a, true, injectableQuery,
    (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.assignments, AttackResultBuilder, true, output, (String), '',
    'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson10, true, injectableQueryAvailability,
    (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson2, true, injectableQuery,
    (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson3, true, injectableQuery,
    (String), '', 'Argument[0]', sql, manual]
  - [java.sql, Statement, true, executeUpdate, (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson4, true, injectableQuery,
    (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson5, true, injectableQuery,
    (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson5a, true, injectableQuery,
    (String), '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson5b, true, injectableQuery,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson5b, true, injectableQuery,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [java.sql, Connection, true, prepareStatement, '(String, int, int)', '', 'Argument[0]',
    sql, manual]
  - [java.lang, String, true, replace, '(CharSequence, CharSequence)', '', 'Argument[1]',
    sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson8, true, injectableQueryConfidentiality,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson8, true, injectableQueryConfidentiality,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson8, true, log,
    '(Connection, String)', '', 'Argument[1]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson9, true, injectableQueryIntegrity,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.owasp.webgoat.sql_injection.introduction, SqlInjectionLesson9, true, injectableQueryIntegrity,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [java.lang, StringBuilder, true, StringBuilder, (String), '', 'Argument[0]', sql,
    manual]
  - [org.owasp.webgoat.ssrf, SSRFTask1, true, stealTheCheese, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.owasp.webgoat.ssrf, SSRFTask2, true, furBall, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.mozilla.javascript.commonjs.module.provider, ModuleSource, true, ModuleSource,
    '(Reader, Object, URI, URI, Object)', '', 'Argument[0]', open-url, manual]
  - [org.geogebra.common.main, AppInterface, true, showURLinBrowser, (String), '',
    'Argument[0]', open-url, manual]
  - [org.geogebra.desktop.gui, GuiManagerD, true, getEscapedUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.geogebra.desktop.main, GuiManagerInterfaceD, true, showURLinBrowser, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.geogebra.desktop.util, HttpRequestD, true, readOutput, (InputStream), '',
    'Argument[0]', sql, manual]
  - [org.geogebra.web.full.main, FileManager, true, open, '(String, String)', '',
    'Argument[0]', open-url, manual]
  - [com.google.gwt.user.client, Window, true, open, '(String, String, String)', '',
    'Argument[0]', open-url, manual]
  - [org.geogebra.web.tablet, TabletFileManager, true, openUrlInBrowser, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.geogebra.web.html5.bridge, GeoGebraJSNativeBridge, true, openUrlInBrowser,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.geogebra.common.main, MaterialsManagerI, true, open, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.accumulo.core.client.admin, TableOperations, true, exists, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.accumulo.core.client.admin, TableOperations, true, delete, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.beeline, ClientHook, true, ClientHook, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hive.beeline, Commands, true, substituteVariables, '(HiveConf, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hive.beeline, Commands, true, sourceFileInternal, (File), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hive.beeline, ClientCommandHookFactory, true, getHook, '(BeeLine,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.beeline, Commands, true, cliToBeelineCmd, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hive.beeline, BeeLine, true, isComment, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hive.beeline, Commands, true, isSourceCMD, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hive.beeline, Commands, true, sourceFile, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hive.beeline, BeeLine, true, execCommandWithPrefix, (String), '',
    'Argument[0]', sql, manual]
  - [java.sql, Connection, true, prepareCall, (String), '', 'Argument[0]', sql, manual]
  - [java.sql, Statement, true, execute, (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hive.beeline, Commands, true, executeInternal, '(String, boolean)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.thrift.transport, TSSLTransportFactory, true, getClientSocket, '(String,
      int, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.thrift.transport, TSSLTransportFactory, true, getClientSocket, '(String,
      int, int, TSSLTransportParameters)', '', 'Argument[0]', open-url, manual]
  - [javax.servlet.http, HttpServletResponse, true, setHeader, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.eclipse.jetty.server.handler, Context, true, getMimeType, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.common.collect, 'Builder<String,String>', true, put, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hive.druid, DruidStorageHandlerUtils, true, getBooleanProperty,
    '(Table, String, boolean)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.druid, DruidStorageHandler, true, resetKafkaIngestion,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.druid.java.util.http.client, Request, true, Request, '(HttpMethod,
      URL)', '', 'Argument[1]', open-url, manual]
  - [java.util, Collection<String>, true, contains, (Object), '', 'Argument[0]', sql,
    manual]
  - [org.slf4j, Logger, true, warn, '(String, Object)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.druid, DruidStorageHandlerUtils, true, disableDataSourceWithHandle,
    '(Handle, MetadataStorageTablesConfig, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.druid, DruidStorageHandlerUtils, true, disableDataSource,
    '(SQLMetadataConnector, MetadataStorageTablesConfig, String)', '', 'Argument[2]',
    sql, manual]
  - [org.skife.jdbi.v2, SQLStatement<Update>, true, bind, '(String, String)', '',
    'Argument[1]', sql, manual]
  - [org.skife.jdbi.v2, 'SQLStatement<Query<Map<String,Object>>>', true, bind, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.serde2, SerDeException, true, SerDeException, (String),
    '', 'Argument[0]', sql, manual]
  - [org.slf4j, Logger, true, info, '(String, Object)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hbase, TableName, true, valueOf, (String), '', 'Argument[0]',
    sql, manual]
  - [java.util, Properties, true, getProperty, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hive.hbase, HBaseSerDeHelper, true, getSchemaFromFS, '(String,
      Configuration)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.fs, Path, true, Path, (String), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.hive.hcatalog.common, HCatException, true, HCatException, '(ErrorType,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.hcatalog.mapreduce, PartInfo, true, PartInfo, '(HCatSchema, HiveStorageHandler,
      String, Properties, Map<String,String>, HCatTableInfo)', '', 'Argument[2]',
    create-file, manual]
  - [org.apache.hadoop.hive.metastore, IMetaStoreClient, true, dropPartitions, '(String,
      String, List<Pair<Integer,byte[]>>, boolean, boolean, boolean)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.api, StorageDescriptor, true, setLocation, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.lang, String, true, replace, '(CharSequence, CharSequence)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, fetchUrl, (URL),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton, ExecServiceImpl, true, auxRun, '(String,
      List<String>, Map<String,String>)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, ExecServiceImpl, true, auxRun, '(String,
      List<String>, Map<String,String>)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, HiveDelegator, true, makeArgs, '(String,
      String, String, List<String>, List<String>, String, String, String, boolean,
      Boolean)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, HiveDelegator, true, makeArgs, '(String,
      String, String, List<String>, List<String>, String, String, String, boolean,
      Boolean)', '', 'Argument[6]', create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, jsonRun, '(String, String)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, jsonRun, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, isset, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, isset, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, isset, '(Map<K,V>)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, makePropertiesStatement,
    '(Map<String,String>)', '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, jsonRun, '(String, String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, JarDelegator, true, makeArgs, '(String, String,
      String, String, List<String>, List<String>, String, boolean, String, boolean,
      Boolean, JobType)', '', 'Argument[2]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton, JarDelegator, true, makeArgs, '(String, String,
      String, String, List<String>, List<String>, String, boolean, String, boolean,
      Boolean, JobType)', '', 'Argument[6]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, makeCreateTable, '(String,
      TableDesc)', '', 'Argument[0]', sql, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[2]', sql,
    manual]
  - [java.util, ArrayList<String>, true, addAll, '(Collection<? extends String>)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton, HiveDelegator, true, makeBasicArgs, '(String,
      String, String, String, String, boolean, Boolean)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, HiveDelegator, true, makeBasicArgs, '(String,
      String, String, String, String, boolean, Boolean)', '', 'Argument[3]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, HcatException, true, HcatException, '(String,
      ExecBean, String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, hadoopFsPath,
    '(String, Configuration, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, hadoopFsFilename,
    '(String, Configuration, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, isset, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, hadoopFsListAsArray,
    '(String, Configuration, String)', '', 'Argument[0]', create-file, manual]
  - [java.util, ArrayList<String>, true, addAll, '(Collection<? extends String>)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, LauncherDelegator, true, makeLauncherArgs,
    '(AppConfig, String, String, List<String>, boolean, Boolean, JobType)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, (URI), '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, hadoopFsListAsString,
    '(String, Configuration, String)', '', 'Argument[0]', create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[3]', sql,
    manual]
  - [org.apache.hive.hcatalog.templeton, JsonBuilder, true, put, '(String, Object)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, jsonRun, '(String, String,
      String, String, boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, LauncherDelegator, true, addDef, '(List<String>,
      String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, PigDelegator, true, makeArgs, '(String, String,
      List<String>, String, String, boolean, String, boolean, Boolean)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hive.hcatalog.templeton, PigDelegator, true, makeArgs, '(String, String,
      List<String>, String, String, boolean, String, boolean, Boolean)', '', 'Argument[4]',
    create-file, manual]
  - [org.apache.hive.hcatalog.templeton, LauncherDelegator, true, addDef, '(List<String>,
      String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeArgs, '(String,
      String, String, String, String, boolean, Boolean, String)', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeArgs, '(String,
      String, String, String, String, boolean, Boolean, String)', '', 'Argument[3]',
    create-file, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeArgs, '(String,
      String, String, String, String, boolean, Boolean, String)', '', 'Argument[7]',
    create-file, manual]
  - [org.apache.hive.hcatalog.templeton, StreamingDelegator, true, makeArgs, '(List<String>,
      String, String, String, String, String, List<String>, List<String>, List<String>)',
    '', 'Argument[6]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, JarDelegator, true, run, '(String, Map<String,Object>,
      String, String, String, String, List<String>, List<String>, String, String,
      boolean, String, boolean, Boolean, JobType)', '', 'Argument[8]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, listTables, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeBasicArgs, '(String,
      String, String, String, boolean, Boolean, String)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeBasicArgs, '(String,
      String, String, String, boolean, Boolean, String)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeBasicArgs, '(String,
      String, String, String, boolean, Boolean, String)', '', 'Argument[2]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, makeBasicArgs, '(String,
      String, String, String, boolean, Boolean, String)', '', 'Argument[6]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, Server, true, verifyDdlParam, '(String, String)',
    '', 'Argument[0]', sql, manual]
  - [java.util, ArrayList<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, HcatDelegator, true, descExtendedTable, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, hadoopFsListChildren,
    '(String, Configuration, String)', '', 'Argument[0]', create-file, manual]
  - [org.slf4j, Logger, true, debug, (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, Server, true, verifyPropertyParam, '(String,
      String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, Server, true, verifyParam, '(String, String)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.hcatalog.templeton, Server, true, checkEnableLogPrerequisite,
    '(boolean, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, StreamingDelegator, true, run, '(String,
      Map<String,Object>, List<String>, String, String, String, String, String, List<String>,
      String, List<String>, List<String>, List<String>, String, String, String, boolean,
      Boolean, JobType)', '', 'Argument[8]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, StreamingDelegator, true, run, '(String,
      Map<String,Object>, List<String>, String, String, String, String, String, List<String>,
      String, List<String>, List<String>, List<String>, String, String, String, boolean,
      Boolean, JobType)', '', 'Argument[13]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, Server, true, verifyParam, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.hcatalog.templeton, JarDelegator, true, run, '(String, Map<String,Object>,
      String, String, String, String, List<String>, List<String>, String, String,
      boolean, String, boolean, Boolean, JobType)', '', 'Argument[4]', create-file,
    manual]
  - [org.apache.hive.hcatalog.templeton, PigDelegator, true, run, '(String, Map<String,Object>,
      String, String, List<String>, String, String, String, boolean, String, boolean,
      Boolean)', '', 'Argument[3]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, PigDelegator, true, run, '(String, Map<String,Object>,
      String, String, List<String>, String, String, String, boolean, String, boolean,
      Boolean)', '', 'Argument[6]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, run, '(String, Map<String,Object>,
      String, String, String, String, String, String, boolean, Boolean, String)',
    '', 'Argument[3]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, run, '(String, Map<String,Object>,
      String, String, String, String, String, String, boolean, Boolean, String)',
    '', 'Argument[5]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, SqoopDelegator, true, run, '(String, Map<String,Object>,
      String, String, String, String, String, String, boolean, Boolean, String)',
    '', 'Argument[10]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, HiveDelegator, true, run, '(String, Map<String,Object>,
      String, String, List<String>, List<String>, String, String, String, String,
      boolean, Boolean)', '', 'Argument[3]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton, HiveDelegator, true, run, '(String, Map<String,Object>,
      String, String, List<String>, List<String>, String, String, String, String,
      boolean, Boolean)', '', 'Argument[7]', create-file, manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[3]',
    open-url, manual]
  - [org.apache.curator.framework.api, PathAndBytesable<String>, true, forPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.curator.framework.api, Pathable<Void>, true, forPath, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, hadoopFsPath,
    '(String, Configuration, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.curator.framework.api, Pathable<Stat>, true, forPath, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.fs, Path, true, Path, '(String, String, String)', '', 'Argument[2]',
    create-file, manual]
  - [java.lang, String, true, String, (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, addUserHomeDirectoryIfApplicable,
    '(String, String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hive.hcatalog.templeton.tool, TempletonUtils, true, addUserHomeDirectoryIfApplicable,
    '(String, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.curator.framework.api, PathAndBytesable<String>, true, forPath, '(String,
      byte[])', '', 'Argument[0]', create-file, manual]
  - [org.apache.curator.framework.api, PathAndBytesable<Stat>, true, forPath, '(String,
      byte[])', '', 'Argument[0]', create-file, manual]
  - [org.apache.curator.framework.api, 'Pathable<byte[]>', true, forPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.thrift.transport, THttpClient, true, THttpClient, '(String, HttpClient)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.service.rpc.thrift, TGetColumnsReq, true, setTableName, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.jdbc, HttpKerberosRequestInterceptor, true, HttpKerberosRequestInterceptor,
    '(String, String, String, Subject, CookieStore, String, boolean, Map<String,String>,
      Map<String,String>)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hive.jdbc, HttpKerberosRequestInterceptor, true, HttpKerberosRequestInterceptor,
    '(String, String, String, Subject, CookieStore, String, boolean, Map<String,String>,
      Map<String,String>)', '', 'Argument[2]', open-url, manual]
  - [org.apache.hadoop.hive.common.auth, HiveAuthUtils, true, getSSLSocket, '(String,
      int, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.common.auth, HiveAuthUtils, true, getSSLSocket, '(String,
      int, int, String, String, String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.common.auth, HiveAuthUtils, true, getSocketTransport,
    '(String, int, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.jdbc, HivePreparedStatement, true, replaceBackSlashSingleQuote,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hive.jdbc, HiveStatement, true, runAsyncOnServer, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hive.service.rpc.thrift, TExecuteStatementReq, true, TExecuteStatementReq,
    '(TSessionHandle, String)', '', 'Argument[1]', sql, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object, Object)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hive.jdbc, HiveStatement, true, execute, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.curator.framework, Builder, true, connectString, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hive.jdbc, Utils, true, parseURL, '(String, Properties)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hive.jdbc, Utils, true, extractURLComponents, '(String, Properties)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.jdbc, Utils, true, getAuthorityFromJdbcURL, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hive.jdbc, JdbcConnectionParams, true, setZooKeeperEnsemble, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.jdbc, JdbcConnectionParams, true, setJdbcUriString, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.jdbc, Utils, true, getAuthorityFromJdbcURL, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.ql.parse, ANTLRNoCaseStringStream, true, ANTLRNoCaseStringStream,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.ddl, ShowUtils, true, formatOutput, '(String, String,
      StringBuilder)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.ql.security.authorization, HiveCustomStorageHandlerUtils,
    true, getTablePropsForCustomStorageHandler, '(Map<String,String>)', '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.hive.ql.metadata, Hive, true, alterTable, '(String, String,
      String, Table, boolean, EnvironmentContext, boolean, long)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.ql.metadata, Hive, true, alterTable, '(String, String,
      String, Table, boolean, EnvironmentContext, boolean, long)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.api, GetTableRequest, true, GetTableRequest,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getTables, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getTableMeta, '(String,
      String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getTableMeta, '(String,
      String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.ql.metadata, SessionHiveMetaStoreClient, true, getTempTables,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, alter_table, '(String,
      String, String, Table, EnvironmentContext, String)', '', 'Argument[2]', sql,
    manual]
  - [org.slf4j, Logger, true, debug, (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.metadata, SessionHiveMetaStoreClient, true, deleteTempTableColumnStatsForTable,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.metadata, SessionHiveMetaStoreClient, true, deleteTempTableColumnStatsForTable,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getQualifiedName, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [java.util, 'Map<String,Map<String,ColumnStatisticsObj>>', true, remove, (Object),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.metadata, SessionHiveMetaStoreClient, true, getTempTable,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.slf4j, Logger, true, info, (String), '', 'Argument[0]', sql, manual]
  - [java.sql, SQLException, true, SQLException, '(String, String)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.ql.processors, CommandProcessorException, true, CommandProcessorException,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.processors, ErasureProcessor, true, parseCommandArgs,
    '(Options, String[])', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.ql.metadata, Hive, true, setMetaConf, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.ql.security.authorization.plugin, AuthorizationMetaStoreFilterHook,
    true, getHivePrivObjects, '(String, List<String>)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.security.authorization.plugin, HivePrivilegeObject,
    true, HivePrivilegeObject, '(HivePrivilegeObjectType, String, String)', '', 'Argument[2]',
    open-url, manual]
  - [org.apache.hadoop.hive.ql.security.authorization.plugin.metastore, HiveMetaStoreAuthorizableEvent,
    true, getHivePrivilegeObjectDfsUri, (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.commons.lang3, StringUtils, true, equals, '(CharSequence, CharSequence)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hive.ql.security.authorization.plugin.metastore, HiveMetaStoreAuthorizableEvent,
    true, getSdLocation, (StorageDescriptor), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.conf, Configuration, true, getClassByName, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.conf, Configuration, true, getClassByName, (String), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.hadoop.hive.ql.metadata, HiveStorageAuthorizationHandler, true, getURIForAuth,
    '(Map<String,String>)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.ql.security.authorization.plugin, HivePrivilegeObject,
    true, HivePrivilegeObject, '(HivePrivilegeObjectType, String, String, List<String>,
      List<String>, HivePrivObjectActionType, List<String>, String, String, PrincipalType)',
    '', 'Argument[2]', open-url, manual]
  - [org.apache.hadoop.hive.ql.security.authorization.plugin, HivePrivilegeObject,
    true, HivePrivilegeObject, '(HivePrivilegeObjectType, String, String, List<String>,
      List<String>, HivePrivObjectActionType, List<String>, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.ql.session, LogHelper, true, printInfo, (String), '',
    'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.ql.session, SessionState, true, resolveAndDownload, '(ResourceType,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.hadoop.hive.ql.util, ResourceDownloader, true, isIvyUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.ql.util, ResourceDownloader, true, resolveAndDownload,
    '(String, boolean)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.ql.util, ResourceDownloader, true, isHdfsUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<String,String>', true, containsValue, (Object), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hive.ql.util, ResourceDownloader, true, getURLType, (URI),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.ql.util, ResourceDownloader, true, resolveAndDownloadInternal,
    '(URI, String, boolean, boolean)', '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.ql.util, ResourceDownloader, true, createURI, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.ql.util, UpgradeTool, true, println, '(PrintWriter, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getQualifiedName, (Table),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.serde2.avro, AvroSerdeUtils, true, getSchemaFor, (URL),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.serde2.avro, AvroSerdeException, true, AvroSerdeException,
    '(String, Throwable)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.serde2.avro, TypeInfoToSchema, true, convert, '(List<String>,
      List<TypeInfo>, List<String>, String, String, String)', '', 'Argument[3]', sql,
    manual]
  - [org.apache.hadoop.hive.serde2.lazy, LazyUtils, true, getByte, '(String, byte)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.hive.service.auth, KerberosSaslHelper, true, createSubjectAssumedTransport,
    '(String, String, TTransport, Map<String,String>)', '', 'Argument[1]', open-url,
    manual]
  - [org.apache.hadoop.hive.metastore.security, Client, true, createClientTransport,
    '(String, String, String, String, TTransport, Map<String,String>)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hive.service.auth.ldap, QueryFactory, true, isUserMemberOfGroup, '(String,
      String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hive.service.cli.session, HiveSession, true, getTables, '(String,
      String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hive.service.cli.session, HiveSession, true, getColumns, '(String,
      String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hive.service.cli.operation.hplsql, HplSqlOperation, true, HplSqlOperation,
    '(HiveSession, String, Map<String,String>, boolean, Exec)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hive.service.cli.operation, SQLOperation, true, SQLOperation, '(HiveSession,
      String, Map<String,String>, boolean, long, boolean)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hive.service.cli.operation, HiveCommandOperation, true, HiveCommandOperation,
    '(HiveSession, String, CommandProcessor, Map<String,String>)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hive.service.cli.operation, MetadataOperation, true, convertSchemaPattern,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hive.service.cli.operation, MetadataOperation, true, convertIdentifierPattern,
    '(String, boolean)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, IMetaStoreClient, true, getDatabases, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, IMetaStoreClient, true, getTables, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, PrimaryKeysRequest, true, PrimaryKeysRequest,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, IMetaStoreClient, true, getTableMeta, '(String,
      String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.service.cli.operation, ExecuteStatementOperation, true, newExecuteStatementOperation,
    '(HiveSession, String, Map<String,String>, boolean, long)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hive.service.cli.operation, GetTablesOperation, true, GetTablesOperation,
    '(HiveSession, String, String, String, List<String>)', '', 'Argument[3]', sql,
    manual]
  - [org.apache.hive.service.cli.operation, GetPrimaryKeysOperation, true, GetPrimaryKeysOperation,
    '(HiveSession, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hive.service.cli.session, HiveSessionImpl, true, executeStatementInternal,
    '(String, Map<String,String>, boolean, long)', '', 'Argument[0]', sql, manual]
  - [org.apache.hive.service.cli.operation, OperationManager, true, newGetTablesOperation,
    '(HiveSession, String, String, String, List<String>)', '', 'Argument[3]', sql,
    manual]
  - [org.apache.hive.service.cli, CLIService, true, executeStatementAsync, '(SessionHandle,
      String, Map<String,String>, long)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.service.cli, CLIService, true, executeStatement, '(SessionHandle,
      String, Map<String,String>, long)', '', 'Argument[1]', sql, manual]
  - [org.apache.hive.service.rpc.thrift, TStatus, true, addToInfoMessages, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hive.service.server, HiveServer2, true, addConfsToPublish, '(HiveConf,
      Map<String,String>, String)', '', 'Argument[2]', open-url, manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.hadoop.hive.common, ZooKeeperHiveHelper, true, addServerInstanceToZooKeeper,
    '(String, String, ACLProvider, ZKDeRegisterWatcher)', '', 'Argument[0]', create-file,
    manual]
  - [org.apache.hadoop.hive.metastore.api, Client, true, send_get_table_meta, '(String,
      String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Client, true, send_get_table_meta, '(String,
      String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, get_table_meta_args, true, setTbl_patterns,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Client, true, send_get_partitions_pspec,
    '(String, String, int)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Client, true, send_get_partitions_pspec,
    '(String, String, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, get_partitions_pspec_args, true, setTbl_name,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Client, true, send_get_partition_names,
    '(String, String, short)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Client, true, send_get_partition_names,
    '(String, String, short)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, get_partition_names_args, true, setDb_name,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, get_partition_names_args, true, setTbl_name,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.curator.framework.recipes.nodes, PersistentNode, true, PersistentNode,
    '(CuratorFramework, CreateMode, boolean, String, byte[])', '', 'Argument[3]',
    create-file, manual]
  - [java.util, Arrays, true, asList, '(T[])', '', 'Argument[0]', open-url, manual]
  - [java.util, Collections, true, shuffle, '(List<?>)', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getValidWriteIdList,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, listPartitionNamesInternal,
    '(String, String, String, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, listPartitionNamesInternal,
    '(String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, AlterTableRequest, true, AlterTableRequest,
    '(String, String, Table)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, AlterTableRequest, true, AlterTableRequest,
    '(String, String, Table)', '', 'Argument[1]', sql, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, dropPartitions,
    '(String, String, String, List<Pair<Integer,byte[]>>, PartitionDropOptions)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, dropPartitions,
    '(String, String, String, List<Pair<Integer,byte[]>>, PartitionDropOptions)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getDatabases, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Iface, true, get_databases, (String), '',
    'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, MetaStoreUtils, true, prependCatalogToDbName,
    '(String, String, Configuration)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Iface, true, get_partitions_pspec, '(String,
      String, int)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Iface, true, get_partitions_pspec, '(String,
      String, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getPartitionsByNames,
    '(String, String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getPartitionsByNames,
    '(String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, GetPartitionsByNamesRequest, true, GetPartitionsByNamesRequest,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, GetPartitionsByNamesRequest, true, GetPartitionsByNamesRequest,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, checkDbAndTableFilters,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, getTables, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClient, true, listPartitionNames,
    '(String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, FilterUtils, true, filterPartitionNamesIfEnabled,
    '(boolean, MetaStoreFilterHook, String, String, String, List<String>)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Iface, true, get_partition_names, '(String,
      String, short)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Iface, true, get_partition_names, '(String,
      String, short)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, dbDirFromDbName, (Database),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.utils, FileUtils, true, escapePathName, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.api, CompactionRequest, true, setDbname, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, CompactionRequest, true, setTablename,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.common, TableName, true, getDbTable, '(String, String)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreFilterHook, true, filterTableNames,
    '(String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, FileUtils, true, escapePathName, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.utils, FilterUtils, true, filterTableNamesIfEnabled,
    '(boolean, MetaStoreFilterHook, String, String, List<String>)', '', 'Argument[3]',
    sql, manual]
  - [java.util, Collections, true, singletonList, (T), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, NoSuchObjectException, true, NoSuchObjectException,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, MetaException, true, MetaException, (String),
    '', 'Argument[0]', sql, manual]
  - [java.util, List<URL>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.io, File, true, File, (String), '', 'Argument[0]', open-url, manual]
  - [java.util, Properties, true, setProperty, '(String, String)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, MetaStoreUtils, true, getSchemaWithoutCols,
    '(StorageDescriptor, Map<String,String>, String, String, List<FieldSchema>)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, MetaStoreUtils, true, getSchemaWithoutCols,
    '(StorageDescriptor, Map<String,String>, String, String, List<FieldSchema>)',
    '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, InvalidOperationException, true, InvalidOperationException,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.commons.lang3, StringUtils, true, isEmpty, (CharSequence), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getDatabase, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.common, TableName, true, getQualified, '(String, String,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.common, TableName, true, getQualified, '(String, String,
      String)', '', 'Argument[2]', create-file, manual]
  - [org.slf4j, Logger, true, error, '(String, Throwable)', '', 'Argument[0]', sql,
    manual]
  - [org.slf4j, Logger, true, error, (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.common, TableName, true, getQualified, '(String, String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.common, TableName, true, getQualified, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, ColumnStatisticsDesc, true, setTableName,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, alterPartition, '(String, String,
      String, List<String>, Partition, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.common, TableName, true, TableName, '(String, String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveAlterHandler, true, updateOrGetPartitionColumnStats,
    '(RawStore, String, String, String, List<String>, List<FieldSchema>, Table, Partition,
      List<FieldSchema>, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartition, '(String, String,
      String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getDatabase, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, FilterUtils, true, checkDbAndTableFilters,
    '(boolean, MetaStoreFilterHook, String, String, String)', '', 'Argument[3]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore.api, InvalidOperationException, true, InvalidOperationException,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, startFunction, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreEndFunctionContext, true, MetaStoreEndFunctionContext,
    '(boolean, Exception, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Database, true, Database, '(String, String,
      String, Map<String,String>)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.api, MetaException, true, MetaException, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, startFunction, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getDefaultDatabasePath, '(String,
      boolean)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.utils, MetaStoreUtils, true, parseDbName, '(String,
      Configuration)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, deletePartitionColumnStatistics,
    '(String, String, String, String, List<String>, String, String)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, deletePartitionColumnStatistics,
    '(String, String, String, String, List<String>, String, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropDatabase, '(String, String)',
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, AlreadyExistsException, true, AlreadyExistsException,
    (String), '', 'Argument[0]', sql, manual]
  - [org.slf4j, Logger, true, warn, (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropConstraint, '(String, String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTable, '(String, String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropPartitions, '(String, String,
      String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, drop_table_with_environment_context,
    '(String, String, boolean, EnvironmentContext)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, drop_table_with_environment_context,
    '(String, String, boolean, EnvironmentContext, boolean)', '', 'Argument[0]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, AlterHandler, true, alterPartition, '(RawStore,
      Warehouse, String, String, String, List<String>, Partition, EnvironmentContext,
      IHMSHandler, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, AlterHandler, true, alterTable, '(RawStore,
      Warehouse, String, String, String, Table, EnvironmentContext, IHMSHandler, String)',
    '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionsByNames, '(String,
      String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, alterPartitionForTruncate,
    '(RawStore, String, String, String, Table, Partition, String, long)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_table_core, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, alterTableStatsForTruncate,
    '(RawStore, String, String, String, Table, List<String>, String, long)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, executeWithArray,
    '(Query<>, Object[], String)', '', 'Argument[1]', sql, manual]
  - [org.slf4j, Logger, true, trace, (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.dataconnector, IDataConnectorProvider, true,
    getTable, (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTableColumnStatistics, '(String,
      String, String, List<String>, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTableColumnStatistics, '(String,
      String, String, List<String>, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, getTableObjectsInternal,
    '(String, String, List<String>, ClientCapabilities, GetProjectionsSpec, String)',
    '', 'Argument[5]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, startMultiTableFunction,
    '(String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, updateCreationMetadata, '(String,
      String, String, CreationMetadata)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getPartitionIdsViaSqlFilter,
    '(String, String, String, String, List<? extends Object>, List<String>, Integer)',
    '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, MetaStoreUtils, true, makePartNameMatcher,
    '(Table, List<String>, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, PartitionFilterGenerator, true, generateSqlFilter,
    '(String, String, String, List<FieldSchema>, ExpressionTree, List<Object>, List<String>,
      boolean, String, DatabaseProduct, String, boolean)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, executeWithArray,
    '(Query<>, Object[], String, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, getTableLockFor, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, addPartitions, '(String, String,
      String, List<Partition>)', '', 'Argument[2]', sql, manual]
  - [com.google.common.util.concurrent, Striped<Lock>, true, get, (Object), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, TableLocationStrategy, true, getDefaultPath,
    '(IHMSHandler, Database, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getDefaultTablePath, '(Database,
      String, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, TableLocationStrategy, true, getLocation, '(IHMSHandler,
      Database, Table, int)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, MetastoreDefaultTransformer, true, getTranslatedToExternalTableDefaultLocation,
    '(Database, Table)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, exchange_partitions, '(Map<String,String>,
      String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, exchange_partitions, '(Map<String,String>,
      String, String, String, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTable, '(String, String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, FileUtils, true, isSubdirectory, '(String,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object[])', '', 'Argument[3]', create-file,
    manual]
  - [org.apache.hadoop.hive.metastore, PartitionFilterGenerator, true, PartitionFilterGenerator,
    '(String, String, String, List<FieldSchema>, List<Object>, List<String>, boolean,
      String, DatabaseProduct, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, GetTableRequest, true, GetTableRequest,
    '(String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartition, '(String, String,
      String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropPartition, '(String, String,
      String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, drop_partition_with_environment_context,
    '(String, String, List<String>, boolean, EnvironmentContext)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionsByExpr, '(String,
      String, String, byte[], String, short, List<Partition>)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, startPartitionFunction, '(String,
      String, String, String, List<String>)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, drop_partition_common, '(RawStore,
      String, String, String, List<String>, boolean, EnvironmentContext)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, endFunction, '(String, boolean,
      Exception, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, fireReadTablePreEvent, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionWithAuth, '(String,
      String, String, List<String>, String, List<String>)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionWithAuth, '(String,
      String, String, List<String>, String, List<String>)', '', 'Argument[4]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, checkLimitNumberOfPartitionsByFilter,
    '(String, String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, authorizeTableForPartitionMetadata,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitions, '(String, String,
      String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionsWithAuth, '(String,
      String, String, short, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_num_partitions_by_filter,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_num_partitions_by_filter,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_num_partitions_by_expr,
    '(String, String, String, byte[])', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_partitions, '(String,
      String, short)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionNames, '(String,
      String, String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, authorizeTableForPartitionMetadata,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionValues, '(String,
      String, String, List<FieldSchema>, boolean, String, boolean, List<FieldSchema>,
      long)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionValues, '(String,
      String, String, List<FieldSchema>, boolean, String, boolean, List<FieldSchema>,
      long)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, AlterHandler, true, alterPartition, '(RawStore,
      Warehouse, String, String, String, List<String>, Partition, EnvironmentContext,
      IHMSHandler, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, alter_partitions_with_environment_context,
    '(String, String, String, List<Partition>, EnvironmentContext, String, long)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, prepareParams, '(String,
      String, String, List<String>, List<String>, String)', '', 'Argument[4]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, startTableFunction, '(String,
      String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore.events, PreAlterPartitionEvent, true, PreAlterPartitionEvent,
    '(String, String, Table, List<String>, Partition, IHMSHandler)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, AlterHandler, true, alterPartitions, '(RawStore,
      Warehouse, String, String, String, List<Partition>, EnvironmentContext, String,
      long, IHMSHandler)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, AlterHandler, true, alterPartitions, '(RawStore,
      Warehouse, String, String, String, List<Partition>, EnvironmentContext, String,
      long, IHMSHandler)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, prepareParams, '(String,
      String, String, List<String>, List<String>, String)', '', 'Argument[3]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, AlterHandler, true, alterTable, '(RawStore,
      Warehouse, String, String, String, Table, EnvironmentContext, IHMSHandler, String)',
    '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, isDatabaseRemote, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_fields_with_environment_context,
    '(String, String, EnvironmentContext)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_fields_with_environment_context,
    '(String, String, EnvironmentContext)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_schema_with_environment_context,
    '(String, String, EnvironmentContext)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, ConfigValSecurityException, true, ConfigValSecurityException,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, InvalidObjectException, true, InvalidObjectException,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, getPartValsFromName, '(RawStore,
      String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_partition_by_name_core,
    '(RawStore, String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, append_partition_by_name_with_environment_context,
    '(String, String, String, EnvironmentContext)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, append_partition_common,
    '(RawStore, String, String, String, List<String>, EnvironmentContext)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, drop_partition_by_name_with_environment_context,
    '(String, String, String, boolean, EnvironmentContext)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, drop_partition_by_name_core,
    '(RawStore, String, String, String, String, boolean, EnvironmentContext)', '',
    'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_partitions_ps_with_auth,
    '(String, String, List<String>, short, String, List<String>)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_partitions_ps_with_auth,
    '(String, String, List<String>, short, String, List<String>)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionsPsWithAuth, '(String,
      String, String, List<String>, short, String, List<String>)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionNamesPs, '(String,
      String, String, List<String>, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionNames, '(String,
      String, String, String, byte[], String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionColumnStatistics,
    '(String, String, String, List<String>, List<String>, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionColumnStatistics,
    '(String, String, String, List<String>, List<String>, String, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, MetastoreDirectSqlUtils, true, executeWithArray,
    '(Query<>, Object[], String, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, ColumnStatisticsDesc, true, setCatName,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.events, DeletePartitionColumnStatEvent, true,
    DeletePartitionColumnStatEvent, '(String, String, String, String, List<String>,
      String, String, IHMSHandler)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, deleteTableColumnStatistics,
    '(String, String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.events, DeleteTableColumnStatEvent, true, DeleteTableColumnStatEvent,
    '(String, String, String, String, String, IHMSHandler)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionsByFilter, '(String,
      String, String, String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_partitions_by_filter,
    '(String, String, String, short)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionsByExpr, '(String,
      String, String, byte[], String, short, List<Partition>)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_table_core, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getNumPartitionsByFilter, '(String,
      String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_partitions_by_names,
    '(String, String, List<String>, boolean, String, List<String>, String)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, get_table_privilege_set,
    '(String, String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getColumnPrivilegeSet, '(String,
      String, String, String, String, String, List<String>)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getColumnPrivilegeSet, '(String,
      String, String, String, String, String, List<String>)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getDBPrivilegeSet, '(String,
      String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionPrivilegeSet, '(String,
      String, String, String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTablePrivilegeSet, '(String,
      String, String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTablePrivilegeSet, '(String,
      String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, list_table_privileges, '(String,
      PrincipalType, String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, list_partition_privileges,
    '(String, PrincipalType, String, String, String, List<String>)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalTableColumnGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalTableColumnGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, List<String>, String, String)',
    '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, List<String>, String, String)',
    '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalDBGrants, '(String,
      PrincipalType, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionGrantsAll, '(String,
      String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionGrantsAll, '(String,
      String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalPartitionGrants,
    '(String, PrincipalType, String, String, String, List<String>, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPrincipalPartitionGrants,
    '(String, PrincipalType, String, String, String, List<String>, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listAllTableGrants, '(String,
      PrincipalType, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listAllTableGrants, '(String,
      PrincipalType, String, String, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore.events, PreLoadPartitionDoneEvent, true, PreLoadPartitionDoneEvent,
    '(String, String, String, Map<String,String>, IHMSHandler)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, isPartitionMarkedForEvent,
    '(String, String, String, Map<String,String>, PartitionEventType)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, FileUtils, true, getTransformedPath,
    '(String, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.commons.lang3, StringUtils, true, isNotBlank, (CharSequence), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.model, MCatalog, true, setLocationUri, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.utils, FilterUtils, true, filterCommittedCompactionInfoStructIfEnabled,
    '(boolean, MetaStoreFilterHook, String, String, String, GetLatestCommittedCompactionInfoResponse)',
    '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, get_aggr_stats_for, '(String,
      String, String, List<String>, List<String>, String, String)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, get_aggr_stats_for, '(String,
      String, String, List<String>, List<String>, String, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, updateTableColumnStatsWithMerge,
    '(String, String, String, List<String>, SetPartitionsStatsRequest)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, updateTableColumnStatsWithMerge,
    '(String, String, String, List<String>, SetPartitionsStatsRequest)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, updatePartColumnStatsWithMerge,
    '(String, String, String, List<String>, Map<String,ColumnStatistics>, SetPartitionsStatsRequest)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, updatePartColumnStatsWithMerge,
    '(String, String, String, List<String>, Map<String,ColumnStatistics>, SetPartitionsStatsRequest)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, getTable, '(String, String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, getTable, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.model, MDatabase, true, setManagedLocationUri,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.model, MDatabase, true, setLocationUri, (String),
    '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.model, MDataConnector, true, setUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableAllColumnGrants,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableAllPartitionColumnGrants,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllTableConstraintsWithOptionalConstraintName,
    '(String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionNames, '(String,
      String, String, short)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, HMSHandler, true, startTableFunction, '(String,
      String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, ForeignKeysRequest, true, setCatName, (String),
    '', 'Argument[0]', sql, manual]
  - [javax.jdo, Query<>, true, executeWithArray, '(Object[])', '', 'Argument[0]',
    sql, manual]
  - [javax.jdo, Query<>, true, executeWithArray, '(Object[])', '', 'Argument[1]',
    sql, manual]
  - [javax.jdo, Query<>, true, executeWithArray, '(Object[])', '', 'Argument[3]',
    sql, manual]
  - [javax.jdo, Query<>, true, executeWithArray, '(Object[])', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, alterPool, '(WMNullablePool,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getMTable, '(String, String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, createWMTriggerToPoolMapping,
    '(String, String, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, '', true, '', '(String, String, String, boolean,
      boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getTables, '(String,
      String, TableType, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnStore, true, lockMaterializationRebuild,
    '(String, String, long)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnStore, true, lockMaterializationRebuild,
    '(String, String, long)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnStore, true, heartbeatLockMaterializationRebuild,
    '(String, String, long)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnStore, true, heartbeatLockMaterializationRebuild,
    '(String, String, long)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, StringUtils, true, normalizeIdentifier,
    (String), '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, appendPatternCondition,
    '(StringBuilder, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropConstraint, '(String, String,
      String, String, boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropConstraint, '(String, String,
      String, String, boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropPartitionsInternal,
    '(String, String, String, List<String>, boolean, boolean)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropPartitionsInternal,
    '(String, String, String, List<String>, boolean, boolean)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionNamesNoTxn,
    '(String, String, String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, extractPartitionNamesByFilter,
    '(String, String, String, String, List<FieldSchema>, boolean, long)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionNamesByFilter,
    '(String, String, String, String, boolean, long)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, makeQueryFilterString, '(String,
      String, MTable, String, Map<String,Object>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, makeQueryFilterString, '(String,
      String, MTable, String, Map<String,Object>)', '', 'Argument[3]', sql, manual]
  - [javax.jdo, Query<>, true, execute, '(Object, Object, Object)', '', 'Argument[2]',
    sql, manual]
  - [javax.jdo, Query<>, true, execute, '(Object, Object, Object)', '', 'Argument[0]',
    sql, manual]
  - [javax.jdo, Query<>, true, execute, '(Object, Object, Object)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getMTable, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionPsQueryResults,
    '(String, String, String, List<String>, short, String)', '', 'Argument[2]', sql,
    manual]
  - [org.slf4j, Logger, true, info, '(String, Object[])', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitions, '(String,
      String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByNamesInternal,
    '(String, String, String, List<String>, boolean, boolean)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByNamesInternal,
    '(String, String, String, List<String>, boolean, boolean)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, ensureGetMTable, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, ensureGetMTable, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [java.util, Set<String>, true, contains, (Object), '', 'Argument[0]', sql, manual]
  - [java.util, Map<>, true, put, '(Object, Object)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByFilterInternal,
    '(String, String, String, String, short, boolean, boolean)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByFilterInternal,
    '(String, String, String, String, short, boolean, boolean)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByFilterInternal,
    '(String, String, String, String, short, boolean, boolean)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getDefaultTablePath, '(Database,
      Table)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, '', true, '', '(String, String, String, boolean,
      boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, makeQueryFilterString, '(String,
      String, Table, ExpressionTree, Map<String,Object>, boolean)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.model, MTable, true, setTableName, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getCreationMetadata, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropTable, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, removeTableFromCache,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, addPartitionToCache,
    '(String, String, String, Partition)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, addPartitionToCache,
    '(String, String, String, Partition)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, addPartitionsToCache,
    '(String, String, String, Iterable<Partition>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, existPartitionFromCache,
    '(String, String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, existPartitionFromCache,
    '(String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, removePartitionFromCache,
    '(String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedPartitions,
    '(String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, alterTableInCache,
    '(String, String, String, Table)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, addTableToCache, '(String,
      String, String, Table)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, updateCreationMetadata, '(String,
      String, String, CreationMetadata)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTables, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTableObjectsByName, '(String,
      String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getTableObjectsByName, '(String,
      String, List<String>, GetProjectionsSpec, String)', '', 'Argument[4]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listTableNamesByFilter, '(String,
      String, String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedPartitions,
    '(String, String, String, int)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, alterPartitionInCache,
    '(String, String, String, List<String>, Partition)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, alterPartitionInCache,
    '(String, String, String, List<String>, Partition)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, alterPartitions, '(String,
      String, String, List<List<String>>, List<Partition>, long, String)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, alterPartitionsInCache,
    '(String, String, String, List<List<String>>, List<Partition>)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, alterPartitionsInCache,
    '(String, String, String, List<List<String>>, List<Partition>)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getPartitionsByFilter, '(String,
      String, String, String, short)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, getNumPartitionsByExpr, '(String,
      String, String, byte[])', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, markPartitionForEvent, '(String,
      String, String, Map<String,String>, PartitionEventType)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, removeTableColStatsFromCache,
    '(String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, removePartitionColStatsFromCache,
    '(String, String, String, List<String>, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDBPrivilege, '(String,
      String, String, PrincipalType)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionPrivilege, '(String,
      String, String, String, String, PrincipalType)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionPrivilege, '(String,
      String, String, String, String, PrincipalType)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTablePrivilege, '(String,
      String, String, String, PrincipalType)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTablePrivilege, '(String,
      String, String, String, PrincipalType)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getColumnPrivilege, '(String,
      String, String, String, String, String, PrincipalType)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getColumnPrivilege, '(String,
      String, String, String, String, String, PrincipalType)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listDBGrantsAll, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listPartitionColumnGrantsAll,
    '(String, String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listTableGrantsAll, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listTableColumnGrantsAll, '(String,
      String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listTableColumnGrantsAll, '(String,
      String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, listTableColumnGrantsAll, '(String,
      String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedPrimaryKeys,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.utils, StringUtils, true, isEmpty, (CharSequence),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedUniqueConstraint,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedUniqueConstraint,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedNotNullConstraints,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedNotNullConstraints,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedDefaultConstraint,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedDefaultConstraint,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedCheckConstraint,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedCheckConstraint,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, listCachedAllTableConstraints,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropWMPool, '(String, String,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropWMTriggerToPoolMapping,
    '(String, String, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, '', true, '', '(String, String, String, boolean,
      boolean)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, RawStore, true, dropStoredProcedure, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.cache, SharedCache, true, isTableConstraintValid,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [javax.jdo, Query<>, true, executeWithArray, '(Object[])', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMDBGrants,
    '(String, PrincipalType, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listDBGrantsAll, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listDatabaseGrants, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, Table, true, setTableName, (String), '',
    'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllMTableGrants, '(String,
      PrincipalType, String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllMTableGrants, '(String,
      PrincipalType, String, String, String, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllMTableGrants, '(String,
      PrincipalType, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllMTableGrants, '(String,
      PrincipalType, String, String, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionGrants,
    '(String, PrincipalType, String, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionGrants,
    '(String, PrincipalType, String, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMTableColumnGrants,
    '(String, PrincipalType, String, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMTableColumnGrants,
    '(String, PrincipalType, String, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMTableColumnGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMTableColumnGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, String, String, String)', '',
    'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, String, String, String)', '',
    'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalMPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.api, HiveObjectRef, true, HiveObjectRef, '(HiveObjectType,
      String, String, List<String>, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.model, MPartitionEvent, true, MPartitionEvent,
    '(String, String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.model, MPartitionEvent, true, MPartitionEvent,
    '(String, String, String, String, int)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, ensureGetMTable, '(String,
      String, String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, '', true, '', '(String, String, String, boolean,
      boolean, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionColumnStatisticsInternal,
    '(String, String, String, List<String>, List<String>, String, boolean, boolean)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, get_aggr_stats_for, '(String,
      String, String, List<String>, List<String>, String)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, get_aggr_stats_for, '(String,
      String, String, List<String>, List<String>, String)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getMPartition, '(String,
      String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getMDatabase, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [javax.jdo, Query<>, true, execute, '(Object, Object)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore.api, PrimaryKeysRequest, true, PrimaryKeysRequest,
    '(String, String)', '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPrimaryKeysInternal,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPrimaryKeysInternal,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getPrimaryKeys, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getPrimaryKeys, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPrimaryKeysViaJdo, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPrimaryKeysViaJdo, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLPrimaryKey, true, SQLPrimaryKey, '(String,
      String, String, int, String, boolean, boolean, boolean)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLPrimaryKey, true, SQLPrimaryKey, '(String,
      String, String, int, String, boolean, boolean, boolean)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.api, ForeignKeysRequest, true, ForeignKeysRequest,
    '(String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, ForeignKeysRequest, true, ForeignKeysRequest,
    '(String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getForeignKeys, '(String,
      String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getForeignKeys, '(String,
      String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getForeignKeys, '(String,
      String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getForeignKeysViaJdo, '(String,
      String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, UniqueConstraintsRequest, true, UniqueConstraintsRequest,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, UniqueConstraintsRequest, true, UniqueConstraintsRequest,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getUniqueConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getUniqueConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getUniqueConstraints,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getUniqueConstraintsViaJdo,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLUniqueConstraint, true, SQLUniqueConstraint,
    '(String, String, String, String, int, String, boolean, boolean, boolean)', '',
    'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLUniqueConstraint, true, SQLUniqueConstraint,
    '(String, String, String, String, int, String, boolean, boolean, boolean)', '',
    'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, NotNullConstraintsRequest, true, NotNullConstraintsRequest,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, NotNullConstraintsRequest, true, NotNullConstraintsRequest,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNotNullConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNotNullConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, DefaultConstraintsRequest, true, DefaultConstraintsRequest,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, DefaultConstraintsRequest, true, DefaultConstraintsRequest,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDefaultConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDefaultConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, CheckConstraintsRequest, true, CheckConstraintsRequest,
    '(String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, CheckConstraintsRequest, true, CheckConstraintsRequest,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getCheckConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getCheckConstraintsInternal,
    '(String, String, String, boolean, boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getDefaultConstraints,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDefaultConstraintsViaJdo,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getCheckConstraints,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getCheckConstraintsViaJdo,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLCheckConstraint, true, SQLCheckConstraint,
    '(String, String, String, String, String, String, boolean, boolean, boolean)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLCheckConstraint, true, SQLCheckConstraint,
    '(String, String, String, String, String, String, boolean, boolean, boolean)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLDefaultConstraint, true, SQLDefaultConstraint,
    '(String, String, String, String, String, String, boolean, boolean, boolean)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLDefaultConstraint, true, SQLDefaultConstraint,
    '(String, String, String, String, String, String, boolean, boolean, boolean)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreDirectSql, true, getNotNullConstraints,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNotNullConstraintsViaJdo,
    '(String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SQLNotNullConstraint, true, SQLNotNullConstraint,
    '(String, String, String, String, String, boolean, boolean, boolean)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, debugLog, (String), '',
    'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPrimaryKeys, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getForeignKeys, '(String,
      String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getForeignKeys, '(String,
      String, String, String, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getUniqueConstraints, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getUniqueConstraints, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDefaultConstraints, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDefaultConstraints, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getCheckConstraints, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getCheckConstraints, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNotNullConstraints, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllTableConstraintsWithOptionalConstraintName,
    '(String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [javax.jdo, Query<>, true, setNamedParameters, (Map<>), '', 'Argument[0]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getMISchema, '(String, String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getMISchema, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.api, SerDeInfo, true, setName, (String), '',
    'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPool, '(MWMResourcePlan,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.dataconnector, AbstractDataConnectorProvider,
    true, buildTableFromColsList, '(String, List<FieldSchema>)', '', 'Argument[0]',
    sql, manual]
  - [java.sql, DatabaseMetaData, true, getColumns, '(String, String, String, String)',
    '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getDefaultTablePath, '(String,
      String, boolean)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.model, MWMPool, true, MWMPool, '(MWMResourcePlan,
      String, Double, Integer, String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, poolParentExists, '(MWMResourcePlan,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, moveDescendents, '(MWMResourcePlan,
      String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.model, MWMPool, true, setPath, (String), '',
    'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.utils, StringUtils, true, normalizeIdentifier,
    (String), '', 'Argument[0]', create-file, manual]
  - [javax.jdo, Query<>, true, execute, '(Object, Object)', '', 'Argument[1]', create-file,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getParentPath, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, poolHasChildren, '(MWMResourcePlan,
      String)', '', 'Argument[1]', create-file, manual]
  - [javax.jdo, Query<>, true, deletePersistentAll, '(Object[])', '', 'Argument[1]',
    create-file, manual]
  - [org.apache.hadoop.hive.metastore.messaging.json, JSONAddPrimaryKeyMessage, true,
    JSONAddPrimaryKeyMessage, '(String, String, List<SQLPrimaryKey>, Long)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.messaging.json, JSONAddForeignKeyMessage, true,
    JSONAddForeignKeyMessage, '(String, String, List<SQLForeignKey>, Long)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.messaging.json, JSONDropConstraintMessage, true,
    JSONDropConstraintMessage, '(String, String, String, String, String, Long)', '',
    'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.messaging.json, JSONDropConstraintMessage, true,
    JSONDropConstraintMessage, '(String, String, String, String, String, Long)', '',
    'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnHandler, true, checkRetryable, '(Connection,
      SQLException, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnHandler, true, quoteString, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore.tools, SQLGenerator, true, createInsertValuesPreparedStmt,
    '(Connection, String, List<String>, List<List<String>>)', '', 'Argument[3]', sql,
    manual]
  - [org.slf4j, Logger, true, debug, '(String, Object)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.tools, SQLGenerator, true, prepareStmtWithParameters,
    '(Connection, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [java.util, Arrays, true, asList, '(T[])', '', 'Argument[0]', sql, manual]
  - [java.util, Arrays, true, asList, '(T[])', '', 'Argument[1]', sql, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object, Object)', '', 'Argument[1]',
    sql, manual]
  - [org.slf4j, Logger, true, debug, '(String, Object)', '', 'Argument[0]', sql, manual]
  - [java.lang, RuntimeException, true, RuntimeException, (String), '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnHandler, true, checkRetryable, '(Connection,
      SQLException, String, boolean)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnHandler, true, getValidWriteIdsForTable,
    '(Connection, String, ValidTxnList)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnUtils, true, getDbTableName, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.common, TableName, true, getDbTable, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.events, AllocWriteIdEvent, true, AllocWriteIdEvent,
    '(List<TxnToWriteId>, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.events, AllocWriteIdEvent, true, AllocWriteIdEvent,
    '(List<TxnToWriteId>, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, Warehouse, true, getFileStatusesForLocation,
    (String), '', 'Argument[0]', create-file, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnHandler, true, executeBoolean, '(String,
      List<String>, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnHandler, true, normalizeCase, (String),
    '', 'Argument[0]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropTable, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTable, '(String, String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTable, '(String, String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTable, '(String, String,
      String, String, long)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTable, '(String, String,
      String, String, long)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartition, '(String,
      String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropPartition, '(String,
      String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionLocations, '(String,
      String, String, String, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, alterTable, '(String, String,
      String, Table, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTables, '(String, String,
      String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTables, '(String, String,
      String, TableType, int)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableNamesByFilter,
    '(String, String, String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPartitionNames, '(String,
      String, String, String, byte[], String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, alterPartition, '(String,
      String, String, List<String>, Partition, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, alterPartitions, '(String,
      String, String, List<List<String>>, List<Partition>, long, String)', '', 'Argument[6]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByFilter, '(String,
      String, String, String, short)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByFilter, '(String,
      String, String, String, short)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNumPartitionsByFilter,
    '(String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNumPartitionsByFilter,
    '(String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNumPartitionsByExpr,
    '(String, String, String, byte[])', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getNumPartitionsByExpr,
    '(String, String, String, byte[])', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByNames, '(String,
      String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByNames, '(String,
      String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, markPartitionForEvent, '(String,
      String, String, Map<String,String>, PartitionEventType)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, isPartitionMarkedForEvent,
    '(String, String, String, Map<String,String>, PartitionEventType)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getDBPrivilegeSet, '(String,
      String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTablePrivilegeSet, '(String,
      String, String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTablePrivilegeSet, '(String,
      String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionPrivilegeSet,
    '(String, String, String, String, String, List<String>)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionPrivilegeSet,
    '(String, String, String, String, String, List<String>)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getColumnPrivilegeSet, '(String,
      String, String, String, String, String, List<String>)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getColumnPrivilegeSet, '(String,
      String, String, String, String, String, List<String>)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalDBGrants, '(String,
      PrincipalType, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalDCGrants, '(String,
      PrincipalType, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllTableGrants, '(String,
      PrincipalType, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listAllTableGrants, '(String,
      PrincipalType, String, String, String)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalPartitionGrants,
    '(String, PrincipalType, String, String, String, List<String>, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalPartitionGrants,
    '(String, PrincipalType, String, String, String, List<String>, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalTableColumnGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalTableColumnGrants,
    '(String, PrincipalType, String, String, String, String)', '', 'Argument[4]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, List<String>, String, String)',
    '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPrincipalPartitionColumnGrants,
    '(String, PrincipalType, String, String, String, List<String>, String, String)',
    '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionWithAuth, '(String,
      String, String, List<String>, String, List<String>)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsWithAuth, '(String,
      String, String, short, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listDBGrantsAll, '(String,
      String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPartitionColumnGrantsAll,
    '(String, String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPartitionColumnGrantsAll,
    '(String, String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableGrantsAll, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableGrantsAll, '(String,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPartitionGrantsAll,
    '(String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPartitionGrantsAll,
    '(String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableColumnGrantsAll,
    '(String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableColumnGrantsAll,
    '(String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listTableColumnGrantsAll,
    '(String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTableColumnStatistics,
    '(String, String, String, List<String>, String, String)', '', 'Argument[1]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getTableColumnStatistics,
    '(String, String, String, List<String>, String, String)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, deleteTableColumnStatistics,
    '(String, String, String, String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, deletePartitionColumnStatistics,
    '(String, String, String, String, List<String>, String, String)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, deletePartitionColumnStatistics,
    '(String, String, String, String, List<String>, String, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore.txn, TxnUtils, true, buildQueryWithINClause,
    '(Configuration, List<String>, StringBuilder, StringBuilder, Collection<Long>,
      String, boolean, boolean)', '', 'Argument[4]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionColumnStatistics,
    '(String, String, String, List<String>, List<String>)', '', 'Argument[2]', sql,
    manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionColumnStatistics,
    '(String, String, String, List<String>, List<String>, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionColumnStatistics,
    '(String, String, String, List<String>, List<String>, String, String)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionColumnStatistics,
    '(String, String, String, List<String>, List<String>, String, String)', '', 'Argument[2]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, addPartitions, '(String,
      String, String, List<Partition>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropPartitions, '(String,
      String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropPartitions, '(String,
      String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, alterPool, '(WMNullablePool,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropWMPool, '(String, String,
      String)', '', 'Argument[1]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, createWMTriggerToPoolMapping,
    '(String, String, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropWMTriggerToPoolMapping,
    '(String, String, String, String)', '', 'Argument[2]', create-file, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getAllWriteEventInfo, '(long,
      String, String)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, dropStoredProcedure, '(String,
      String, String)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, listPartitionNames, '(String,
      String, String, short)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, alterPartitions, '(String,
      String, String, List<List<String>>, List<Partition>, long, String)', '', 'Argument[1]',
    sql, manual]
  - [org.slf4j, Logger, true, info, (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClientPreCatalog, true, dropPartitions,
    '(String, String, List<Pair<Integer,byte[]>>, PartitionDropOptions)', '', 'Argument[0]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, HiveMetaStoreClientPreCatalog, true, dropPartitions,
    '(String, String, List<Pair<Integer,byte[]>>, PartitionDropOptions)', '', 'Argument[1]',
    sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreFilterHook, true, filterPartitionNames,
    '(String, String, String, List<String>)', '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, MetaStoreFilterHook, true, filterPartitionNames,
    '(String, String, String, List<String>)', '', 'Argument[2]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByExprInternal,
    '(String, String, String, byte[], String, short, List<Partition>, boolean, boolean)',
    '', 'Argument[1]', sql, manual]
  - [org.apache.hadoop.hive.metastore, ObjectStore, true, getPartitionsByExprInternal,
    '(String, String, String, byte[], String, short, List<Partition>, boolean, boolean)',
    '', 'Argument[2]', sql, manual]
  - [kotlin, StandardKt, true, let, '(T, Function1<? super T,? extends R>)', '', 'Argument[0]',
    open-url, manual]
  - [io.ktor.server.response, ApplicationResponseFunctionsKt, true, respondText$default,
    '(ApplicationCall, String, ContentType, HttpStatusCode, Function1<>, int, Object)',
    '', 'Argument[1]', open-url, manual]
  - [io.ktor.http, FileContentTypeKt, true, fromFilePath, '(Companion, String)', '',
    'Argument[1]', create-file, manual]
  - [kotlin.text, StringsKt, true, lastIndexOfAny$default, '(CharSequence, char[],
      int, boolean, int, Object)', '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, indexOf$default, '(CharSequence, char, int, boolean,
      int, Object)', '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, substring, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [kotlin.text, StringsKt, true, substringAfter, '(String, char, String)', '', 'Argument[0]',
    open-url, manual]
  - [kotlin.text, StringsKt, true, substringAfterLast$default, '(String, char, String,
      int, Object)', '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, substringBefore$default, '(String, char, String,
      int, Object)', '', 'Argument[0]', open-url, manual]
  - [io.ktor.util, StringValuesBuilder, true, append, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [kotlin.text, StringsKt, true, substringBefore$default, '(String, String, String,
      int, Object)', '', 'Argument[0]', open-url, manual]
  - [io.ktor.http, URLBuilderKt, true, setEncodedPath, '(URLBuilder, String)', '',
    'Argument[1]', create-file, manual]
  - [kotlin.text, StringsKt, true, isEmpty, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [kotlin.text, StringsKt, true, count, '(CharSequence, Function1<? super Character,Boolean>)',
    '', 'Argument[0]', create-file, manual]
  - [io.ktor.http, CodecsKt, true, decodeURLPart$default, '(String, int, int, Charset,
      int, Object)', '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, endsWith$default, '(String, String, boolean, int,
      Object)', '', 'Argument[0]', create-file, manual]
  - [io.ktor.server.plugins, MutableOriginConnectionPoint, true, setHost, (String),
    '', 'Argument[0]', open-url, manual]
  - [io.ktor.server.sessions, DirectoryStorage, true, split, (String), '', 'Argument[0]',
    create-file, manual]
  - [kotlin.text, StringsKt, true, windowedSequence, '(CharSequence, int, int, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, startsWith$default, '(String, String, boolean,
      int, Object)', '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, indexOf$default, '(CharSequence, String, int, boolean,
      int, Object)', '', 'Argument[0]', create-file, manual]
  - [kotlin.text, StringsKt, true, substring, '(String, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [org.webjars, WebJarAssetLocator, true, getFullPath, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [kotlin.text, StringsKt, true, last, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [kotlin.text, StringsKt, true, removePrefix, '(String, CharSequence)', '', 'Argument[0]',
    create-file, manual]
  - [io.ktor.server.webjars, Webjars, true, extractWebJar, (String), '', 'Argument[0]',
    create-file, manual]
  - [io.ktor.http, FileContentTypeKt, true, defaultForFilePath, '(Companion, String)',
    '', 'Argument[1]', create-file, manual]
  - [org.apache.bcel.util, MemorySensitiveClassPathRepository, true, loadClass, '(InputStream,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.lang, ClassLoader, true, getResourceAsStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [org.apache.bcel.util, ClassPathRepository, true, loadClass, '(InputStream, String)',
    '', 'Argument[0]', create-file, manual]
  - [org.apache.bcel.util, ClassPath, true, getInputStream, '(String, String)', '',
    'Argument[0]', create-file, manual]
  - [org.apache.http.client.methods, HttpRequestBase, true, setURI, (URI), '', 'Argument[0]',
    open-url, manual]
  - [java.net, URI, true, create, (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.http, HttpHost, true, HttpHost, '(String, int, String)', '', 'Argument[0]',
    open-url, manual]
  - [java.util, Set<URI>, true, contains, (Object), '', 'Argument[0]', open-url, manual]
  - [java.util, Set<URI>, true, add, (URI), '', 'Argument[0]', open-url, manual]
  - [java.net, URI, true, URI, (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.http.client.utils, URIUtils, true, resolve, '(URI, URI)', '', 'Argument[1]',
    open-url, manual]
  - [org.apache.http.client.utils, URIUtils, true, rewriteURI, '(URI, HttpHost, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.http.impl.client, RedirectLocations, true, contains, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http.conn.routing, HttpRoute, true, HttpRoute, '(HttpHost, InetAddress,
      HttpHost, boolean)', '', 'Argument[0]', open-url, manual]
  - [org.apache.http.impl.client, RedirectLocations, true, add, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.http, HttpException, true, HttpException, '(String, Throwable)', '',
    'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, ProcessorTemplateElem, true, endElement, '(StylesheetHandler,
      String, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementProcessor, true, endElement, '(StylesheetHandler,
      String, String, String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, ProcessorTemplateElem, true, startElement, '(StylesheetHandler,
      String, String, String, Attributes)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementProcessor, true, startElement, '(StylesheetHandler,
      String, String, String, Attributes)', '', 'Argument[1]', open-url, manual]
  - [org.apache.http.message, BasicNameValuePair, true, BasicNameValuePair, '(String,
      String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, ProcessorInclude, true, parse, '(StylesheetHandler,
      String, String, String, Attributes)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.templates, ElemLiteralResult, true, containsExtensionElementURI,
    (String), '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.templates, Stylesheet, true, containsExtensionElementURI, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.templates, ElemLiteralResult, true, setNamespace, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.apache.http.client.methods, HttpGet, true, HttpGet, (URI), '', 'Argument[0]',
    open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, equalsMayBeNullOrZeroLen, '(String,
      String)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, equalsMayBeNullOrZeroLen, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, QNameEquals, '(String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, getProcessorFor, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xalan.processor, XSLTElementDef, true, getProcessorForUnknown, '(String,
      String)', '', 'Argument[0]', open-url, manual]
  - [org.xml.sax, ContentHandler, true, startPrefixMapping, '(String, String)', '',
    'Argument[1]', open-url, manual]
  - [org.xml.sax, ContentHandler, true, startElement, '(String, String, String, Attributes)',
    '', 'Argument[0]', open-url, manual]
  - [org.xml.sax, ContentHandler, true, endElement, '(String, String, String)', '',
    'Argument[0]', open-url, manual]
  - [java.util, Vector<>, true, addElement, (Object), '', 'Argument[0]', open-url,
    manual]
  - [org.apache.xalan.processor, StylesheetHandler, true, getProcessorFor, '(String,
      String, String)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xml.serializer, ToXMLSAXHandler, true, startPrefixMapping, '(String,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, NamespaceMappings, true, pushNamespace, '(String,
      String, int)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, SerializerBase, true, addAttributeAlways, '(String,
      String, String, String, String, boolean)', '', 'Argument[4]', open-url, manual]
  - [org.apache.xml.serializer, ToUnknownStream, true, startPrefixMapping, '(String,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, ExtendedContentHandler, true, startPrefixMapping,
    '(String, String, boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xalan.transformer, SerializerSwitcher, true, switchSerializerIfHTML,
    '(String, String, Properties, Serializer)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xml.serializer, MappingRecord, true, MappingRecord, '(String, String,
      int)', '', 'Argument[1]', open-url, manual]
  - [java.util, Vector<>, true, indexOf, '(Object, int)', '', 'Argument[0]', open-url,
    manual]
  - [org.apache.xml.dtm.ref, ExpandedNameTable, true, getExpandedTypeID, '(String,
      String, int)', '', 'Argument[0]', open-url, manual]
  - [org.apache.xml.dtm.ref.sax2dtm, SAX2DTM, true, getPrefix, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, ToStream, true, startPrefixMapping, '(String, String,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [org.apache.xml.serializer, ToStream, true, addAttributeAlways, '(String, String,
      String, String, String, boolean)', '', 'Argument[4]', open-url, manual]
  - [org.conscrypt, Platform, true, createFileDescriptorSocket, '(Socket, String,
      int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [org.conscrypt, Java8EngineSocket, true, Java8EngineSocket, '(Socket, String,
      int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [org.conscrypt, ConscryptEngineSocket, true, ConscryptEngineSocket, '(Socket,
      String, int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [org.conscrypt, Java8FileDescriptorSocket, true, Java8FileDescriptorSocket, '(Socket,
      String, int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [com.android.org.conscrypt, Platform, true, createFileDescriptorSocket, '(Socket,
      String, int, boolean, SSLParametersImpl)', '', 'Argument[1]', open-url, manual]
  - [java.io, PrintStream, true, println, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, File, (String), '', 'Argument[0]', create-file, manual]
  - [android.text, TextUtils, true, isEmpty, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [com.bumptech.glide.load.data, FileService, true, get, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.bumptech.glide.load.data, FileService, true, exists, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.net, Uri, true, fromFile, (File), '', 'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, openInputStream, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [java.lang, IllegalStateException, true, IllegalStateException, (String), '',
    'Argument[0]', create-file, manual]
  - [android.content, UriMatcher, true, match, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.github.javaparser.utils, Utils, true, assertNotNull, (T), '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentValues, true, put, '(String, String)', '', 'Argument[1]',
    sql, manual]
  - [com.github.javaparser, JavaParser, true, parse, (File), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser, Providers, true, provider, '(File, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.ast, CompilationUnit, true, setStorage, '(Path, Charset)',
    '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser.ast, Storage, true, Storage, '(CompilationUnit, Path, Charset)',
    '', 'Argument[1]', create-file, manual]
  - [com.github.javaparser, StaticJavaParser, true, parse, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, CodeGenerationUtils, true, packageToPath, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Paths, true, get, '(String, String[])', '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Paths, true, get, '(String, String[])', '', 'Argument[1]', create-file,
    manual]
  - [java.nio.file, PathMatcher, true, matches, (Path), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, CollectionStrategy, true, getRoot, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, isHidden, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Files, true, isSameFile, '(Path, Path)', '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, ProjectRoot, true, addSourceRoot, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, isDirectory, '(Path, LinkOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.lang, IllegalArgumentException, true, IllegalArgumentException, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser.utils, CodeGenerationUtils, true, fileInPackageRelativePath,
    '(String, String)', '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Path, true, resolve, (Path), '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser, Providers, true, provider, '(Path, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [java.util, 'Map<Path,ParseResult<CompilationUnit>>', true, containsKey, (Object),
    '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<Path,ParseResult<CompilationUnit>>', true, get, (Object), '',
    'Argument[0]', create-file, manual]
  - [java.util, 'Map<Path,SourceRoot>', true, put, '(Path, SourceRoot)', '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, SourceRoot, (Path), '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, tryToParse, '(String, String,
      ParserConfiguration)', '', 'Argument[1]', create-file, manual]
  - [java.util, Properties, true, load, (InputStream), '', 'Argument[0]', open-url,
    manual]
  - [java.nio.file, Path, true, relativize, (Path), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, SourceRoot, true, tryToParse, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, isSensibleDirectoryToEnter, (Path),
    '', 'Argument[0]', create-file, manual]
  - [java.util.regex, Pattern, true, matcher, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [com.github.javaparser.utils, SourceRoot, true, tryToParse, '(String, String,
      ParserConfiguration)', '', 'Argument[0]', create-file, manual]
  - [com.github.javaparser, Providers, true, provider, (Path), '', 'Argument[0]',
    create-file, manual]
  - [com.github.javaparser.utils, SourceRoot, true, callback, '(Path, ParserConfiguration,
      Callback)', '', 'Argument[0]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, Data, true, createChild, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.clearsilver.jsilver.data, Data, true, getChild, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.clearsilver.jsilver.data, Data, true, setSymlink, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, DelegatedData, true, getChild, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, ChainedData, true, getChild, (String), '',
    'Argument[0]', create-file, manual]
  - [com.github.javaparser.utils, ParallelParse, true, ParallelParse, '(Path, VisitFileCallback)',
    '', 'Argument[0]', create-file, manual]
  - [com.google.clearsilver.jsilver.data, NestedMapData, true, createChild, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.io, BufferedInputStream, true, BufferedInputStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [com.github.javaparser.utils, VisitFileCallback, true, process, '(Path, BasicFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [java.io, LineNumberReader, true, LineNumberReader, (Reader), '', 'Argument[0]',
    create-file, manual]
  - [java.io, DataInputStream, true, DataInputStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [java.lang, Class<MetadataManager>, true, getResourceAsStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.google.i18n.phonenumbers, MetadataManager, true, getMetadataFromSingleFileName,
    '(String, MetadataLoader)', '', 'Argument[0]', create-file, manual]
  - [com.google.i18n.phonenumbers, MetadataLoader, true, loadMetadata, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.i18n.phonenumbers, MetadataManager, true, getMetadataFromSingleFileName,
    '(String, MetadataLoader)', '', 'Argument[0]', create-file, manual]
  - [com.android.i18n.phonenumbers, MetadataLoader, true, loadMetadata, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.lang, String, true, split, (String), '', 'Argument[0]', sql, manual]
  - [gov.nist.javax.sip.stack, HopImpl, true, HopImpl, '(String, int, String)', '',
    'Argument[0]', open-url, manual]
  - [com.android.okhttp, OkUrlFactory, true, open, '(URL, Proxy)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.okhttp, OkUrlFactory, true, open, (URL), '', 'Argument[0]', open-url,
    manual]
  - [com.android.okhttp.internalandroidapi, HttpURLConnectionFactory, true, internalOpenConnection,
    '(URL, SocketFactory, Proxy)', '', 'Argument[0]', open-url, manual]
  - [com.android.okhttp, OkUrlFactories, true, open, '(OkUrlFactory, URL, Proxy)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.okhttp.internal.huc, HttpURLConnectionImpl, true, HttpURLConnectionImpl,
    '(URL, OkHttpClient, URLFilter)', '', 'Argument[0]', open-url, manual]
  - [com.android.okhttp.internal.huc, HttpsURLConnectionImpl, true, HttpsURLConnectionImpl,
    '(URL, OkHttpClient, URLFilter)', '', 'Argument[0]', open-url, manual]
  - [java.net, HttpURLConnection, true, HttpURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.okhttp.internal.huc, HttpURLConnectionImpl, true, HttpURLConnectionImpl,
    '(URL, OkHttpClient)', '', 'Argument[0]', open-url, manual]
  - [org.ccil.cowan.tagsoup, XMLWriter, true, writeName, '(String, String, String,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, XMLFilterImpl, true, startElement, '(String, String, String,
      Attributes)', '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, XMLFilterImpl, true, endElement, '(String, String, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, NamespaceSupport, true, getPrefix, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.util, Hashtable<>, true, get, (Object), '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, NamespaceSupport, true, declarePrefix, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [java.util, Hashtable<>, true, put, '(Object, Object)', '', 'Argument[0]', open-url,
    manual]
  - [org.ccil.cowan.tagsoup, XMLWriter, true, doPrefix, '(String, String, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [com.google.turbine.diag, SourceFile, true, SourceFile, '(String, String)', '',
    'Argument[1]', create-file, manual]
  - [org.apache.http.params, HttpConnectionParams, true, setConnectionTimeout, '(HttpParams,
      int)', '', 'Argument[0]', open-url, manual]
  - [java.nio.file, Files, true, newBufferedReader, '(Path, Charset)', '', 'Argument[0]',
    create-file, manual]
  - [android.util, 'ArrayMap<String,File>', true, put, '(String, File)', '', 'Argument[1]',
    create-file, manual]
  - [android.app, ContextImpl, true, getSharedPreferences, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.util, 'ArrayMap<File,SharedPreferencesImpl>', true, get, (Object), '',
    'Argument[0]', create-file, manual]
  - [android.app, SharedPreferencesImpl, true, SharedPreferencesImpl, '(File, int)',
    '', 'Argument[0]', create-file, manual]
  - [android.util, 'ArrayMap<File,SharedPreferencesImpl>', true, put, '(File, SharedPreferencesImpl)',
    '', 'Argument[0]', create-file, manual]
  - [android.app, ContextImpl, true, makeFilename, '(File, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.app, SharedPreferencesImpl, true, makeBackupFile, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.app, ContextImpl, true, resolveUserId, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Intent, true, Intent, '(String, Uri)', '', 'Argument[1]', open-url,
    manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[3]', sql, manual]
  - [java.io, File, true, File, '(File, String)', '', 'Argument[1]', create-file,
    manual]
  - [java.util, Objects, true, requireNonNull, (T), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, query, '(Uri, String[], String,
      String[], String, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, query, '(Uri, String[], Bundle,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [java.util, Objects, true, requireNonNull, '(T, String)', '', 'Argument[0]', open-url,
    manual]
  - [android.content, IContentProvider, true, query, '(String, String, Uri, String[],
      Bundle, ICancellationSignal)', '', 'Argument[2]', open-url, manual]
  - [android.content, IContentProvider, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Transport, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, Logger, true, Logger, '(String, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [android.content, ContentInterface, true, query, '(Uri, String[], Bundle, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, delete, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentInterface, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentInterface, true, getStreamTypes, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, canonicalize, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.content, IContentProvider, true, delete, '(String, String, Uri, Bundle)',
    '', 'Argument[2]', open-url, manual]
  - [android.content, IContentProvider, true, getTypeAsync, '(Uri, RemoteCallback)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderClient, true, openAssetFile, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, IContentProvider, true, openAssetFile, '(String, String, Uri,
      String, ICancellationSignal)', '', 'Argument[2]', open-url, manual]
  - [android.content, ContentInterface, true, delete, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentInterface, true, update, '(Uri, ContentValues, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, openFile, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, openAssetFile, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, openTypedAssetFile, '(Uri, String, Bundle,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, IContentProvider, true, getStreamTypes, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], Bundle, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentInterface, true, call, '(String, String, String, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProviderResult, true, ContentProviderResult, (Uri), '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, maybeLogQueryToEventLog, '(long, Uri,
      String[], Bundle)', '', 'Argument[1]', open-url, manual]
  - [android.content, Transport, true, canonicalize, '(String, String, Uri)', '',
    'Argument[2]', open-url, manual]
  - [android.content, IContentProvider, true, canonicalizeAsync, '(String, String,
      Uri, RemoteCallback)', '', 'Argument[2]', open-url, manual]
  - [android.content, Context, true, grantUriPermission, '(String, Uri, int)', '',
    'Argument[1]', open-url, manual]
  - [java.io, FileInputStream, true, FileInputStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentResolver, true, openAssetFileDescriptor, '(Uri, String,
      CancellationSignal)', '', 'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, openOutputStream, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, openAssetFileDescriptor, '(Uri, String,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, openFileDescriptor, '(Uri, String, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.os, ParcelFileDescriptor, true, open, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentResolver, true, openTypedAssetFileDescriptor, '(Uri,
      String, Bundle, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [android.os, PatternMatcher, true, PatternMatcher, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.content, IContentProvider, true, openTypedAssetFile, '(String, String,
      Uri, String, Bundle, ICancellationSignal)', '', 'Argument[2]', open-url, manual]
  - [android.content, PipeDataWriter<T>, true, writeDataToPipe, '(ParcelFileDescriptor,
      Uri, String, Bundle, T)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, delete, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentResolver, true, maybeLogUpdateToEventLog, '(long, Uri,
      String, String)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, update, '(Uri, ContentValues, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, IContentProvider, true, update, '(String, String, Uri, ContentValues,
      Bundle)', '', 'Argument[2]', open-url, manual]
  - [android.database.sqlite, SQLiteQuery, true, SQLiteQuery, '(SQLiteDatabase, String,
      CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteProgram, true, bindAllArgsAsStrings, '(String[])',
    '', 'Argument[0]', sql, manual]
  - [android.database, DatabaseUtils, true, getSqlStatementType, (String), '', 'Argument[0]',
    sql, manual]
  - [android.database.sqlite, SQLiteSession, true, prepare, '(String, int, CancellationSignal,
      SQLiteStatementInfo)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteProgram, true, SQLiteProgram, '(SQLiteDatabase,
      String, Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteSession, true, executeForChangedRowCount, '(String,
      Object[], int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.content, ContentResolver, true, notifyChange, '(Uri, ContentObserver,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, notifyChange, '(Uri, ContentObserver,
      int)', '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteTokenizer, true, peek, '(String, int)', '', 'Argument[0]',
    sql, manual]
  - [android.database.sqlite, SQLiteTokenizer, true, genException, '(String, String)',
    '', 'Argument[1]', sql, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, appendClause, '(StringBuilder,
      String, String)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String, String, CancellationSignal)', '',
    'Argument[3]', sql, manual]
  - [android.database.sqlite, SQLiteSession, true, acquireConnection, '(String, int,
      CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, validateSql, '(String, CancellationSignal)',
    '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, prepare, '(String, SQLiteStatementInfo)',
    '', 'Argument[0]', sql, manual]
  - [java.util, Arrays, true, toString, '(Object[])', '', 'Argument[0]', sql, manual]
  - [android.util, Log, true, d, '(String, String)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, rawQueryWithFactory, '(CursorFactory,
      String, String[], String, CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, rawQueryWithFactory, '(CursorFactory,
      String, String[], String, CancellationSignal)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForString, '(String,
      Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteSession, true, executeSpecial, '(String, Object[],
      int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForChangedRowCount, '(String,
      Object[], CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForChangedRowCount, '(String,
      Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, executeForLastInsertedRowId,
    '(String, Object[], CancellationSignal)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, acquireConnection, '(String,
      int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, waitForConnection, '(String,
      int, CancellationSignal)', '', 'Argument[0]', sql, manual]
  - [android.util, 'LruCache<String,PreparedStatement>', true, get, (String), '',
    'Argument[0]', sql, manual]
  - [android.database.sqlite, OperationLog, true, beginOperation, '(String, String,
      Object[])', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, acquirePreparedStatement, (String),
    '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, queryWithFactory, '(CursorFactory,
      boolean, String, String[], String, String[], String, String, String, String,
      CancellationSignal)', '', 'Argument[5]', sql, manual]
  - [android.content, Intent, true, setData, (Uri), '', 'Argument[0]', open-url, manual]
  - [android.net, Uri, true, parse, (String), '', 'Argument[0]', open-url, manual]
  - [java.net, URISyntaxException, true, URISyntaxException, '(String, String)', '',
    'Argument[0]', open-url, manual]
  - [android.content, Intent, true, getIntentOld, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, buildQueryString, '(boolean,
      String, String[], String, String, String, String, String)', '', 'Argument[2]',
    sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, buildQueryString, '(boolean,
      String, String[], String, String, String, String, String)', '', 'Argument[3]',
    sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, tryAcquireNonPrimaryConnectionLocked,
    '(String, int)', '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteConnectionPool, true, obtainConnectionWaiterLocked,
    '(Thread, long, int, boolean, String, int)', '', 'Argument[4]', sql, manual]
  - [android.database, DatabaseUtils, true, stringForQuery, '(SQLiteStatement, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDirectCursorDriver, true, SQLiteDirectCursorDriver,
    '(SQLiteDatabase, String, String, CancellationSignal)', '', 'Argument[1]', sql,
    manual]
  - [android.database.sqlite, SQLiteCursorDriver, true, query, '(CursorFactory, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, nativePrepareStatement, '(long,
      String)', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteConnection, true, obtainPreparedStatement, '(String,
      long, int, int, boolean)', '', 'Argument[0]', sql, manual]
  - [android.util, 'LruCache<String,PreparedStatement>', true, put, '(String, PreparedStatement)',
    '', 'Argument[0]', sql, manual]
  - [android.database.sqlite, SQLiteStatement, true, SQLiteStatement, '(SQLiteDatabase,
      String, Object[])', '', 'Argument[2]', sql, manual]
  - [java.net, URISyntaxException, true, URISyntaxException, '(String, String, int)',
    '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteStatement, true, SQLiteStatement, '(SQLiteDatabase,
      String, Object[])', '', 'Argument[1]', sql, manual]
  - [android.text, TextUtils, true, isEmpty, (CharSequence), '', 'Argument[0]', sql,
    manual]
  - [android.database.sqlite, SQLiteDatabase, true, updateWithOnConflict, '(String,
      ContentValues, String, String[], int)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, updateWithOnConflict, '(String,
      ContentValues, String, String[], int)', '', 'Argument[3]', sql, manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [android.database.sqlite, SQLiteConnection, true, isPreparedStatementInCache,
    (String), '', 'Argument[0]', sql, manual]
  - [android.content.pm, PackageParserException, true, PackageParserException, '(int,
      String)', '', 'Argument[1]', create-file, manual]
  - [android.net, CaptivePortalData, true, CaptivePortalData, '(long, Uri, Uri, boolean,
      long, long, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.net, CaptivePortalData, true, CaptivePortalData, '(long, Uri, Uri, boolean,
      long, long, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.okhttp.internalandroidapi, HttpURLConnectionFactory, true, openConnection,
    '(URL, SocketFactory, Proxy)', '', 'Argument[0]', open-url, manual]
  - [javax.net.ssl, SSLSocketFactory, true, createSocket, '(Socket, String, int, boolean)',
    '', 'Argument[1]', open-url, manual]
  - [android.net, StringUri, true, StringUri, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.net, PathPart, true, fromDecoded, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.net, PathPart, true, fromEncoded, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.net, StringUri, true, parsePath, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [android.net, Builder, true, path, (PathPart), '', 'Argument[0]', create-file,
    manual]
  - [android.os, FileObserver, true, FileObserver, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.util, Arrays, true, asList, '(T[])', '', 'Argument[0]', create-file, manual]
  - [java.lang, StringBuilder, true, append, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.lang, StringBuilder, true, append, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.os, ParcelFileDescriptor, true, openInternal, '(File, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.system, Os, true, open, '(String, int, int)', '', 'Argument[0]', create-file,
    manual]
  - [android.net, Builder, true, fragment, (Part), '', 'Argument[0]', open-url, manual]
  - [android.net, Builder, true, authority, (Part), '', 'Argument[0]', open-url, manual]
  - [android.os.incremental, IIncrementalService, true, makeDirectory, '(int, String)',
    '', 'Argument[1]', create-file, manual]
  - [android.os.incremental, IncrementalStorage, true, makeDirectory, (String), '',
    'Argument[0]', create-file, manual]
  - [android.os.incremental, IIncrementalService, true, makeLink, '(int, String, int,
      String)', '', 'Argument[1]', create-file, manual]
  - [android.os.incremental, IIncrementalService, true, makeLink, '(int, String, int,
      String)', '', 'Argument[3]', create-file, manual]
  - [android.os.incremental, IncrementalStorage, true, makeLink, '(String, IncrementalStorage,
      String)', '', 'Argument[0]', create-file, manual]
  - [android.os.incremental, IncrementalStorage, true, makeLink, '(String, IncrementalStorage,
      String)', '', 'Argument[2]', create-file, manual]
  - [android.net, Uri, true, encode, (String), '', 'Argument[0]', create-file, manual]
  - [android.net, Builder, true, appendEncodedPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.preference, RingtonePreference, true, onSaveRingtone, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.net, Builder, true, authority, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentUris, true, withAppendedId, '(Uri, long)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, isRootUri, '(Context, Uri, int)',
    '', 'Argument[1]', open-url, manual]
  - [java.util, LinkedList<String>, true, LinkedList<String>, '(Collection<? extends
      String>)', '', 'Argument[0]', create-file, manual]
  - [android.provider, Path, true, Path, '(String, List<String>)', '', 'Argument[1]',
    create-file, manual]
  - [android.os.storage, StorageManager, true, getStorageVolume, '(StorageVolume[],
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.internal.util, Preconditions, true, checkCollectionNotEmpty, '(Collection<T>,
      String)', '', 'Argument[0]', create-file, manual]
  - [com.android.internal.util, Preconditions, true, checkCollectionElementsNotNull,
    '(C, String)', '', 'Argument[0]', create-file, manual]
  - [android.database.sqlite, SqliteWrapper, true, query, '(Context, ContentResolver,
      Uri, String[], String, String[], String)', '', 'Argument[2]', open-url, manual]
  - [android.net, Builder, true, appendQueryParameter, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [android.text.util, Linkify, true, applyLink, '(String, int, int, Spannable, Function<String,URLSpan>)',
    '', 'Argument[0]', open-url, manual]
  - [java.util.function, 'Function<String,URLSpan>', true, apply, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.text.util, TransformFilter, true, transformUrl, '(Matcher, String)',
    '', 'Argument[1]', open-url, manual]
  - [java.lang, String, true, indexOf, (String), '', 'Argument[0]', open-url, manual]
  - [java.net, URLEncoder, true, encode, '(String, String)', '', 'Argument[0]', open-url,
    manual]
  - [android.text, TextUtils, true, isEmpty, (CharSequence), '', 'Argument[0]', open-url,
    manual]
  - [java.util.regex, Pattern, true, matches, '(String, CharSequence)', '', 'Argument[1]',
    create-file, manual]
  - [android.webkit, URLUtil, true, isHttpUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isHttpsUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isAssetUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isFileUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isAboutUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isJavaScriptUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.webkit, URLUtil, true, isContentUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.net, Uri, true, decode, (String), '', 'Argument[0]', open-url, manual]
  - [android.webkit, WebViewProvider, true, loadUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.widget, ImageView, true, setImageURI, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.text, SpannableString, true, SpannableString, (CharSequence), '', 'Argument[0]',
    open-url, manual]
  - [android.graphics.drawable, Drawable, true, createFromPath, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.widget, SuggestionsAdapter, true, getDrawable, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'WeakHashMap<String,ConstantState>', true, get, (Object), '', 'Argument[0]',
    open-url, manual]
  - [android.widget, VideoView, true, setVideoURI, '(Uri, Map<String,String>)', '',
    'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(Context, Uri, Map<String,String>)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, loadThumbnail, '(Uri, Size)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, LoadUriTask, true, LoadUriTask, '(int, Uri, int, Bitmap)',
    '', 'Argument[1]', open-url, manual]
  - [android.widget, SearchView, true, createIntent, '(String, Uri, String, String,
      int, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.internal.content, FileSystemProvider, true, getFileForDocId, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystem, true, getPath, '(String, String[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, walkFileTree, '(Path, FileVisitor<? super Path>)',
    '', 'Argument[0]', create-file, manual]
  - [java.io, FileNotFoundException, true, FileNotFoundException, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.util, LinkedList<String>, true, addFirst, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.android.internal.content, FileSystemProvider, true, moveInMediaStore, '(File,
      File)', '', 'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, moveInMediaStore, '(File,
      File)', '', 'Argument[1]', create-file, manual]
  - [java.io, File, true, File, '(File, String)', '', 'Argument[0]', create-file,
    manual]
  - [android.content, Intent, true, parseUri, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.io, File, true, renameTo, (File), '', 'Argument[0]', create-file, manual]
  - [android.provider, MediaStore, true, scanFile, '(ContentResolver, File)', '',
    'Argument[1]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, removeFromMediaStore,
    (File), '', 'Argument[0]', create-file, manual]
  - [com.android.internal.content, DirectoryCursor, true, DirectoryCursor, '(String[],
      String, File)', '', 'Argument[2]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, getDocumentType, '(String,
      File)', '', 'Argument[1]', create-file, manual]
  - [android.os, ParcelFileDescriptor, true, open, '(File, int, Handler, OnCloseListener)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, scanFile, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, getDocIdForFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [android.util, 'ArrayMap<File,DirectoryObserver>', true, get, (Object), '', 'Argument[0]',
    create-file, manual]
  - [com.android.internal.content, DirectoryObserver, true, DirectoryObserver, '(File,
      ContentResolver, Uri)', '', 'Argument[0]', create-file, manual]
  - [android.util, 'ArrayMap<File,DirectoryObserver>', true, put, '(File, DirectoryObserver)',
    '', 'Argument[0]', create-file, manual]
  - [android.os, FileObserver, true, FileObserver, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.internal.app, ContentPreviewCoordinator, true, loadUriIntoView, '(int,
      Uri, int)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, getType, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [java.util, List<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, queryResolver, '(ContentResolver,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, logContentPreviewWarning, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, FileInfo, true, FileInfo, '(String, boolean)', '',
    'Argument[0]', create-file, manual]
  - [com.android.internal.app, ChooserActivity, true, loadFileUriIntoView, '(Uri,
      View)', '', 'Argument[0]', open-url, manual]
  - [com.android.internal.app, ChooserActivity, true, extractFileInfo, '(Uri, ContentResolver)',
    '', 'Argument[0]', open-url, manual]
  - [android.widget, TextView, true, setText, (CharSequence), '', 'Argument[0]', create-file,
    manual]
  - [com.android.internal.app, ChooserActivity, true, findPreferredContentPreview,
    '(Uri, ContentResolver)', '', 'Argument[0]', open-url, manual]
  - [android.graphics, BitmapFactory, true, decodeFile, '(String, Options)', '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _getConstraints, '(int, String, int)', '',
    'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, _getMetadata, '(int, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, getConstraints, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, getMetadata, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _canHandle, '(int, String, String)', '',
    'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, canHandle, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _getDrmObjectType, '(int, String, String)',
    '', 'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, getDrmObjectType, '(String, String)', '',
    'Argument[0]', create-file, manual]
  - [java.io, FileInputStream, true, FileInputStream, (File), '', 'Argument[0]', create-file,
    manual]
  - [android.drm, DrmManagerClient, true, _getOriginalMimeType, '(int, String, FileDescriptor)',
    '', 'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, getOriginalMimeType, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, checkRightsStatus, '(String, int)', '',
    'Argument[0]', create-file, manual]
  - [android.drm, DrmManagerClient, true, checkRightsStatus, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, _checkRightsStatus, '(int, String, int)',
    '', 'Argument[1]', create-file, manual]
  - [android.drm, DrmManagerClient, true, _removeRights, '(int, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.drm, DrmManagerClient, true, removeRights, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.content, ContentResolver, true, loadThumbnail, '(Uri, Size, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [android.graphics, FileSource, true, FileSource, (File), '', 'Argument[0]', create-file,
    manual]
  - [android.media, MediaHTTPService, true, createHttpServiceBinderIfNecessary, '(String,
      List<HttpCookie>)', '', 'Argument[0]', create-file, manual]
  - [android.net, Uri, true, parse, (String), '', 'Argument[0]', create-file, manual]
  - [android.media, MediaMetadataRetriever, true, setDataSource, '(String, Map<String,String>)',
    '', 'Argument[0]', create-file, manual]
  - [android.media, MediaMetadataRetriever, true, _setDataSource, '(IBinder, String,
      String[], String[])', '', 'Argument[1]', open-url, manual]
  - [android.media, MediaHTTPService, true, createHttpServiceBinderIfNecessary, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.util, ArrayUtils, true, defeatNullable, '(File[])', '',
    'Argument[0]', create-file, manual]
  - [android.media, RingtoneManager, true, getDefaultType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(String, Map<String,String>,
      List<HttpCookie>)', '', 'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, attemptDataSource, '(ContentResolver, Uri)',
    '', 'Argument[1]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(Context, Uri, Map<String,String>,
      List<HttpCookie>)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentResolver, true, openAssetFileDescriptor, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(String, Map<String,String>,
      List<HttpCookie>)', '', 'Argument[0]', create-file, manual]
  - [android.media, MediaFile, true, getFileExtension, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, MediaFile, true, getFormatCodeForFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, MediaFile, true, getMimeTypeForFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, MediaPlayer, true, setDataSource, '(String, String[], String[],
      List<HttpCookie>)', '', 'Argument[0]', create-file, manual]
  - [android.media, MediaPlayer, true, nativeSetDataSource, '(IBinder, String, String[],
      String[])', '', 'Argument[1]', create-file, manual]
  - [android.media, MediaMetadataRetriever, true, setDataSource, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.os, Environment, true, getExternalStorageState, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.graphics, ImageDecoder, true, createSource, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.media, ExifInterface, true, ExifInterface, (File), '', 'Argument[0]',
    create-file, manual]
  - [android.media, RingtoneManager, true, isRingtoneUriInStorage, '(Uri, Uri)', '',
    'Argument[0]', open-url, manual]
  - [android.media, ExifInterface, true, initForFilename, (String), '', 'Argument[0]',
    create-file, manual]
  - [android.media, IRingtonePlayer, true, openRingtone, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, Session, true, onTune, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.media.tv, Session, true, onTune, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, RecordingSession, true, onTune, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.media.tv, RecordingSession, true, onStartRecording, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, RecordingSession, true, onTune, '(Uri, Bundle)', '', 'Argument[0]',
    open-url, manual]
  - [android.media.tv, RecordingSession, true, onStartRecording, '(Uri, Bundle)',
    '', 'Argument[0]', open-url, manual]
  - [android.webkit, URLUtil, true, isNetworkUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.dynsystem, KeyRevocationList, true, readFully, (InputStream), '',
    'Argument[0]', open-url, manual]
  - [java.net, URL, true, URL, (String), '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, format, '(Locale, String, Object[])', '', 'Argument[2]',
    open-url, manual]
  - [com.android.hotspot2.osulogin, OsuLoginActivity, true, getHost, (String), '',
    'Argument[0]', open-url, manual]
  - [android.util, Log, true, d, '(String, String)', '', 'Argument[1]', open-url,
    manual]
  - [android.webkit, WebView, true, loadUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.packageinstaller.wear, WearPackageIconProvider, true, enforcePermissions,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.packageinstaller.wear, WearPackageIconProvider, true, getType, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.packageinstaller.wear, WearPackageIconProvider, true, getPackageNameFromUri,
    (Uri), '', 'Argument[0]', create-file, manual]
  - [com.android.dynsystem, InstallationAsyncTask, true, InstallationAsyncTask, '(String,
      String, String, long, long, Context, DynamicSystemManager, ProgressListener)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getDocIdForFileMaybeCreate,
    '(File, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getMostSpecificRootForPath,
    '(String, boolean)', '', 'Argument[0]', create-file, manual]
  - [android.content, Context, true, checkUriPermission, '(Uri, int, int, int)', '',
    'Argument[0]', open-url, manual]
  - [libcore.io, Streams, true, readFully, (InputStream), '', 'Argument[0]', open-url,
    manual]
  - [android.util, Log, true, i, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.util, Log, true, e, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getRootFromDocId,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.dynsystem, VerificationActivity, true, isVerified, (String), '',
    'Argument[0]', open-url, manual]
  - [android.system, Os, true, access, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getDocIdForFile,
    (File), '', 'Argument[0]', create-file, manual]
  - [com.android.printspooler.ui, PrintActivity, true, transformDocumentAndFinish,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, openOutputStream, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [java.util, Set<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.externalstorage, ExternalStorageProvider, true, getDocumentUri, '(String,
      List<UriPermission>)', '', 'Argument[0]', create-file, manual]
  - [android.os, Bundle, true, putParcelable, '(String, Parcelable)', '', 'Argument[1]',
    open-url, manual]
  - [android.provider, DocumentsContract, true, getDocumentId, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.os, Bundle, true, putParcelable, '(String, Parcelable)', '', 'Argument[1]',
    create-file, manual]
  - [java.util, Set<Uri>, true, contains, (Object), '', 'Argument[0]', open-url, manual]
  - [java.util, Set<Uri>, true, remove, (Object), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, delete, '(Uri, String, String[])', '',
    'Argument[0]', open-url, manual]
  - [com.android.statementservice.retriever, URLFetcher, true, getWebContentFromUrl,
    '(URL, long, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.statementservice.retriever, WebAsset, true, WebAsset, (URL), '',
    'Argument[0]', open-url, manual]
  - [com.android.statementservice.retriever, URLFetcher, true, getWebContentFromUrlWithRetry,
    '(URL, long, int, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.settings, Arguments, true, Arguments, '(Uri, String, String[],
      boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.statementservice, IntentFilterVerificationReceiver, true, createWebAssetString,
    '(String, String)', '', 'Argument[1]', open-url, manual]
  - [java.util, ArrayList<String>, true, add, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.providers.settings, SettingsProvider, true, getValidTableOrThrow,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util.regex, Pattern, true, matcher, (CharSequence), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[1]', open-url,
    manual]
  - [android.util, Slog, true, v, '(String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.providers.settings, Arguments, true, computeTableForSetting, '(Uri,
      String)', '', 'Argument[0]', open-url, manual]
  - [android.view, AccessibilityDelegate, true, performAccessibilityAction, '(View,
      int, Bundle)', '', 'Argument[0]', open-url, manual]
  - [android.os, Handler, true, obtainMessage, '(int, int, int, Object)', '', 'Argument[3]',
    open-url, manual]
  - [android.content, Context, true, getString, '(int, Object[])', '', 'Argument[1]',
    open-url, manual]
  - [java.net, Socket, true, Socket, '(String, int)', '', 'Argument[0]', open-url,
    manual]
  - [android.sax, Handler, true, startRoot, '(String, String, Attributes)', '', 'Argument[0]',
    open-url, manual]
  - [android.sax, Children, true, get, '(String, String)', '', 'Argument[0]', open-url,
    manual]
  - [android.sax, Element, true, toString, '(String, String)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, getExifWriterStream, (String),
    '', 'Argument[0]', create-file, manual]
  - [java.io, FileOutputStream, true, FileOutputStream, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, RandomAccessFile, true, RandomAccessFile, '(File, String)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, rewriteExif, '(String, Collection<ExifTag>)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, writeExif, '(byte[], String)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, forceRewriteExif, '(String,
      Collection<ExifTag>)', '', 'Argument[0]', create-file, manual]
  - [java.util, 'Map<Integer,Object>', true, put, '(Integer, Object)', '', 'Argument[1]',
    create-file, manual]
  - [com.google.android.mms.util, PduCache, true, normalizeKey, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.google.android.mms.util, PduCache, true, setUpdating, '(Uri, boolean)', '',
    'Argument[0]', open-url, manual]
  - [java.util, HashSet<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, HashSet<Uri>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [com.google.android.mms.pdu, PduPart, true, setFilename, '(byte[])', '', 'Argument[0]',
    create-file, manual]
  - [com.google.android.mms.util, SqliteWrapper, true, query, '(Context, ContentResolver,
      Uri, String[], String, String[], String)', '', 'Argument[2]', open-url, manual]
  - [android.content, ContentUris, true, parseId, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.google.android.mms.util, PduCache, true, isUpdating, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.google.android.mms.util, 'AbstractCache<Uri,PduCacheEntry>', true, get, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.google.android.mms.util, PduCache, true, put, '(Uri, PduCacheEntry)', '',
    'Argument[0]', open-url, manual]
  - [java.lang, String, true, startsWith, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.telephony.mbms, MbmsUtils, true, isContainedIn, '(File, File)', '', 'Argument[1]',
    create-file, manual]
  - [android.net, Builder, true, encodedPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.telephony.mbms, MbmsDownloadReceiver, true, verifyTempFilePath, '(Context,
      String, Uri)', '', 'Argument[2]', create-file, manual]
  - [android.util, Log, true, w, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.telephony.mbms, MbmsDownloadReceiver, true, moveToFinalLocation, '(Uri,
      Path, String)', '', 'Argument[0]', create-file, manual]
  - [android.telephony.mbms, MbmsUtils, true, getEmbmsTempFileDirForService, '(Context,
      String)', '', 'Argument[1]', create-file, manual]
  - [android.test.mock, MockIContentProvider, true, getType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.test.mock, MockIContentProvider, true, canonicalize, '(String, String,
      Uri)', '', 'Argument[2]', open-url, manual]
  - [android.telephony.mbms, MbmsDownloadReceiver, true, generateSingleTempFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [android.telephony.mbms, MbmsTempFileProvider, true, getUriForFile, '(Context,
      String, File)', '', 'Argument[2]', create-file, manual]
  - [java.util, List<Uri>, true, contains, (Object), '', 'Argument[0]', create-file,
    manual]
  - [android.content, Context, true, getFileStreamPath, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, move, '(Path, Path, CopyOption[])', '', 'Argument[0]',
    create-file, manual]
  - [android.telephony.mbms, MbmsUtils, true, isContainedIn, '(File, File)', '', 'Argument[0]',
    create-file, manual]
  - [androidx.collection, 'LruCache<Uri,byte[]>', true, get, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String)', '', 'Argument[3]', sql, manual]
  - [com.android.ex.chips, DefaultPhotoManager, true, fetchPhotoAsync, '(RecipientEntry,
      Uri, PhotoManagerCallback)', '', 'Argument[1]', open-url, manual]
  - [com.android.ex.chips, RecipientEntry, true, RecipientEntry, '(int, String, String,
      int, String, long, Long, long, Uri, boolean, boolean, boolean, String, String[])',
    '', 'Argument[8]', open-url, manual]
  - [androidx.collection, 'LruCache<Uri,byte[]>', true, put, '(Uri, byte[])', '',
    'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,String>', true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<String,String>', true, get, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, Intent, true, putExtra, '(String, Parcelable)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.ex.photo, PhotoViewIntentBuilder, true, setThumbnailUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.ex.photo, PhotoViewIntentBuilder, true, setResolvedPhotoUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.internal.telephony, CarrierMatchingRule, true, CarrierMatchingRule,
    '(String, String, String, String, String, String, String, String, List<String>,
      int, String, int)', '', 'Argument[2]', sql, manual]
  - [android.os, BaseBundle, true, putString, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.lang, ClassLoader, true, getResource, (String), '', 'Argument[0]', open-url,
    manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [libcore.io, ClassPathURLConnection, true, ClassPathURLConnection, (URL), '',
    'Argument[0]', open-url, manual]
  - [java.net, JarURLConnection, true, JarURLConnection, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.org.kxml2.io, KXmlParser, true, setInput, '(InputStream, String)',
    '', 'Argument[0]', open-url, manual]
  - [org.xml.sax.helpers, Context, true, declarePrefix, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [org.xml.sax.helpers, Context, true, getPrefix, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.util, Hashtable<>, true, put, '(Object, Object)', '', 'Argument[1]', open-url,
    manual]
  - [libcore.io, IoBridge, true, open, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileOutputStream, true, FileOutputStream, '(File, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileSystem, true, normalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileSystem, true, prefixLength, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.ch, FileChannelImpl, true, open, '(FileDescriptor, String, boolean, boolean,
      Object)', '', 'Argument[1]', create-file, manual]
  - [java.io, FileSystem, true, resolve, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [java.io, FileSystem, true, resolve, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, File, '(String, int)', '', 'Argument[0]', create-file, manual]
  - [java.io, FileSystem, true, canonicalize, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, File, true, slashify, '(String, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [java.lang, String, true, String, '(char[], int, int)', '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkRead, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, SecurityManager, true, checkWrite, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, FileSystem, true, createFileExclusively, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, SecurityManager, true, checkDelete, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, resolve, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.io, UnixFileSystem, true, canonicalize0, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, ExpiringCache, true, get, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, parentOrNull, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, ExpiringCache, true, put, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [dalvik.system, VmPolicy, true, onPathAccess, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.io, UnixFileSystem, true, getBooleanAttributes0, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, ClassLoader, true, getBootstrapResource, (String), '', 'Argument[0]',
    open-url, manual]
  - [java.io, UnixFileSystem, true, createFileExclusively0, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.io, UnixFileSystem, true, createDirectory0, (File), '', 'Argument[0]', create-file,
    manual]
  - [java.util, ArrayList<File>, true, add, (File), '', 'Argument[0]', create-file,
    manual]
  - [java.io, IOException, true, IOException, '(String, Throwable)', '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileSystem, true, compare, '(File, File)', '', 'Argument[1]', create-file,
    manual]
  - [java.net, AddressCache, true, put, '(String, int, InetAddress[])', '', 'Argument[0]',
    open-url, manual]
  - [java.net, AddressCache, true, putUnknownHost, '(String, int, String)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLConnection, true, URLConnection, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, JarURLConnection, true, parseSpecs, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetAddressImpl, true, lookupAllHostAddr, '(String, int)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, InetAddress, true, getAllByName, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetSocketAddress, true, checkHost, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, InetSocketAddressHolder, true, InetSocketAddressHolder, '(String, InetAddress,
      int)', '', 'Argument[0]', open-url, manual]
  - [java.net, URL, true, URL, '(String, String, int, String, URLStreamHandler)',
    '', 'Argument[1]', open-url, manual]
  - [java.net, URL, true, URL, '(String, String, int, String, URLStreamHandler)',
    '', 'Argument[3]', create-file, manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[1]',
    open-url, manual]
  - [java.io, IOException, true, IOException, (String), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URL, true, URL, '(String, String, int, String)', '', 'Argument[3]',
    create-file, manual]
  - [java.net, Parts, true, Parts, '(String, String)', '', 'Argument[0]', create-file,
    manual]
  - [java.net, Parts, true, Parts, '(String, String)', '', 'Argument[1]', open-url,
    manual]
  - [java.net, URI, true, toString, '(String, String, String, String, String, int,
      String, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.net, URI, true, checkPath, '(String, String, String)', '', 'Argument[2]',
    create-file, manual]
  - [java.net, URI, true, URI, '(String, String, String, int, String, String, String)',
    '', 'Argument[4]', create-file, manual]
  - [java.net, URI, true, resolve, '(URI, URI)', '', 'Argument[1]', open-url, manual]
  - [sun.misc, URLClassPath, true, getResource, '(String, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, FileSystemException, true, FileSystemException, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [java.util.jar, Manifest, true, getAttributes, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, FileSystemException, true, FileSystemException, (String), '',
    'Argument[0]', create-file, manual]
  - [java.nio.file, FileSystem, true, getPath, '(String, String[])', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, newInputStream, '(Path, OpenOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, provider, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file.spi, FileSystemProvider, true, newByteChannel, '(Path, Set<? extends
      OpenOption>, FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.util, Objects, true, requireNonNull, (T), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, Event, true, Event, '(EventType, Path, BasicFileAttributes, IOException)',
    '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, readAttributes, '(Path, Class<A>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, newByteChannel, '(Path, Set<? extends OpenOption>,
      FileAttribute<?>[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, isSameFile, '(Path, Path)', '', 'Argument[1]', create-file,
    manual]
  - [java.nio.file.spi, FileSystemProvider, true, newDirectoryStream, '(Path, Filter<?
      super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.net, URI, true, appendSchemeSpecificPart, '(StringBuffer, String, String,
      String, String, int, String, String)', '', 'Argument[6]', create-file, manual]
  - [java.nio.file, FileTreeWalker, true, visit, '(Path, boolean, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Event, true, Event, '(EventType, Path, IOException)', '', 'Argument[1]',
    create-file, manual]
  - [java.nio.file, Files, true, newByteChannel, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, delete, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, isSameFile, '(Path, Path)', '',
    'Argument[0]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, isSameFile, '(Path, Path)', '',
    'Argument[1]', create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, isHidden, (Path), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file.spi, FileSystemProvider, true, readAttributes, '(Path, Class<A>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, FileTreeWalker, true, walk, (Path), '', 'Argument[0]', create-file,
    manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, visitFile, '(Path, BasicFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, visitFileFailed, '(Path, IOException)',
    '', 'Argument[0]', create-file, manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, preVisitDirectory, '(Path,
      BasicFileAttributes)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, 'FileVisitor<? super Path>', true, postVisitDirectory, '(Path,
      IOException)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, walkFileTree, '(Path, Set<FileVisitOption>, int,
      FileVisitor<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [java.nio.file, Files, true, newInputStream, '(Path, OpenOption[])', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, Files, true, lines, '(Path, Charset)', '', 'Argument[0]', create-file,
    manual]
  - [java.net, URL, true, URL, '(String, String, String)', '', 'Argument[2]', create-file,
    manual]
  - [sun.net.www, URLConnection, true, URLConnection, (URL), '', 'Argument[0]', open-url,
    manual]
  - [java.net, URLStreamHandler, true, sameFile, '(URL, URL)', '', 'Argument[0]',
    open-url, manual]
  - [java.net, URLStreamHandler, true, sameFile, '(URL, URL)', '', 'Argument[1]',
    open-url, manual]
  - [sun.nio.ch, FileChannelImpl, true, FileChannelImpl, '(FileDescriptor, String,
      boolean, boolean, boolean, Object)', '', 'Argument[1]', create-file, manual]
  - [java.util, 'HashMap<JarFile,URL>', true, remove, (Object), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, AbstractFileSystemProvider, true, implDelete, '(Path, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileSystemProvider, true, readAttributes, '(Path, Class<A>, LinkOption[])',
    '', 'Argument[0]', create-file, manual]
  - [sun.net.ftp, FtpDirEntry, true, FtpDirEntry, (String), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixFileAttributes, true, get, '(UnixPath, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, UnixException, true, rethrowAsIOException, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, AccessDeniedException, true, AccessDeniedException, '(String,
      String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, open, '(int, UnixPath, String, Flags, int)',
    '', 'Argument[1]', create-file, manual]
  - [java.nio.file, NoSuchFileException, true, NoSuchFileException, '(String, String,
      String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, open, '(UnixPath, int, int)', '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, FileAlreadyExistsException, true, FileAlreadyExistsException,
    '(String, String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.ch, FileChannelImpl, true, open, '(FileDescriptor, String, boolean, boolean,
      boolean, Object)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, stat, '(UnixPath, UnixFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, lstat, '(UnixPath, UnixFileAttributes)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, newFileChannel, '(int, UnixPath, String,
      Set<? extends OpenOption>, int)', '', 'Argument[1]', create-file, manual]
  - [sun.nio.fs, UnixException, true, rethrowAsIOException, '(UnixPath, UnixPath)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createBasicView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createPosixView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixPath, true, encode, '(UnixFileSystem, String)', '', 'Argument[1]',
    create-file, manual]
  - [sun.nio.fs, UnixDirectoryStream, true, UnixDirectoryStream, '(UnixPath, long,
      Filter<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileAttributeViews, true, createOwnerView, '(UnixPath, boolean)',
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixFileSystemProvider, true, getFileAttributeView, '(Path, Class<V>,
      LinkOption[])', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, NativeBuffer, true, setOwner, (Object), '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, copyToNativeBuffer, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [sun.nio.fs, Basic, true, Basic, '(UnixPath, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [sun.net.www, ParseUtil, true, encodePath, '(String, boolean)', '', 'Argument[0]',
    open-url, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, unlink, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, AtomicMoveNotSupportedException, true, AtomicMoveNotSupportedException,
    '(String, String, String)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixChannelFactory, true, newFileChannel, '(UnixPath, Set<? extends
      OpenOption>, int)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, rmdir, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, DirectoryNotEmptyException, true, DirectoryNotEmptyException,
    (String), '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, move, '(UnixPath, UnixPath, CopyOption[])', '',
    'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixCopyFile, true, copyDirectory, '(UnixPath, UnixFileAttributes,
      UnixPath, Flags)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixNativeDispatcher, true, opendir, (UnixPath), '', 'Argument[0]',
    create-file, manual]
  - [java.nio.file, NotDirectoryException, true, NotDirectoryException, (String),
    '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, Posix, true, Posix, '(UnixPath, boolean)', '', 'Argument[0]', create-file,
    manual]
  - [sun.nio.fs, UnixSecureDirectoryStream, true, UnixSecureDirectoryStream, '(UnixPath,
      long, int, Filter<? super Path>)', '', 'Argument[0]', create-file, manual]
  - [sun.nio.fs, UnixPath, true, UnixPath, '(UnixFileSystem, String)', '', 'Argument[1]',
    create-file, manual]
  - [android.gsi, IGsiService, true, openInstall, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.util, Slog, true, i, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[8]',
    open-url, manual]
  - [android.media, SoundPool, true, load, '(String, int)', '', 'Argument[0]', create-file,
    manual]
  - [com.android.server.audio, SoundEffectsHelper, true, findOrAddResourceByFileName,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.server.audio, Resource, true, Resource, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[0]', open-url,
    manual]
  - [com.android.internal.util, FrameworkStatsLog, true, write, '(int, String, int,
      String, int, int, int, boolean, int, int, boolean, int, int, String)', '', 'Argument[3]',
    open-url, manual]
  - [android.util, Slog, true, w, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.content, Intent, true, setDataAndType, '(Uri, String)', '', 'Argument[0]',
    open-url, manual]
  - [android.content, Intent, true, setComponent, (ComponentName), '', 'Argument[0]',
    open-url, manual]
  - [java.io, PrintWriter, true, println, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.content, IContentProvider, true, checkUriPermission, '(String, String,
      Uri, int, int)', '', 'Argument[2]', open-url, manual]
  - [com.android.server.textclassifier, IconsUriHelper, true, getResourceInfo, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentProvider, true, openPipeHelper, '(Uri, String, Bundle,
      T, PipeDataWriter<T>)', '', 'Argument[0]', open-url, manual]
  - [com.android.server.uri, GrantUri, true, GrantUri, '(int, Uri, int)', '', 'Argument[1]',
    open-url, manual]
  - [android.os, PatternMatcher, true, match, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.content, IntentFilter, true, addDataPath, '(String, int)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.server.am, ActivityManagerService, true, checkContentProviderUriPermission,
    '(Uri, int, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.mapapi, BluetoothMapEmailProvider, true, getAccountId,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.avrcpcontroller, AvrcpCoverArtProvider, true, debug, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.google.android.mms.pdu, PduPersister, true, load, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppManager, true, saveSendingFileInfo, '(String,
      ArrayList<Uri>, boolean, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isForbiddenContent, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[3]',
    open-url, manual]
  - [android.util, Log, true, v, '(String, String)', '', 'Argument[1]', sql, manual]
  - [android.content, ContentValues, true, put, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [android.content, Intent, true, setDataAndNormalize, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, queryRecord, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, openReceivedFile, '(Context,
      String, String, Long, Uri)', '', 'Argument[1]', create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, openReceivedFile, '(Context,
      String, String, Long, Uri)', '', 'Argument[4]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, updateVisibilityToHidden,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentValues, true, put, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isInExternalStorageDir,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.util, EventLog, true, writeEvent, '(int, Object[])', '', 'Argument[3]',
    create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppSendFileInfo, true, BluetoothOppSendFileInfo,
    '(String, String, long, FileInputStream, int)', '', 'Argument[0]', create-file,
    manual]
  - [android.content, Intent, true, putExtra, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [java.util.regex, Matcher, true, appendReplacement, '(StringBuffer, String)',
    '', 'Argument[1]', open-url, manual]
  - [android.content, Context, true, getString, '(int, Object[])', '', 'Argument[1]',
    create-file, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String)', '', 'Argument[3]', sql, manual]
  - [android.net, Uri, true, parse, (String), '', 'Argument[0]', sql, manual]
  - [java.lang, StringBuilder, true, append, (Object), '', 'Argument[0]', open-url,
    manual]
  - [com.android.bluetooth.opp, BluetoothOppSendFileInfo, true, generateFileInfo,
    '(Context, Uri, String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppManager, true, saveSendingFileInfo, '(String,
      String, boolean, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.database, Cursor, true, setNotificationUri, '(ContentResolver, Uri)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, generateUri, '(Uri, BluetoothOppSendFileInfo)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, putSendFileInfo, '(Uri,
      BluetoothOppSendFileInfo)', '', 'Argument[0]', open-url, manual]
  - [java.util, ArrayList<Uri>, true, add, (Uri), '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, update, '(String, ContentValues,
      String, String[])', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, update, '(String, ContentValues,
      String, String[])', '', 'Argument[3]', sql, manual]
  - [android.content, ContentResolver, true, notifyChange, '(Uri, ContentObserver)',
    '', 'Argument[0]', open-url, manual]
  - [android.view, ContextMenu, true, setHeaderTitle, (CharSequence), '', 'Argument[0]',
    create-file, manual]
  - [android.database.sqlite, SQLiteDatabase, true, delete, '(String, String, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, delete, '(String, String, String[])',
    '', 'Argument[2]', sql, manual]
  - [com.android.bluetooth.opp, BluetoothOppShareInfo, true, BluetoothOppShareInfo,
    '(int, Uri, String, String, String, int, String, int, int, int, long, long, long,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [java.util, ArrayList<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isBluetoothShareUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, fileExists, '(Context,
      Uri)', '', 'Argument[1]', create-file, manual]
  - [com.android.bluetooth.opp, BluetoothOppUtility, true, isRecognizedFileType, '(Context,
      Uri, String)', '', 'Argument[1]', create-file, manual]
  - [android.content, Intent, true, setDataAndTypeAndNormalize, '(Uri, String)', '',
    'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, openFileDescriptor, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, Intent, true, setDataAndTypeAndNormalize, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [com.android.bluetooth.opp, BluetoothOppService, true, stringFromCursor, '(String,
      Cursor, String)', '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<Uri,BluetoothOppSendFileInfo>', true,
    put, '(Uri, BluetoothOppSendFileInfo)', '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<Uri,BluetoothOppSendFileInfo>', true,
    get, (Object), '', 'Argument[0]', open-url, manual]
  - [java.util.concurrent, 'ConcurrentHashMap<Uri,BluetoothOppSendFileInfo>', true,
    remove, (Object), '', 'Argument[0]', open-url, manual]
  - [org.chromium.webview_shell, WebViewBrowserActivity, true, setUrlBarText, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.chromium.webview_shell, WebViewBrowserActivity, true, loadUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [org.chromium.webview_shell, FilePermissionRequest, true, FilePermissionRequest,
    (String), '', 'Argument[0]', open-url, manual]
  - [android.widget, EditText, true, setText, '(CharSequence, BufferType)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.camera.data, PhotoDataFactory, true, decodeBitmapDimensions, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.camera.data, FilmstripItemData, true, FilmstripItemData, '(long,
      String, String, Date, Date, String, Uri, Size, long, int, Location)', '', 'Argument[5]',
    create-file, manual]
  - [android.graphics, BitmapFactory, true, decodeFile, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.camera.data, VideoItemData, true, VideoItemData, '(long, String,
      String, Date, Date, String, Uri, Size, long, int, Location, long)', '', 'Argument[5]',
    create-file, manual]
  - [com.android.camera.ui, DetailsAdapter, true, resolveResolution, (String), '',
    'Argument[0]', create-file, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String)', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, appendWhere, (CharSequence),
    '', 'Argument[0]', sql, manual]
  - [com.android.contacts, DefaultImageRequest, true, DefaultImageRequest, '(String,
      String, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, DefaultImageRequest, true, DefaultImageRequest, '(String,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, loadPhoto, '(ImageView, Uri,
      int, boolean, boolean, DefaultImageRequest, DefaultImageProvider)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.certinstaller, CertInstallerMain, true, startWifiInstallActivity,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts, ContactLoadingAsyncTask, true, ContactLoadingAsyncTask,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, AsyncQueryHandler, true, startQuery, '(int, Object, Uri, String[],
      String, String[], String)', '', 'Argument[2]', open-url, manual]
  - [com.android.contacts, LoadingAsyncTask, true, LoadingAsyncTask, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.util, ContactPhotoUtils, true, savePhotoFromUriToUri, '(Context,
      Uri, Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.content, Intent, true, putExtra, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.contacts.activities, ContactEditor, true, load, '(String, Uri, Bundle)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, ContactLoader, '(Context, Uri,
      boolean)', '', 'Argument[1]', open-url, manual]
  - [android.provider, Contacts, true, lookupContact, '(ContentResolver, Uri)', '',
    'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, EditorIntents, true, createEditContactIntentForRawContact,
    '(Context, Uri, long, MaterialPalette)', '', 'Argument[1]', open-url, manual]
  - [android.content, Intent, true, Intent, '(String, Uri, Context, Class<?>)', '',
    'Argument[1]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, getIntentForQuickContactLauncherShortcut,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.widget, QuickContactBadge, true, assignContactUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, loadPhoto, '(ImageView, Uri,
      int, boolean, boolean, DefaultImageRequest)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, ContactPickerFragment, true, editContact, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts, ShortcutIntentBuilder, true, createContactShortcutIntent,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, ContactPickerFragment, true, pickContact, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, loadDirectoryPhoto, '(ImageView,
      Uri, boolean, boolean, DefaultImageRequest)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, OnContactPickerActionListener, true, onEditContactAction,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, OnContactPickerActionListener, true, onPickContactAction,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, ContactBrowseListFragment, true, onContactUriQueryFinished,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, isDefaultImageUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManagerImpl, true, createAndApplyDefaultImageForUri,
    '(ImageView, Uri, int, boolean, boolean, DefaultImageProvider)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.contacts, Request, true, createFromUri, '(Uri, int, boolean, boolean,
      DefaultImageProvider, DefaultImageRequest)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactPhotoManager, true, getDefaultImageRequestFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.interactions, ContactDeletionInteraction, true, showDialog,
    '(int, int, Uri)', '', 'Argument[2]', open-url, manual]
  - [com.android.contacts.interactions, ContactDeletionInteraction, true, doDeleteContact,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts, ContactSaveService, true, createDeleteContactIntent, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, ContactBrowseListFragment, true, setSelectedContactUri,
    '(Uri, boolean, boolean, boolean, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.list, OnContactBrowserActionListener, true, onViewContactAction,
    '(int, Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [android.content, Editor, true, putString, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, ContactLoader, '(Context, Uri,
      boolean, boolean, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.list, ContactBrowseListFragment, true, viewContact, '(int,
      Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, EditorIntents, true, createEditContactIntent, '(Context,
      Uri, MaterialPalette, long)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, loadEncodedContactEntity, '(Uri,
      Uri)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.model, ContactLoader, true, loadContactEntity, '(ContentResolver,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.util, ContactPhotoUtils, true, isFilePathAndNotStorage,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, composeQuickContactIntent,
    '(Context, Uri, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, composeQuickContactIntent,
    '(Context, Uri, int, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorFragment, true, onSaveCompleted, '(boolean,
      int, boolean, Uri, Long)', '', 'Argument[3]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorFragment, true, getNameToDisplay, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorUtils, true, maybeConvertToLegacyLookupUri,
    '(Context, Uri, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[9]', open-url, manual]
  - [com.android.contacts.editor, ContactEditorFragment, true, load, '(String, Uri,
      Bundle)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.editor, Listener, true, onContactSplit, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.vcard, ExportRequest, true, ExportRequest, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.util, ImplicitIntentsUtil, true, startQuickContact, '(Activity,
      Uri, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, setDirectoryMetaData, '(String, String,
      String, String, int)', '', 'Argument[0]', create-file, manual]
  - [com.android.contacts.util, UriUtils, true, isEncodedContactUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.net, Uri, true, withAppendedPath, '(Uri, String)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.vcard, ExportRequest, true, ExportRequest, (Uri), '', 'Argument[0]',
    create-file, manual]
  - [com.android.contacts.model, ContactLoader, true, loadContactHeaderData, '(Cursor,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [android.util, Log, true, d, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [android.provider, QuickContact, true, showQuickContact, '(Context, Rect, Uri,
      int, String[])', '', 'Argument[2]', open-url, manual]
  - [com.android.contacts.vcard, ExportVCardActivity, true, getOpenableUriDisplayName,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts, Request, true, Request, '(long, Uri, int, boolean, boolean,
      DefaultImageProvider, DefaultImageRequest)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.model, Contact, true, Contact, '(Uri, Uri, Uri, long, String,
      long, long, int, long, String, String, String, String, boolean, Integer, boolean,
      String, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.deskclock.data, SettingsModel, true, setDefaultAlarmRingtoneUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, Set<String>, true, add, (String), '', 'Argument[0]', create-file,
    manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', create-file,
    manual]
  - [com.android.contacts.model, ContactLoader, true, setNewLookup, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, importVCard, '(Uri[],
      String[])', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, VCardCacheThread, true, VCardCacheThread, '(Uri[],
      String[])', '', 'Argument[0]', open-url, manual]
  - [com.android.deskclock.data, SettingsDAO, true, setDefaultAlarmRingtoneUri, '(SharedPreferences,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[1]', open-url,
    manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, copyTo, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, readUriToLocalFile, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, isStorageUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, getDisplayName, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.deskclock, HandleApiCalls, true, getSelectedTimer, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.content, ContextWrapper, true, getFileStreamPath, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.deskclock.data, AlarmModel, true, setDefaultAlarmRingtoneUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, startImport, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardDialogFragment, true, show, '(Activity,
      Uri, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, readUriToLocalUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.vcard, ImportVCardActivity, true, importVCard, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[9]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, setDirectoryMetaData, '(String,
      String, String, String, int)', '', 'Argument[0]', create-file, manual]
  - [com.android.contacts.common.model, ContactLoader, true, loadEncodedContactEntity,
    '(Uri, Uri)', '', 'Argument[0]', open-url, manual]
  - [com.android.contacts.common.model, ContactLoader, true, loadContactEntity, '(ContentResolver,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.common.model, ContactLoader, true, loadContactHeaderData,
    '(Cursor, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.contacts.common.model, Contact, true, Contact, '(Uri, Uri, Uri, long,
      String, long, long, int, long, String, String, String, String, boolean, Integer,
      boolean, String, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.dialer.app.voicemail, VoicemailPlaybackPresenter, true, setPlaybackView,
    '(PlaybackView, long, Uri, boolean, View)', '', 'Argument[2]', open-url, manual]
  - [com.android.dialer.app.calllog, CallLogAsyncTaskUtil, true, markVoicemailAsRead,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.dialer.app.calllog, NewCall, true, NewCall, '(Uri, Uri, String, int,
      String, String, String, String, long, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.dialer.common, Assert, true, isNotNull, (T), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentResolver, true, registerContentObserver, '(Uri, boolean,
      ContentObserver)', '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.callintent, CallIntentBuilder, true, CallIntentBuilder, '(Uri,
      CallSpecificAppData)', '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.app.voicemail, VoicemailPlaybackPresenter, true, getFileName,
    '(String, String, String, long)', '', 'Argument[0]', create-file, manual]
  - [android.support.v4.content, FileProvider, true, getUriForFile, '(Context, String,
      File)', '', 'Argument[2]', create-file, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadDialerThumbnailOrPhoto,
    '(QuickContactBadge, Uri, long, Uri, String, int)', '', 'Argument[1]', open-url,
    manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadDialerThumbnailOrPhoto,
    '(QuickContactBadge, Uri, long, Uri, String, int)', '', 'Argument[3]', open-url,
    manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadDirectoryPhoto,
    '(ImageView, Uri, boolean, boolean, DefaultImageRequest)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, loadPhoto, '(ImageView,
      Uri, int, boolean, boolean, DefaultImageRequest, DefaultImageProvider)', '',
    'Argument[1]', open-url, manual]
  - [com.android.dialer.contactsfragment, ContactViewHolder, true, bind, '(String,
      String, Uri, long, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.dialer.phonelookup, Builder, true, setPhotoThumbnailUri, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.phonelookup, Builder, true, setPhotoUri, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.phonelookup, Builder, true, setLookupUri, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, query, '(SQLiteDatabase, String[],
      String, String[], String, String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.dialer.util, UriUtils, true, NoneForNonContactsUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.common, LogUtil, true, d, '(String, String, Object[])', '',
    'Argument[2]', open-url, manual]
  - [com.android.dialer.common, LogUtil, true, d, '(String, String, Object[])', '',
    'Argument[5]', open-url, manual]
  - [com.android.dialer.oem, Builder, true, setPhotoUri, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManagerImpl, true, isDrawableUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, isDefaultImageUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManagerImpl, true, createAndApplyDefaultImageForUri,
    '(ImageView, Uri, int, boolean, boolean, DefaultImageProvider)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.dialer.contactphoto, Request, true, createFromUri, '(Uri, int, boolean,
      boolean, DefaultImageProvider)', '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.searchfragment.common, SearchCursor, true, updateQuery, (String),
    '', 'Argument[0]', sql, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, getDefaultImageRequestFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.dialer.util, UriUtils, true, areEqual, '(Uri, Uri)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.util, UriUtils, true, uriToString, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.common, LogUtil, true, d, '(String, String, Object[])', '',
    'Argument[6]', open-url, manual]
  - [com.android.dialer.util, UriUtils, true, isEncodedContactUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.dialer.dialercontact, Builder, true, setContactUri, (String), '',
    'Argument[0]', open-url, manual]
  - [android.media, MediaPlayer, true, setDataSource, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.dialer.contactphoto, Request, true, Request, '(long, Uri, int, boolean,
      boolean, DefaultImageProvider)', '', 'Argument[1]', open-url, manual]
  - [com.android.dialer.contactphoto, ContactPhotoManager, true, isBusinessContactUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.util, SparseArray<String>, true, put, '(int, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.dialer.app.calllog, CallLogAdapter, true, getVoicemailId, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui, Metrics, true, sanitizeRoot, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.archives, ArchiveId, true, ArchiveId, '(Uri, int, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.archives, ArchiveId, true, ArchiveId, '(Uri, int, String)',
    '', 'Argument[2]', create-file, manual]
  - [com.android.documentsui.archives, ArchivesProvider, true, buildUriForArchive,
    '(Uri, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.files, LauncherActivity, true, isLaunchUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.documentsui, Metrics, true, getRootIdSafely, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.archives, Archive, true, Archive, '(Context, Uri, int,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.archives, MorePreconditions, true, checkArgumentEquals,
    '(Uri, Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui, SizeIndexKey, true, SizeIndexKey, '(Uri, UserId)', '',
    'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, getRootId, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.clipping, PersistTask, true, PersistTask, '(ClipStorage,
      Iterable<Uri>, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.clipping, RuntimeDocumentClipper, true, getClipDataForDocuments,
    '(List<Uri>, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.clipping, Writer, true, write, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.clipping, RuntimeDocumentClipper, true, createJumboClipData,
    '(List<Uri>, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.archives, ReadableArchive, true, ReadableArchive, '(Context,
      ParcelFileDescriptor, Uri, String, int, Uri)', '', 'Argument[2]', open-url,
    manual]
  - [com.android.documentsui.clipping, UrisSupplier, true, create, '(List<Uri>, ClipStore)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.archives, WriteableArchive, true, WriteableArchive, '(Context,
      ParcelFileDescriptor, Uri, int, Uri)', '', 'Argument[2]', open-url, manual]
  - [android.provider, DocumentsContract, true, buildDocumentUri, '(String, String)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.base, DocumentInfo, true, addMimeTypes, '(ContentResolver,
      Uri, Set<String>)', '', 'Argument[1]', open-url, manual]
  - [android.content, Item, true, Item, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.clipping, ClipStore, true, persistUris, (Iterable<Uri>),
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.files, QuickViewIntentBuilder, true, computeSiblingsRange,
    '(List<Uri>, int)', '', 'Argument[0]', open-url, manual]
  - [androidx.core.util, Preconditions, true, checkNotNull, (T), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.roots, LoadRootTask, true, LoadRootTask, '(T, ProvidersAccess,
      Uri, UserId, LoadRootCallback)', '', 'Argument[2]', open-url, manual]
  - [android.content, ContentResolver, true, getStreamTypes, '(Uri, String)', '',
    'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, isRootUri, '(Context, Uri)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.documentsui, AbstractActionHandler<T>, true, loadRoot, '(Uri, UserId)',
    '', 'Argument[0]', open-url, manual]
  - [android.provider, DocumentsContract, true, isDocumentUri, '(Context, Uri)', '',
    'Argument[1]', open-url, manual]
  - [com.android.documentsui, AbstractActionHandler<T>, true, launchToDocument, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.emergency, Contact, true, Contact, '(Uri, Uri, String, String, String,
      Bitmap)', '', 'Argument[0]', open-url, manual]
  - [android.os, 'AsyncTask<Uri,Void,DocumentStack>', true, executeOnExecutor, '(Executor,
      Uri[])', '', 'Argument[1]', open-url, manual]
  - [com.android.emergency.preferences, EditUserPhotoController, true, onPhotoCropped,
    '(Uri, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.emergency.preferences, EditUserPhotoController, true, copyAndCropPhoto,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.roots, LoadRootTask<T>, true, LoadRootTask<T>, '(T, ProvidersAccess,
      Uri, UserId, LoadRootCallback)', '', 'Argument[2]', open-url, manual]
  - [com.android.documentsui.base, 'Lookup<String,Executor>', true, lookup, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.documentsui.roots, LoadFirstRootTask<T>, true, LoadFirstRootTask<T>,
    '(T, ProvidersAccess, Uri, LoadRootCallback)', '', 'Argument[2]', open-url, manual]
  - [com.android.documentsui.base, Providers, true, isArchiveUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui, AbstractActionHandler, true, loadDocument, '(Uri, UserId,
      LoadDocStackCallback)', '', 'Argument[0]', open-url, manual]
  - [android.widget, VideoView, true, setVideoURI, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.provider, DocumentsContract, true, isRootsUri, '(Context, Uri)', '',
    'Argument[1]', open-url, manual]
  - [com.android.documentsui, AbstractActionHandler<T>, true, loadFirstRoot, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [androidx.print, PrintHelper, true, printBitmap, '(String, Uri)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.gallery3d.data, DataManager, true, findPathByUri, '(Uri, String)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.gallery3d.data, Path, true, Path, '(Path, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.gallery3d.data, DataManager, true, findPathByUri, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.data, DataManager, true, getMediaObject, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.gallery3d.data, UriImage, true, UriImage, '(GalleryApp, Path, Uri,
      String)', '', 'Argument[2]', open-url, manual]
  - [android.webkit, MimeTypeMap, true, getFileExtensionFromUrl, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.services, CopyJob, true, queryChildren, '(ContentProviderClient,
      Uri, String[])', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.services, CopyJob, true, calculateFileSizesRecursively,
    '(ContentProviderClient, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.documentsui.services, Job, true, releaseClient, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.documentsui.services, ResourceException, true, ResourceException,
    '(String, Uri, Exception)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.data, UriSource, true, getMimeType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, forceRewriteExif, (String),
    '', 'Argument[0]', create-file, manual]
  - [android.content, ContentProviderClient, true, query, '(Uri, String[], String,
      String[], String)', '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.data, Path, true, fromString, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.documentsui.services, DirectoryChildrenObserver, true, DirectoryChildrenObserver,
    (Object), '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getMimeType, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.exif, ExifInterface, true, readExif, (String), '', 'Argument[0]',
    create-file, manual]
  - [java.lang, RuntimeException, true, RuntimeException, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getMetadataOrientation,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.content, UriMatcher, true, match, (Uri), '', 'Argument[0]', create-file,
    manual]
  - [com.android.gallery3d.data, MediaSource, true, findPathByUri, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.data, LocalSource, true, getAlbumPath, '(Uri, int)', '',
    'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadBitmap, '(Context,
      Uri, Options)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadBitmapBounds,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadDownsampledBitmap,
    '(Context, Uri, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadConstrainedBitmap,
    '(Uri, Context, int, Rect, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getLocalPathFromUri,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.os, 'AsyncTask<Uri,Void,Bitmap>', true, execute, '(Uri[])', '', 'Argument[0]',
    open-url, manual]
  - [com.android.gallery3d.filtershow.imageshow, MasterImage, true, setUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getExif, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, loadOrientedConstrainedBitmap,
    '(Uri, Context, int, int, Rect)', '', 'Argument[0]', open-url, manual]
  - [com.android.gallery3d.filtershow.cache, ImageLoader, true, getMetadataRotation,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.gallery3d.gadget, WidgetDatabaseHelper, true, setWidget, '(int, int,
      String, String)', '', 'Argument[2]', create-file, manual]
  - [com.android.gallery3d.provider, GalleryProvider, true, queryPicasaItem, '(MediaObject,
      String[], String, String[], String)', '', 'Argument[3]', sql, manual]
  - [com.android.gallery3d.filtershow, FilterShowActivity, true, startLoadBitmap,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.io, FileNotFoundException, true, FileNotFoundException, (String), '', 'Argument[0]',
    open-url, manual]
  - [android.os, 'AsyncTask<Uri,Boolean,Boolean>', true, execute, '(Uri[])', '', 'Argument[0]',
    open-url, manual]
  - [android.app.admin, IDevicePolicyManager, true, choosePrivateKeyAlias, '(int,
      Uri, String, IBinder)', '', 'Argument[1]', open-url, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[0]', open-url, manual]
  - [android.text, TextUtils, true, equals, '(CharSequence, CharSequence)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[0]', sql, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[1]', sql, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[2]', sql, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.launcher3, SqlArguments, true, SqlArguments, '(Uri, String, String[])',
    '', 'Argument[0]', create-file, manual]
  - [com.android.launcher3.keyboard, CustomActionsPopup, true, CustomActionsPopup,
    '(Launcher, View)', '', 'Argument[1]', open-url, manual]
  - [com.android.launcher3, DatabaseHelper, true, DatabaseHelper, '(Context, String,
      boolean)', '', 'Argument[1]', create-file, manual]
  - [com.android.launcher3.accessibility, LauncherAccessibilityDelegate, true, performResizeAction,
    '(int, View, LauncherAppWidgetInfo)', '', 'Argument[1]', open-url, manual]
  - [com.android.launcher3, ButtonDropTarget, true, supportsAccessibilityDrop, '(ItemInfo,
      View)', '', 'Argument[1]', open-url, manual]
  - [com.android.managedprovisioning.common, StoreUtils, true, copyUriIntoFile, '(ContentResolver,
      Uri, File)', '', 'Argument[1]', create-file, manual]
  - [com.android.managedprovisioning.common, ProvisionLogger, true, logi, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.managedprovisioning.common, ProvisionLogger, true, logi, '(String,
      Throwable)', '', 'Argument[0]', create-file, manual]
  - [com.android.managedprovisioning.model, CustomizationParams, true, createInstance,
    '(Integer, String, String, Context, Utils)', '', 'Argument[2]', open-url, manual]
  - [com.android.managedprovisioning.common, StoreUtils, true, copyUriIntoFile, '(ContentResolver,
      Uri, File)', '', 'Argument[1]', open-url, manual]
  - [com.android.managedprovisioning.model, CustomizationParams, true, CustomizationParams,
    '(int, int, boolean, String, String)', '', 'Argument[4]', open-url, manual]
  - [com.android.managedprovisioning.parser, DisclaimersParser, true, saveDisclaimerContentIntoFile,
    '(Uri, int)', '', 'Argument[0]', open-url, manual]
  - [androidx.appcompat.mms, DefaultApnSettingsLoader, true, trimV4AddrZeros, (String),
    '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, rawQuery, '(String, String[])',
    '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String, String)', '', 'Argument[3]', sql, manual]
  - [com.android.messaging.util, ContactUtil, true, createRecipientEntry, '(String,
      int, String, int, String, long, String, long, String, boolean)', '', 'Argument[8]',
    open-url, manual]
  - [com.android.messaging.datamodel, DatabaseWrapper, true, explainQueryPlan, '(SQLiteQueryBuilder,
      SQLiteDatabase, String[], String, String[], String, String, String, String)',
    '', 'Argument[4]', sql, manual]
  - [com.android.messaging.datamodel, DatabaseWrapper, true, query, '(String, String[],
      String, String[], String, String, String, String)', '', 'Argument[3]', sql,
    manual]
  - [com.android.managedprovisioning.model, Builder, true, setSupportUrl, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.data, MessagePartData, true, MessagePartData,
    '(String, String, Uri, int, int, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.datamodel.data, PendingAttachmentData, true, createPendingAttachmentData,
    '(String, String, Uri, int, int)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.datamodel.data, PendingAttachmentData, true, PendingAttachmentData,
    '(String, String, Uri, int, int, boolean)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarGroupRequestDescriptor, true, convertToDescriptor,
    '(Uri, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.managedprovisioning.model, Builder, true, setPacUrl, (String), '',
    'Argument[0]', open-url, manual]
  - [com.android.messaging.util, UriUtil, true, getUriForResourceFile, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.managedprovisioning.model, Builder, true, setLocation, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.media, FileImageRequestDescriptor, true, FileImageRequestDescriptor,
    '(String, int, int, int, int, boolean, boolean, boolean)', '', 'Argument[0]',
    create-file, manual]
  - [com.android.messaging.datamodel.media, AvatarRequestDescriptor, true, AvatarRequestDescriptor,
    '(Uri, int, int, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.data, MessagePartData, true, MessagePartData,
    '(String, Uri, int, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarRequestDescriptor, true, AvatarRequestDescriptor,
    '(Uri, int, int, boolean, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.managedprovisioning.common, LogoUtils, true, saveOrganisationLogo,
    '(Context, Uri)', '', 'Argument[1]', create-file, manual]
  - [com.android.messaging.datamodel.media, UriImageRequestDescriptor, true, UriImageRequestDescriptor,
    '(Uri, int, int, boolean, boolean, boolean, int, int)', '', 'Argument[0]', open-url,
    manual]
  - [com.android.messaging.util, UriUtil, true, isLocalResourceUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, isAvatarUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getAvatarType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getFallbackUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.datamodel.media, UriImageRequestDescriptor, true, UriImageRequestDescriptor,
    '(Uri, int, int, int, int, boolean, boolean, boolean, int, int)', '', 'Argument[0]',
    open-url, manual]
  - [android.media, ExifInterface, true, ExifInterface, (String), '', 'Argument[0]',
    create-file, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getGroupParticipantUris, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getName, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getIdentifier, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getSimSelected, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getSimColor, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, getSimIncoming, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, MediaMetadataRetrieverWrapper, true, setDataSource,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, update, '(Uri, ContentValues, String,
      String[])', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarRequestDescriptor, true, AvatarRequestDescriptor,
    '(Uri, int, int)', '', 'Argument[0]', open-url, manual]
  - [android.graphics, BitmapFactory, true, decodeStream, (InputStream), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.sms, BugleApnSettingsLoader, true, trimV4AddrZeros, (String),
    '', 'Argument[0]', open-url, manual]
  - [java.io, RandomAccessFile, true, RandomAccessFile, '(String, String)', '', 'Argument[0]',
    create-file, manual]
  - [android.util, SparseArray<Object>, true, put, '(int, Object)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.messaging.datamodel.data, MessagePartData, true, createMediaMessagePart,
    '(String, Uri, int, int)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.ui, ContactIconView, true, setImageResourceUri, '(Uri,
      long, String, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.datamodel.media, AvatarGroupRequestDescriptor, true, AvatarGroupRequestDescriptor,
    '(Uri, int, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.mmslib.pdu, PduPart, true, setFilename, '(byte[])', '',
    'Argument[0]', create-file, manual]
  - [com.android.messaging.ui, ContactIconView, true, setImageResourceUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversationlist, ShareIntentActivity, true, extractContentType,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversationlist, ShareIntentActivity, true, addSharedPartToDraft,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.datamodel, MediaScratchFileProvider, true, isMediaScratchSpaceUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversation, SaveAttachmentTask, true, SaveAttachmentTask,
    '(Context, Uri, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.util, UriUtil, true, isFileUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, LogUtil, true, v, '(String, String)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.messaging.ui.conversationlist, ShareIntentActivity, true, getTextStringFromContentUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [androidx.collection, 'SimpleArrayMap<Uri,String>', true, put, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, createAvatarUri, '(Uri, CharSequence,
      String, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, createAvatarUri, '(Uri, CharSequence,
      String, String)', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, fromLocalResourceWithFallback,
    '(Uri, Uri)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, AvatarUriUtil, true, fromLocalResourceWithFallback,
    '(Uri, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.util, FileUtil, true, isFileUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.util, FileUtil, true, isSameOrSubDirectory, '(File, File)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.messaging.util, Assert, true, notNull, (Object), '', 'Argument[0]',
    open-url, manual]
  - [com.android.ex.chips, RecipientEntry, true, constructTopLevelEntry, '(String,
      int, String, int, String, long, Long, long, String, boolean, String)', '', 'Argument[8]',
    open-url, manual]
  - [com.android.ex.chips, RecipientEntry, true, constructSecondLevelEntry, '(String,
      int, String, int, String, long, Long, long, String, boolean, String)', '', 'Argument[8]',
    open-url, manual]
  - [com.android.messaging.widget, BaseWidgetFactory, true, getAvatarBitmap, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.util, FileUtil, true, isInPrivateDir, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.messaging.datamodel.data, PendingAttachmentData, true, createPendingAttachmentData,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.mmslib.util, DrmConvertSession, true, close, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.messaging.mmslib, SqliteWrapper, true, update, '(Context, ContentResolver,
      Uri, ContentValues, String, String[])', '', 'Argument[2]', open-url, manual]
  - [com.android.messaging.util, UriUtil, true, isSmsMmsUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [android.nfc, NdefRecord, true, createUri, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.webkit, URLUtil, true, isValidUrl, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.nfc, BeamShareActivity, true, tryUri, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContextWrapper, true, grantUriPermission, '(String, Uri, int)',
    '', 'Argument[1]', open-url, manual]
  - [android.nfc, BeamShareData, true, BeamShareData, '(NdefMessage, Uri[], UserHandle,
      int)', '', 'Argument[1]', open-url, manual]
  - [com.android.messaging.ui.conversation, SaveAttachmentTask, true, addAttachmentToSave,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.messaging.ui.conversation, AttachmentToSave, true, AttachmentToSave,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.quicksearchbox, PackageIconLoader, true, getDrawable, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.quicksearchbox, IconLaterTask, true, IconLaterTask, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.quicksearchbox, PackageIconLoader, true, getResourceId, (Uri), '',
    'Argument[0]', open-url, manual]
  - [org.apache.http.client.methods, HttpGet, true, HttpGet, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.quicksearchbox, SuggestionUtils, true, makeKeyComponent, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.quicksearchbox, SuggestionUtils, true, makeKeyComponent, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.quicksearchbox.google, GoogleSuggestionProvider, true, getQuery,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings, ProxySelector, true, validate, '(String, String, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.development, DSULoader, true, readAll, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.development, Fetcher, true, fetch, (URL), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.homepage.contextualcards, CardContentProvider, true, bulkInsert,
    '(Uri, ContentValues[])', '', 'Argument[0]', open-url, manual]
  - [com.android.settings.homepage.contextualcards, Builder, true, setSliceUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.homepage.contextualcards, CardContentProvider, true, getTableFromMatch,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.content, ContentResolver, true, delete, '(Uri, String, String[])', '',
    'Argument[2]', sql, manual]
  - [com.android.settings.network.telephony, Enhanced4gLteSliceHelper, true, getEnhanced4gLteSlice,
    '(Uri, boolean, int)', '', 'Argument[0]', open-url, manual]
  - [androidx.slice.builders, ListBuilder, true, ListBuilder, '(Context, Uri, long)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.settings.notification.app, NotificationSoundPreference, true, setRingtone,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [androidx.preference, Preference, true, callChangeListener, (Object), '', 'Argument[0]',
    open-url, manual]
  - [android.media, RingtoneManager, true, isDefault, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.android.settings.slices, CustomSliceRegistry, true, isValidUri, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.settings.slices, CustomSliceRegistry, true, getSliceClassByUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SlicesDatabaseAccessor, true, getSliceDataFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, CustomSliceRegistry, true, removeParameterFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, get, (Object), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.slices, SliceBackgroundWorker, true, getInstance, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SliceBuilderUtils, true, getPathData, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SlicesDatabaseAccessor, true, buildSliceData, '(Cursor,
      Uri, boolean)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SliceBackgroundWorker, true, createInstance, '(Context,
      Uri, Class<? extends SliceBackgroundWorker<>>)', '', 'Argument[1]', open-url,
    manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, put, '(Uri, SliceBackgroundWorker<>)',
    '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,Integer>', true, put, '(Uri, Integer)', '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<Uri,Integer>', true, containsKey, (Object), '', 'Argument[0]',
    open-url, manual]
  - [java.util, 'Map<Uri,Integer>', true, remove, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.lang.reflect, 'Constructor<? extends SliceBackgroundWorker<>>', true, newInstance,
    '(Object[])', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SlicesFeatureProvider, true, getSliceableFromUri,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, registerIntentToUri,
    '(IntentFilter, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, startBackgroundWorker,
    '(Sliceable, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, Builder, true, setUri, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, loadSliceInBackground,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, VolumeSliceHelper, true, unregisterUri, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settingslib, SliceBroadcastRelay, true, unregisterReceivers, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, stopBackgroundWorker,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,SliceData>', true, get, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util, 'Map<Uri,Class<? extends CustomSliceable>>', true, get, (Object),
    '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,Class<? extends CustomSliceable>>', true, containsKey, (Object),
    '', 'Argument[0]', open-url, manual]
  - [com.android.settings.users, EditUserPhotoController, true, onPhotoCropped, '(Uri,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.settings.users, EditUserPhotoController, true, copyAndCropPhoto,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, createWifiCallingSlice,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.network.telephony, Enhanced4gLteSliceHelper, true, createEnhanced4gLteSlice,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, createWifiCallingPreferenceSlice,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, getSliceStub, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [java.util, List<Uri>, true, contains, (Object), '', 'Argument[0]', open-url,
    manual]
  - [java.util, 'Map<Uri,SliceData>', true, remove, (Object), '', 'Argument[0]', open-url,
    manual]
  - [com.android.settings.slices, VolumeSliceHelper, true, registerIntentToUri, '(Context,
      IntentFilter, Uri, int)', '', 'Argument[2]', open-url, manual]
  - [java.util, 'Map<Uri,SliceData>', true, put, '(Uri, SliceData)', '', 'Argument[0]',
    open-url, manual]
  - [com.android.settings.slices, SettingsSliceProvider, true, loadSlice, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.settingslib, SliceBroadcastRelay, true, registerReceiver, '(Context,
      Uri, Class<? extends BroadcastReceiver>, IntentFilter)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, getNonActionableWifiCallingSlice,
    '(CharSequence, CharSequence, Uri, PendingIntent)', '', 'Argument[2]', open-url,
    manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, getWifiCallingSlice,
    '(Uri, boolean, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.settings.wifi.calling, WifiCallingSliceHelper, true, getWifiCallingPreferenceSlice,
    '(boolean, int, Uri, int)', '', 'Argument[2]', open-url, manual]
  - [com.android.settings.slices, SliceBackgroundWorker, true, getInstance, '(Context,
      Sliceable, Uri)', '', 'Argument[2]', open-url, manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, containsKey, (Object), '',
    'Argument[0]', open-url, manual]
  - [java.util, 'Map<Uri,SliceBackgroundWorker<>>', true, remove, (Object), '', 'Argument[0]',
    open-url, manual]
  - [androidx.slice, Builder, true, Builder, (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.wallpaperpicker.common, InputStreamProvider, true, fromUri, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.photos, InputStreamSource, true, InputStreamSource, '(Context, Uri)',
    '', 'Argument[1]', open-url, manual]
  - [com.android.wallpaperpicker, WallpaperCropActivity, true, cropImageAndSetWallpaper,
    '(Uri, OnBitmapCroppedHandler, boolean)', '', 'Argument[0]', open-url, manual]
  - [java.io, File, true, File, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [com.android.inputmethod.dictionarypack, MetadataDbHelper, true, registerMetadataDownloadId,
    '(Context, String, long)', '', 'Argument[1]', open-url, manual]
  - [com.android.wallpaperpicker.tileinfo, UriWallpaperInfo, true, UriWallpaperInfo,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.dictionarypack, CompletedDownloadInfo, true, CompletedDownloadInfo,
    '(String, long, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.dictionarypack, UpdateHandler, true, writeMetadataDownloadId,
    '(Context, String, long)', '', 'Argument[1]', open-url, manual]
  - [com.android.inputmethod.dictionarypack, MetadataDbHelper, true, saveLastUpdateTimeOfUri,
    '(Context, String)', '', 'Argument[1]', open-url, manual]
  - [com.android.wallpaperpicker, WallpaperPickerActivity, true, addTemporaryWallpaperTile,
    '(Uri, boolean)', '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.latin.utils, DictionaryInfoUtils, true, replaceFileNameDangerousCharacters,
    (String), '', 'Argument[0]', create-file, manual]
  - [android.net, Builder, true, appendPath, (String), '', 'Argument[0]', create-file,
    manual]
  - [android.net, Builder, true, appendPath, (String), '', 'Argument[0]', open-url,
    manual]
  - [android.content, ContentProviderClient, true, getType, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.inputmethod.latin, BinaryDictionaryFileDumper, true, getProviderUriBuilder,
    (String), '', 'Argument[0]', create-file, manual]
  - [android.content, ContentProviderClient, true, openAssetFile, '(Uri, String)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.inputmethod.latin, BinaryDictionaryFileDumper, true, openAssetFileDescriptor,
    '(ContentProviderClient, Uri)', '', 'Argument[1]', open-url, manual]
  - [android.content, ContentProviderClient, true, delete, '(Uri, String, String[])',
    '', 'Argument[0]', open-url, manual]
  - [java.lang, String, true, format, '(String, Object[])', '', 'Argument[2]', open-url,
    manual]
  - [com.android.captiveportallogin, CaptivePortalLoginActivity, true, makeURL, (String),
    '', 'Argument[0]', open-url, manual]
  - [android.net, Builder, true, setVenueInfoUrl, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [android.net, Builder, true, setUserPortalUrl, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.android.providers.contacts.debug, DumpFileProvider, true, extractFileName,
    (Uri), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.contacts.debug, DataExporter, true, ensureValidFileName,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadDrmHelper, true, getOriginalMimeType,
    '(Context, File, String)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, ConcreteFile, true, ConcreteFile, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, findDocumentPath, '(File,
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, startViewIntent, '(Context,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [android.provider, MediaStore, true, getVolumeName, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getAppendedSelection,
    '(String, Uri)', '', 'Argument[0]', sql, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getAppendedSelection,
    '(String, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getDatabaseForUri, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, MimeUtils, true, resolveMimeType, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, OpenHelper, true, buildViewIntentForMediaStoreDownload,
    '(Context, Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, LegacyMediaProvider, true, getTableName, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [android.system, Os, true, lstat, (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, native_should_open_with_fuse,
    '(long, String, boolean, int)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, native_invalidate_fuse_dentry_cache,
    '(long, String)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.playlist, PlaylistPersister, true, resolvePersister,
    (File), '', 'Argument[0]', create-file, manual]
  - [java.io, FileOutputStream, true, FileOutputStream, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, extractFileExtension, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, Logging, true, dumpPersistentFile, '(Path,
      PrintWriter)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeDownloadFromCursor,
    '(MatrixCursor, Cursor, Set<String>, Bundle)', '', 'Argument[2]', create-file,
    manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeDownloadsFromMediaStore,
    '(MatrixCursor, Bundle, Set<String>, ArrayList<Uri>, String, int, boolean)', '',
    'Argument[2]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeFilesFromSharedStorage,
    '(DownloadsCursor, Set<String>, String)', '', 'Argument[1]', create-file, manual]
  - [java.nio.file, Files, true, lines, (Path), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, openSafely, '(File, int)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeSearchFilesFromSharedStorage,
    '(DownloadsCursor, String[], Set<String>, Bundle)', '', 'Argument[2]', create-file,
    manual]
  - [com.android.internal.content, FileSystemProvider, true, querySearchDocuments,
    '(File, String[], Set<String>, Bundle)', '', 'Argument[2]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeFileFromSharedStorage,
    '(MatrixCursor, File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.util, RedactingFileDescriptor, true, RedactingFileDescriptor,
    '(Context, File, int, long[], long[])', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, isRawDocId, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, getAbsoluteFilePath,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, containsCanonical, '(File[],
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, RawDocumentsHelper, true, getDocIdForFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.internal.util, ArrayUtils, true, contains, '(T[], T)', '', 'Argument[1]',
    create-file, manual]
  - [com.android.providers.media.scan, ModernMediaScanner, true, scanFile, '(File,
      int, String)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, LocalUriMatcher, true, matchUri, '(Uri, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.scan, Scan, true, Scan, '(File, int, String)', '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, containsCanonical, '(File, File)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, contains, '(String, String)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.internal.content, FileSystemProvider, true, includeFile, '(MatrixCursor,
      String, File)', '', 'Argument[2]', create-file, manual]
  - [java.util.function, Consumer<Path>, true, accept, (Path), '', 'Argument[0]',
    create-file, manual]
  - [android.util, Pair, true, create, '(A, B)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, buildSearchSelection,
    '(Bundle, Set<String>, String)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.downloads, DownloadStorageProvider, true, includeDownloadFromMediaStore,
    '(MatrixCursor, Cursor, Set<String>, boolean)', '', 'Argument[2]', create-file,
    manual]
  - [com.android.providers.downloads, Helpers, true, isFilenameValidInKnownPublicDir,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadProvider, true, getDownloadIdFromUri,
    (Uri), '', 'Argument[0]', open-url, manual]
  - [android.database, DatabaseUtils, true, stringForQuery, '(SQLiteDatabase, String,
      String[])', '', 'Argument[2]', sql, manual]
  - [android.os, Environment, true, getExternalStoragePublicDirectory, (String), '',
    'Argument[0]', create-file, manual]
  - [android.os.storage, StorageManager, true, getStorageVolume, (File), '', 'Argument[0]',
    create-file, manual]
  - [java.io, FileInputStream, true, FileInputStream, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.providers.media.scan, ModernMediaScanner, true, resolveMediaTypeFromFilePath,
    '(File, String, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, DownloadProvider, true, checkInsertPermissions,
    (ContentValues), '', 'Argument[0]', sql, manual]
  - [com.android.dreams.phototable, PhotoSource, true, log, '(String, String)', '',
    'Argument[1]', sql, manual]
  - [com.android.providers.media.util, FileUtils, true, isDirectoryHidden, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.scan, Scan, true, releaseDirectoryLock, (Path), '',
    'Argument[0]', create-file, manual]
  - [android.content, ContentResolver, true, query, '(Uri, String[], String, String[],
      String)', '', 'Argument[2]', sql, manual]
  - [com.android.providers.media.util, FileUtils, true, contains, '(File, File)',
    '', 'Argument[1]', create-file, manual]
  - [com.android.server.connectivity, NetworkMonitor, true, readAsString, '(InputStream,
      int, Charset)', '', 'Argument[0]', open-url, manual]
  - [com.android.mms.service, MmsHttpClient, true, execute, '(String, byte[], String,
      boolean, String, int, Bundle, int, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, FileUtils, true, extractRelativePath, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.mms.service, LogUtil, true, d, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.mms.service, MmsHttpClient, true, redactUrlForNonVerbose, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, getFileUri, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, isFileInExternalAndroidDirs,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.downloads, Helpers, true, isFilenameValidInPublicDownloadsDir,
    (File), '', 'Argument[0]', create-file, manual]
  - [android.net, Network, true, getByName, (String), '', 'Argument[0]', open-url,
    manual]
  - [com.android.mms.service, MmsHttpClient, true, maybeWaitForIpv4, '(String, URL)',
    '', 'Argument[1]', open-url, manual]
  - [android.net, Network, true, openConnection, '(URL, Proxy)', '', 'Argument[0]',
    open-url, manual]
  - [android.net, NetworkUtils, true, trimV4AddrZeros, (String), '', 'Argument[0]',
    open-url, manual]
  - [com.android.mms.service.exception, ApnException, true, ApnException, (String),
    '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.mms.service, ApnSettings, true, ApnSettings, '(String, String, int,
      String)', '', 'Argument[0]', open-url, manual]
  - [android.database.sqlite, SQLiteDatabase, true, query, '(String, String[], String,
      String[], String, String, String)', '', 'Argument[1]', sql, manual]
  - [com.android.providers.downloads, DownloadProvider, true, getQueryBuilder, '(Uri,
      int)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, logVerboseQueryInfo,
    '(String[], String, String[], String, SQLiteDatabase)', '', 'Argument[2]', sql,
    manual]
  - [com.android.mms.service.exception, MmsHttpException, true, MmsHttpException,
    '(int, String, Throwable)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media.util, FileUtils, true, sanitizePath, (String), '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, extractRelativePathForDirectory,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.mtp, MtpDatabase, true, disconnectDocumentsRecursively, '(String,
      String[])', '', 'Argument[1]', sql, manual]
  - [com.android.mtp, MtpDatabase, true, deleteDocumentsAndRootsRecursively, '(String,
      String[])', '', 'Argument[1]', sql, manual]
  - [com.android.providers.media, MediaProvider, true, matchUri, '(Uri, boolean)',
    '', 'Argument[0]', open-url, manual]
  - [android.content, ContentUris, true, removeId, (Uri), '', 'Argument[0]', open-url,
    manual]
  - [com.android.providers.media, MediaProvider, true, queryForSingleItem, '(Uri,
      String[], String, String[], CancellationSignal)', '', 'Argument[0]', open-url,
    manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, update, '(SQLiteDatabase,
      ContentValues, String, String[])', '', 'Argument[2]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, update, '(SQLiteDatabase,
      ContentValues, String, String[])', '', 'Argument[3]', sql, manual]
  - [android.content, ContentResolver, true, call, '(String, String, String, Bundle)',
    '', 'Argument[2]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, uncanonicalize, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, notifyContentChanged,
    '(Uri, int)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, appendWhereExpression,
    '(StringBuilder, String)', '', 'Argument[1]', sql, manual]
  - [com.android.providers.media.util, FileUtils, true, isFileHidden, (File), '',
    'Argument[0]', create-file, manual]
  - [com.android.providers.media.scan, ModernMediaScanner, true, isFileAlbumArt, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, getContentUriForFile, '(String,
      String)', '', 'Argument[0]', create-file, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, delete, '(SQLiteDatabase,
      String, String[])', '', 'Argument[1]', sql, manual]
  - [android.database.sqlite, SQLiteQueryBuilder, true, delete, '(SQLiteDatabase,
      String, String[])', '', 'Argument[2]', sql, manual]
  - [com.android.providers.downloads, DownloadProvider, true, query, '(Uri, String[],
      String, String[], String)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.downloads, DownloadProvider, true, logVerboseOpenFileInfo,
    '(Uri, String)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, isMimeTypeSupportedInPath,
    '(String, String)', '', 'Argument[0]', create-file, manual]
  - [android.util, Log, true, v, '(String, String)', '', 'Argument[1]', create-file,
    manual]
  - [com.android.providers.media, MediaProvider, true, renameDirectoryUncheckedForFuse,
    '(String, String, ArrayList<String>)', '', 'Argument[2]', create-file, manual]
  - [com.android.server.telecom.ui, MissedCallNotifierImpl, true, createTelecomPendingIntent,
    '(String, Uri, UserHandle)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, query, '(Uri, String[], Bundle,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, DatabaseUtils, true, createSqlQueryBundle,
    '(String, String[], String)', '', 'Argument[1]', sql, manual]
  - [com.android.phone, ServiceStateProvider, true, isPathPrefixMatch, '(Uri, Uri)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getDefaultTitle, (String),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getTitleFromResourceUri, '(String,
      boolean)', '', 'Argument[0]', open-url, manual]
  - [java.util, 'Map<String,String>', true, put, '(String, String)', '', 'Argument[1]',
    open-url, manual]
  - [com.android.providers.media, MediaProvider, true, insert, '(Uri, ContentValues,
      Bundle)', '', 'Argument[0]', open-url, manual]
  - [java.io, InputStreamReader, true, InputStreamReader, '(InputStream, Charset)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, delete, '(Uri, Bundle)', '',
    'Argument[0]', open-url, manual]
  - [com.android.providers.media.util, DatabaseUtils, true, createSqlQueryBundle,
    '(String, String[], String)', '', 'Argument[0]', sql, manual]
  - [com.android.providers.calendar, CalendarDatabaseHelper, true, scheduleSync, '(Account,
      boolean, String)', '', 'Argument[2]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, update, '(Uri, ContentValues,
      Bundle)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media.playlist, Playlist, true, read, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media, MediaProvider, true, queryForPlaylistMember, '(String,
      Path)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, queryForSingleItem, '(Uri,
      String[], String, String[], CancellationSignal)', '', 'Argument[3]', create-file,
    manual]
  - [com.android.providers.media.playlist, Playlist, true, add, '(int, Path)', '',
    'Argument[1]', create-file, manual]
  - [com.android.providers.media.playlist, Playlist, true, write, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media, MediaProvider, true, openFileCommon, '(Uri, String,
      CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, safeUncanonicalize, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, ensureThumbnail, '(Uri, CancellationSignal)',
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, openFileAndEnforcePathPermissionsHelper,
    '(Uri, int, String, CancellationSignal)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, openTypedAssetFileCommon, '(Uri,
      String, Bundle, CancellationSignal)', '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getVolumeId, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media, MediaProvider, true, invalidateFuseDentry, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, getFuseDaemonForFile, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, invalidateFuseDentryCache,
    (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, hasOwnerPackageName, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, isRedactionNeeded, (Uri), '',
    'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, invalidateThumbnails, (Uri),
    '', 'Argument[0]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, invalidateFuseDentry, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, updateImageMetadata, '(ContentValues,
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.scan, MediaScanner, true, scanFile, '(File, int)',
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkAccess, '(Uri, Bundle,
      File, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkAccess, '(Uri, Bundle,
      File, boolean)', '', 'Argument[2]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, requireOwnershipForItem, '(String,
      Uri)', '', 'Argument[1]', open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getRedactionRanges, (File),
    '', 'Argument[0]', create-file, manual]
  - [android.provider, MediaStore, true, getRequireOriginal, (Uri), '', 'Argument[0]',
    open-url, manual]
  - [com.android.providers.media, MediaProvider, true, getFuseFile, (File), '', 'Argument[0]',
    create-file, manual]
  - [com.android.providers.media.util, RedactingFileDescriptor, true, open, '(Context,
      File, int, long[], long[])', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.fuse, FuseDaemon, true, shouldOpenWithFuse, '(String,
      boolean, int)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, deleteAndInvalidate, (File),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, getVolumeName, '(Context,
      File)', '', 'Argument[1]', create-file, manual]
  - [com.android.providers.media.util, FileUtils, true, extractTopLevelDir, (String),
    '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, enforceCallingPermission, '(Uri,
      Bundle, boolean)', '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkWorldReadAccess, (String),
    '', 'Argument[0]', create-file, manual]
  - [android.system, Os, true, stat, (String), '', 'Argument[0]', create-file, manual]
  - [com.android.providers.media, MediaProvider, true, checkLeadingPathComponentsWorldExecutable,
    (String), '', 'Argument[0]', create-file, manual]
