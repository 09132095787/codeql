[INVALID_KEY_SET] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {parentid, pos} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 0:
Tuple 1 in row 2: (87,42,0,44,87)
Tuple 2 in row 4: (90,42,0,44,90)
	Relevant element: Tuple 1: id=87
		Full ID for 87: @"params;(44);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: id=90
		Full ID for 90: @"params;(44);-1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};-1"
	Relevant element: typeid=42
		Full ID for 42: @"class;SomeClass"
	Relevant element: parentid=44
		Full ID for 44: @"callable;(40).someFun((42),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: Tuple 1: sourceid=87
		Full ID for 87: @"params;(44);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: sourceid=90
		Full ID for 90: @"params;(44);-1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};-1"
[INVALID_KEY_SET] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {parentid, pos} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 0:
Tuple 1 in row 3: (87,43,1,44,87)
Tuple 2 in row 31: (329,43,1,44,329)
	Relevant element: Tuple 1: id=87
		Full ID for 87: @"params;(44);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: id=329
		Full ID for 329: @"params;(44);1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};1"
	Relevant element: typeid=43
		Full ID for 43: @"class;java.lang.String"
	Relevant element: parentid=44
		Full ID for 44: @"callable;(40).someFun((42),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: Tuple 1: sourceid=87
		Full ID for 87: @"params;(44);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: sourceid=329
		Full ID for 329: @"params;(44);1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};1"
[INVALID_KEY_SET] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {parentid, pos} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 0:
Tuple 1 in row 6: (99,72,0,97,99)
Tuple 2 in row 7: (102,72,0,97,102)
	Relevant element: Tuple 1: id=99
		Full ID for 99: @"params;(97);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: id=102
		Full ID for 102: @"params;(97);-1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};-1"
	Relevant element: typeid=72
		Full ID for 72: @"class;AnotherClass"
	Relevant element: parentid=97
		Full ID for 97: @"callable;(40).anotherFun((72),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: Tuple 1: sourceid=99
		Full ID for 99: @"params;(97);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: sourceid=102
		Full ID for 102: @"params;(97);-1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};-1"
[INVALID_KEY_SET] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {parentid, pos} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 0:
Tuple 1 in row 5: (99,43,1,97,99)
Tuple 2 in row 30: (326,43,1,97,326)
	Relevant element: Tuple 1: id=99
		Full ID for 99: @"params;(97);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: id=326
		Full ID for 326: @"params;(97);1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};1"
	Relevant element: typeid=43
		Full ID for 43: @"class;java.lang.String"
	Relevant element: parentid=97
		Full ID for 97: @"callable;(40).anotherFun((72),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: Tuple 1: sourceid=99
		Full ID for 99: @"params;(97);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: sourceid=326
		Full ID for 326: @"params;(97);1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};1"
[INVALID_KEY_SET] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {parentid, pos} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 0:
Tuple 1 in row 8: (110,42,0,108,110)
Tuple 2 in row 10: (113,42,0,108,113)
	Relevant element: Tuple 1: id=110
		Full ID for 110: @"params;(108);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: id=113
		Full ID for 113: @"params;(108);-1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};-1"
	Relevant element: typeid=42
		Full ID for 42: @"class;SomeClass"
	Relevant element: parentid=108
		Full ID for 108: @"callable;(40).bothFun((42),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: Tuple 1: sourceid=110
		Full ID for 110: @"params;(108);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 2: sourceid=113
		Full ID for 113: @"params;(108);-1". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};-1"
[INVALID_KEY_SET] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): More errors, not displayed. There are at least 14 pairs of tuples not satisfying the key dependency for a relation of size 10480
[INVALID_KEY] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {id} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 1:
Tuple 1 in row 2: (87,42,0,44,87)
Tuple 2 in row 3: (87,43,1,44,87)
	Relevant element: id=87
		Full ID for 87: @"params;(44);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 1: typeid=42
		Full ID for 42: @"class;SomeClass"
	Relevant element: Tuple 2: typeid=43
		Full ID for 43: @"class;java.lang.String"
	Relevant element: parentid=44
		Full ID for 44: @"callable;(40).someFun((42),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: sourceid=87
		Full ID for 87: @"params;(44);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.someFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
[INVALID_KEY] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {id} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 1:
Tuple 1 in row 5: (99,43,1,97,99)
Tuple 2 in row 6: (99,72,0,97,99)
	Relevant element: id=99
		Full ID for 99: @"params;(97);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 1: typeid=43
		Full ID for 43: @"class;java.lang.String"
	Relevant element: Tuple 2: typeid=72
		Full ID for 72: @"class;AnotherClass"
	Relevant element: parentid=97
		Full ID for 97: @"callable;(40).anotherFun((72),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: sourceid=99
		Full ID for 99: @"params;(97);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.anotherFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
[INVALID_KEY] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {id} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 1:
Tuple 1 in row 8: (110,42,0,108,110)
Tuple 2 in row 9: (110,43,1,108,110)
	Relevant element: id=110
		Full ID for 110: @"params;(108);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 1: typeid=42
		Full ID for 42: @"class;SomeClass"
	Relevant element: Tuple 2: typeid=43
		Full ID for 43: @"class;java.lang.String"
	Relevant element: parentid=108
		Full ID for 108: @"callable;(40).bothFun((42),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: sourceid=110
		Full ID for 110: @"params;(108);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;SomeClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
[INVALID_KEY] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {id} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 1:
Tuple 1 in row 11: (121,43,1,119,121)
Tuple 2 in row 12: (121,72,0,119,121)
	Relevant element: id=121
		Full ID for 121: @"params;(119);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
	Relevant element: Tuple 1: typeid=43
		Full ID for 43: @"class;java.lang.String"
	Relevant element: Tuple 2: typeid=72
		Full ID for 72: @"class;AnotherClass"
	Relevant element: parentid=119
		Full ID for 119: @"callable;(40).bothFun((72),(43))(16)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.bothFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"
	Relevant element: sourceid=121
		Full ID for 121: @"params;(119);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFun({@"class;AnotherClass"},{@"class;java.lang.String"}){@"type;void"}"};0"
[INVALID_KEY] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): The key set {id} does not functionally determine all fields.
Here is a pair of tuples that agree on the key set but differ at index 1:
Tuple 1 in row 14: (134,42,0,132,134)
Tuple 2 in row 15: (134,130,1,132,134)
	Relevant element: Tuple 1: id=134
		Full ID for 134: @"params;(132);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFunDiffTypes({@"class;SomeClass"},{@"type;int"}){@"type;int"}"};0"
	Relevant element: Tuple 2: id=134
		Full ID for 134: @"params;(132);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFunDiffTypes({@"class;SomeClass"},{@"type;int"}){@"type;int"}"};0"
	Relevant element: Tuple 1: typeid=42
		Full ID for 42: @"class;SomeClass"
	Relevant element: Tuple 2: typeid=130
		Full ID for 130: @"type;int"
	Relevant element: Tuple 1: parentid=132
		Full ID for 132: @"callable;(40).bothFunDiffTypes((42),(130))(130)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.bothFunDiffTypes({@"class;SomeClass"},{@"type;int"}){@"type;int"}"
	Relevant element: Tuple 2: parentid=132
		Full ID for 132: @"callable;(40).bothFunDiffTypes((42),(130))(130)". The ID may expand to @"callable;{@"class;ExtensionsKt"}.bothFunDiffTypes({@"class;SomeClass"},{@"type;int"}){@"type;int"}"
	Relevant element: Tuple 1: sourceid=134
		Full ID for 134: @"params;(132);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFunDiffTypes({@"class;SomeClass"},{@"type;int"}){@"type;int"}"};0"
	Relevant element: Tuple 2: sourceid=134
		Full ID for 134: @"params;(132);0". The ID may expand to @"params;{@"callable;{@"class;ExtensionsKt"}.bothFunDiffTypes({@"class;SomeClass"},{@"type;int"}){@"type;int"}"};0"
[INVALID_KEY] predicate params(@param id, @type typeid, int pos, @callable parentid, @param sourceid): More errors, not displayed. There are at least 7 pairs of tuples not satisfying the key dependency for a relation of size 10480
