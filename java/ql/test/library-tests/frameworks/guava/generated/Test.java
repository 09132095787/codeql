package generatedtest;

import com.google.common.base.Function;
import com.google.common.base.Optional;
import com.google.common.base.Predicate;
import com.google.common.collect.AbstractListMultimap;
import com.google.common.collect.AbstractMapBasedMultimap;
import com.google.common.collect.AbstractMapBasedMultiset;
import com.google.common.collect.AbstractMultimap;
import com.google.common.collect.AbstractMultiset;
import com.google.common.collect.AbstractSetMultimap;
import com.google.common.collect.AbstractSortedKeySortedSetMultimap;
import com.google.common.collect.AbstractSortedMultiset;
import com.google.common.collect.AbstractSortedSetMultimap;
import com.google.common.collect.AbstractTable;
import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.ArrayTable;
import com.google.common.collect.BiMap;
import com.google.common.collect.ClassToInstanceMap;
import com.google.common.collect.Collections2;
import com.google.common.collect.ConcurrentHashMultiset;
import com.google.common.collect.HashBasedTable;
import com.google.common.collect.HashBiMap;
import com.google.common.collect.HashMultimap;
import com.google.common.collect.HashMultiset;
import com.google.common.collect.ImmutableClassToInstanceMap;
import com.google.common.collect.ImmutableCollection;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableListMultimap;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableMultimap;
import com.google.common.collect.ImmutableMultiset;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.ImmutableSetMultimap;
import com.google.common.collect.ImmutableSortedMap;
import com.google.common.collect.ImmutableSortedMapFauxverideShim;
import com.google.common.collect.ImmutableSortedMultiset;
import com.google.common.collect.ImmutableSortedMultisetFauxverideShim;
import com.google.common.collect.ImmutableSortedSet;
import com.google.common.collect.ImmutableSortedSetFauxverideShim;
import com.google.common.collect.ImmutableTable;
import com.google.common.collect.Iterables;
import com.google.common.collect.Iterators;
import com.google.common.collect.LinkedHashMultimap;
import com.google.common.collect.LinkedHashMultiset;
import com.google.common.collect.LinkedListMultimap;
import com.google.common.collect.ListMultimap;
import com.google.common.collect.Lists;
import com.google.common.collect.MapDifference;
import com.google.common.collect.Maps;
import com.google.common.collect.Multimap;
import com.google.common.collect.Multimaps;
import com.google.common.collect.Multiset;
import com.google.common.collect.Multisets;
import com.google.common.collect.MutableClassToInstanceMap;
import com.google.common.collect.ObjectArrays;
import com.google.common.collect.PeekingIterator;
import com.google.common.collect.Queues;
import com.google.common.collect.RowSortedTable;
import com.google.common.collect.SetMultimap;
import com.google.common.collect.Sets;
import com.google.common.collect.SortedMapDifference;
import com.google.common.collect.SortedMultiset;
import com.google.common.collect.SortedMultisetBridge;
import com.google.common.collect.SortedSetMultimap;
import com.google.common.collect.StandardRowSortedTable;
import com.google.common.collect.StandardTable;
import com.google.common.collect.Table;
import com.google.common.collect.Tables;
import com.google.common.collect.TreeBasedTable;
import com.google.common.collect.TreeMultimap;
import com.google.common.collect.TreeMultiset;
import com.google.common.collect.UnmodifiableIterator;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.Deque;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NavigableMap;
import java.util.NavigableSet;
import java.util.PriorityQueue;
import java.util.Properties;
import java.util.Queue;
import java.util.Set;
import java.util.SortedMap;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;

// Test case generated by GenerateFlowTestCase.ql
public class Test {

	Object getArrayElement(Object container) { return null; }
	Object getElement(Object container) { return null; }
	Object getMapKey(Object container) { return null; }
	Object getMapValue(Object container) { return null; }
	Object newWithArrayElement(Object element) { return null; }
	Object newWithElement(Object element) { return null; }
	Object newWithMapKey(Object element) { return null; }
	Object newWithMapValue(Object element) { return null; }
	Object source() { return null; }
	void sink(Object o) { }

	public void test() {

		{
			// "com.google.common.collect;ArrayListMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ArrayListMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = ArrayListMultimap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayListMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ArrayListMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = ArrayListMultimap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			HashBiMap out = null;
			Object in = (Object)source();
			out.forcePut(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			BiMap out = null;
			Object in = (Object)source();
			out.forcePut(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			HashBiMap out = null;
			Object in = (Object)source();
			out.forcePut(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			BiMap out = null;
			Object in = (Object)source();
			out.forcePut(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value"
			BiMap out = null;
			HashBiMap in = (HashBiMap)newWithMapKey(source());
			out = in.inverse();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapKey(source());
			out = in.inverse();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value"
			BiMap out = null;
			HashBiMap in = (HashBiMap)newWithMapValue(source());
			out = in.inverse();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapValue(source());
			out = in.inverse();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			MutableClassToInstanceMap in = (MutableClassToInstanceMap)newWithMapValue(source());
			out = in.getInstance(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ImmutableClassToInstanceMap in = (ImmutableClassToInstanceMap)newWithMapValue(source());
			out = in.getInstance(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ClassToInstanceMap in = (ClassToInstanceMap)newWithMapValue(source());
			out = in.getInstance(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ClassToInstanceMap in = (ClassToInstanceMap)newWithMapValue(source());
			out = in.getInstance((Class)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value"
			MutableClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value"
			ClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value"
			ClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance((Class)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			MutableClassToInstanceMap in = (MutableClassToInstanceMap)newWithMapValue(source());
			out = in.putInstance(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ImmutableClassToInstanceMap in = (ImmutableClassToInstanceMap)newWithMapValue(source());
			out = in.putInstance(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ClassToInstanceMap in = (ClassToInstanceMap)newWithMapValue(source());
			out = in.putInstance(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ClassToInstanceMap in = (ClassToInstanceMap)newWithMapValue(source());
			out = in.putInstance((Class)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;filter;(Collection,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			Collection out = null;
			Collection in = (Collection)newWithElement(source());
			out = Collections2.filter(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;orderedPermutations;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			Collection out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Collections2.orderedPermutations(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;orderedPermutations;(Iterable,Comparator);;Element of Argument[0];Element of ReturnValue;value"
			Collection out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Collections2.orderedPermutations(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;permutations;(Collection);;Element of Argument[0];Element of ReturnValue;value"
			Collection out = null;
			Collection in = (Collection)newWithElement(source());
			out = Collections2.permutations(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ConcurrentHashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ConcurrentHashMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ConcurrentHashMultiset.create(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashBasedTable;true;create;(Table);;MapKey of Argument[0];MapKey of ReturnValue;value"
			HashBasedTable out = null;
			Table in = (Table)newWithMapKey(source());
			out = HashBasedTable.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashBasedTable;true;create;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value"
			HashBasedTable out = null;
			Table in = (Table)newWithMapValue(source());
			out = HashBasedTable.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashBiMap;true;create;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			HashBiMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = HashBiMap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashBiMap;true;create;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			HashBiMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = HashBiMap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			HashMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = HashMultimap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			HashMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = HashMultimap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;HashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			HashMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = HashMultiset.create(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableClassToInstanceMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = ImmutableClassToInstanceMap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableClassToInstanceMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = ImmutableClassToInstanceMap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;of;(Class,Object);;Argument[0];MapKey of ReturnValue;value"
			ImmutableClassToInstanceMap out = null;
			Class in = (Class)source();
			out = ImmutableClassToInstanceMap.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;of;(Class,Object);;Argument[1];MapValue of ReturnValue;value"
			ImmutableClassToInstanceMap out = null;
			Object in = (Object)source();
			out = ImmutableClassToInstanceMap.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value"
			ImmutableSortedSet.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value"
			ImmutableSortedMultiset.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value"
			ImmutableSet.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value"
			ImmutableMultiset.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value"
			ImmutableList.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value"
			ImmutableCollection.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.add();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.add((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.add();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.add((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.add();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.add((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.add();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.add((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.add();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.add((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.add();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.add((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableSortedSet.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableSortedMultiset.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableSet.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableMultiset.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableList.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableCollection.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableSortedSet.Builder out = null;
			Iterator in = (Iterator)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableSortedMultiset.Builder out = null;
			Iterator in = (Iterator)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableSet.Builder out = null;
			Iterator in = (Iterator)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableMultiset.Builder out = null;
			Iterator in = (Iterator)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableList.Builder out = null;
			Iterator in = (Iterator)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value"
			ImmutableCollection.Builder out = null;
			Iterator in = (Iterator)newWithElement(source());
			out.addAll(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)newWithElement(source());
			out = in.build();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)newWithElement(source());
			out = in.build();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)newWithElement(source());
			out = in.build();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)newWithElement(source());
			out = in.build();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)newWithElement(source());
			out = in.build();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)newWithElement(source());
			out = in.build();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableSet in = (ImmutableSet)newWithElement(source());
			out = in.asList();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableMultiset in = (ImmutableMultiset)newWithElement(source());
			out = in.asList();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableList in = (ImmutableList)newWithElement(source());
			out = in.asList();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableCollection in = (ImmutableCollection)newWithElement(source());
			out = in.asList();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;subList;(int,int);;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableList in = (ImmutableList)newWithElement(source());
			out = in.subList(0, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableList out = null;
			Collection in = (Collection)newWithElement(source());
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableList out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableList out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;reverse;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableList in = (ImmutableList)newWithElement(source());
			out = in.reverse();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;sortedCopyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;value"
			ImmutableList out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableList.sortedCopyOf(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;sortedCopyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableList out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableList.sortedCopyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)newWithMapKey(source());
			out = in.build();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)newWithMapKey(source());
			out = in.build();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)newWithMapValue(source());
			out = in.build();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)newWithMapValue(source());
			out = in.build();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;orderEntriesByValue;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.orderEntriesByValue(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;orderEntriesByValue;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.orderEntriesByValue(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.put(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.put(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.put(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.put(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Map in = (Map)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Map in = (Map)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableSortedMap.Builder out = null;
			Map in = (Map)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableMap.Builder out = null;
			Map in = (Map)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.putAll((Map)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.putAll((Map)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out = ImmutableMap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out = ImmutableMap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = ImmutableMap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = ImmutableMap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[8];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[8];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[8];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[9];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMapFauxverideShim.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[9];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[9];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)newWithMapKey(source());
			out = in.build();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)newWithMapKey(source());
			out = in.build();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)newWithMapKey(source());
			out = in.build();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)newWithMapValue(source());
			out = in.build();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)newWithMapValue(source());
			out = in.build();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)newWithMapValue(source());
			out = in.build();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.orderKeysBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.orderKeysBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.orderKeysBy((Comparator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.orderKeysBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.orderValuesBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.orderValuesBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.orderValuesBy((Comparator)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.orderValuesBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.put(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.put(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.put(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.put(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.put((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.put((Map.Entry)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.put(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.put(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableSetMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableListMultimap.Builder out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Object)null, (Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Multimap)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Object)null, (Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Multimap)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Object)null, (Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Multimap)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out = ImmutableSetMultimap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out = ImmutableMultimap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapKey(source()));
			out = ImmutableListMultimap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out = ImmutableSetMultimap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out = ImmutableMultimap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Iterable in = (Iterable)newWithElement(newWithMapValue(source()));
			out = ImmutableListMultimap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = ImmutableSetMultimap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = ImmutableMultimap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = ImmutableListMultimap.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = ImmutableSetMultimap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = ImmutableMultimap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = ImmutableListMultimap.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapKey(source());
			out = in.inverse();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapKey(source());
			out = in.inverse();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapKey(source());
			out = in.inverse();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapValue(source());
			out = in.inverse();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.inverse();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapValue(source());
			out = in.inverse();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[8];MapKey of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[8];MapKey of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[8];MapKey of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[9];MapValue of ReturnValue;value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[9];MapValue of ReturnValue;value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[9];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[-1];ReturnValue;value"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.addCopies(null, 0);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[-1];ReturnValue;value"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.addCopies(null, 0);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[0];Element of Argument[-1];value"
			ImmutableSortedMultiset.Builder out = null;
			Object in = (Object)source();
			out.addCopies(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[0];Element of Argument[-1];value"
			ImmutableMultiset.Builder out = null;
			Object in = (Object)source();
			out.addCopies(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableSortedMultiset.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableMultiset.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableSortedMultiset.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableMultiset.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Object in = (Object)source();
			out = ImmutableSortedMultisetFauxverideShim.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Collection in = (Collection)newWithElement(source());
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSet out = null;
			Collection in = (Collection)newWithElement(source());
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSet out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Object in = (Object)source();
			out = ImmutableSortedSetFauxverideShim.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Map,Comparator);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = ImmutableSortedMap.copyOf(in, (Comparator)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Map,Comparator);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = ImmutableSortedMap.copyOf(in, (Comparator)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOfSorted;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableSortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = ImmutableSortedMap.copyOfSorted(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOfSorted;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableSortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = ImmutableSortedMap.copyOfSorted(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableSortedMultiset.copyOf((Comparator)null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparator,Iterator);;Element of Argument[1];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableSortedMultiset.copyOf((Comparator)null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOfSorted;(SortedMultiset);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedMultiset out = null;
			SortedMultiset in = (SortedMultiset)newWithElement(source());
			out = ImmutableSortedMultiset.copyOfSorted(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Collection);;Element of Argument[1];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Collection in = (Collection)newWithElement(source());
			out = ImmutableSortedSet.copyOf((Comparator)null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = ImmutableSortedSet.copyOf((Comparator)null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Iterator);;Element of Argument[1];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = ImmutableSortedSet.copyOf((Comparator)null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOfSorted;(SortedSet);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			SortedSet in = (SortedSet)newWithElement(source());
			out = ImmutableSortedSet.copyOfSorted(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableTable out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)newWithMapValue(source());
			out = in.build();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;orderColumnsBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.orderColumnsBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;orderRowsBy;(Comparator);;Argument[-1];ReturnValue;value"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.orderRowsBy(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;Argument[-1];ReturnValue;value"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.put(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableTable.Builder out = null;
			Table.Cell in = (Table.Cell)newWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableTable.Builder out = null;
			Table.Cell in = (Table.Cell)newWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[-1];ReturnValue;value"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.put(null, null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			ImmutableTable.Builder out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;Argument[-1];ReturnValue;value"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.putAll(null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableTable.Builder out = null;
			Table in = (Table)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableTable.Builder out = null;
			Table in = (Table)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;copyOf;(Table);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableTable out = null;
			Table in = (Table)newWithMapKey(source());
			out = ImmutableTable.copyOf(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;copyOf;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableTable out = null;
			Table in = (Table)newWithMapValue(source());
			out = ImmutableTable.copyOf(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[2];MapValue of ReturnValue;value"
			ImmutableTable out = null;
			Object in = (Object)source();
			out = ImmutableTable.of(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;addAll;(Collection,Iterable);;Element of Argument[1];Element of Argument[0];value"
			Collection out = null;
			Iterable in = (Iterable)newWithElement(source());
			Iterables.addAll(out, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable);;Element of Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(newWithElement(source()));
			out = Iterables.concat(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable);;Element of Argument[0..1];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable);;Element of Argument[0..1];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.concat(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable<? extends T>[] in = (Iterable<? extends T>[])newWithArrayElement(newWithElement(source()));
			out = Iterables.concat(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;consumingIterable;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.consumingIterable(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;cycle;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.cycle(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;filter;(Iterable,Class);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.filter(in, (Class)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;filter;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.filter(in, (Predicate)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;find;(Iterable,Predicate);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.find(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;find;(Iterable,Predicate,Object);;Argument[2];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.find(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;find;(Iterable,Predicate,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.find(in, null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;get;(Iterable,int);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.get(in, 0);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;get;(Iterable,int,Object);;Argument[2];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.get(null, 0, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;get;(Iterable,int,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.get(in, 0, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getLast;(Iterable);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.getLast(in);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getLast;(Iterable,Object);;Argument[1];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.getLast(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getLast;(Iterable,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.getLast(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getOnlyElement;(Iterable);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.getOnlyElement(in);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getOnlyElement;(Iterable,Object);;Argument[1];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.getOnlyElement(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getOnlyElement;(Iterable,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.getOnlyElement(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;limit;(Iterable,int);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.limit(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;mergeSorted;(Iterable,Comparator);;Element of Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(newWithElement(source()));
			out = Iterables.mergeSorted(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;paddedPartition;(Iterable,int);;Element of Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(newWithElement(source()));
			out = Iterables.paddedPartition(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;partition;(Iterable,int);;Element of Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(newWithElement(source()));
			out = Iterables.partition(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;skip;(Iterable,int);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.skip(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;toString;(Iterable);;Element of Argument[0];ReturnValue;taint"
			String out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.toString(in);
			sink(out); // $hasTaintFlow
		}
		{
			// "com.google.common.collect;Iterables;false;tryFind;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			Optional out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.tryFind(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;unmodifiableIterable;(ImmutableCollection);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			ImmutableCollection in = (ImmutableCollection)newWithElement(source());
			out = Iterables.unmodifiableIterable(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;unmodifiableIterable;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			Iterable out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterables.unmodifiableIterable(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;addAll;(Collection,Iterator);;Element of Argument[1];Element of Argument[0];value"
			Collection out = null;
			Iterator in = (Iterator)newWithElement(source());
			Iterators.addAll(out, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;asEnumeration;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			Enumeration out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.asEnumeration(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator);;Element of Element of Argument[0];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(newWithElement(source()));
			out = Iterators.concat(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator);;Element of Argument[0..1];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator);;Element of Argument[0..1];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(null, null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(null, null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(null, in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.concat(in, null, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value"
			Iterator out = null;
			Iterator<? extends T>[] in = (Iterator<? extends T>[])newWithArrayElement(newWithElement(source()));
			out = Iterators.concat(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;consumingIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.consumingIterator(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;cycle;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			Iterator out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Iterators.cycle(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;filter;(Iterator,Class);;Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.filter(in, (Class)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;filter;(Iterator,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.filter(in, (Predicate)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;find;(Iterator,Predicate);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.find(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;find;(Iterator,Predicate,Object);;Argument[2];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.find(null, null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;find;(Iterator,Predicate,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.find(in, null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;forEnumeration;(Enumeration);;Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Enumeration in = (Enumeration)newWithElement(source());
			out = Iterators.forEnumeration(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;get;(Iterator,int);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.get(in, 0);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;get;(Iterator,int,Object);;Argument[2];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.get(null, 0, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;get;(Iterator,int,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.get(in, 0, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getLast;(Iterator);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.getLast(in);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getLast;(Iterator,Object);;Argument[1];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.getLast(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getLast;(Iterator,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.getLast(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getNext;(Iterator,Object);;Argument[1];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.getNext(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getNext;(Iterator,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.getNext(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getOnlyElement;(Iterator);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.getOnlyElement(in);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getOnlyElement;(Iterator,Object);;Argument[1];Element of ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.getOnlyElement(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getOnlyElement;(Iterator,Object);;Element of Argument[0];ReturnValue;value"
			Object out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.getOnlyElement(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;limit;(Iterator,int);;Element of Argument[0];Element of ReturnValue;value"
			Iterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.limit(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;mergeSorted;(Iterable,Comparator);;Element of Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Iterable in = (Iterable)newWithElement(newWithElement(source()));
			out = Iterators.mergeSorted(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;paddedPartition;(Iterator,int);;Element of Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)newWithElement(newWithElement(source()));
			out = Iterators.paddedPartition(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;partition;(Iterator,int);;Element of Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)newWithElement(newWithElement(source()));
			out = Iterators.partition(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;peekingIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			PeekingIterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.peekingIterator(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;peekingIterator;(PeekingIterator);;Element of Argument[0];Element of ReturnValue;value"
			PeekingIterator out = null;
			PeekingIterator in = (PeekingIterator)newWithElement(source());
			out = Iterators.peekingIterator(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;singletonIterator;(Object);;Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Object in = (Object)source();
			out = Iterators.singletonIterator(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;toString;(Iterator);;Element of Argument[0];ReturnValue;taint"
			String out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.toString(in);
			sink(out); // $hasTaintFlow
		}
		{
			// "com.google.common.collect;Iterators;false;tryFind;(Iterator,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			Optional out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.tryFind(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;unmodifiableIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Iterators.unmodifiableIterator(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;unmodifiableIterator;(UnmodifiableIterator);;Element of Argument[0];Element of ReturnValue;value"
			UnmodifiableIterator out = null;
			UnmodifiableIterator in = (UnmodifiableIterator)newWithElement(source());
			out = Iterators.unmodifiableIterator(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedHashMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			LinkedHashMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = LinkedHashMultimap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedHashMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			LinkedHashMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = LinkedHashMultimap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedHashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			LinkedHashMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = LinkedHashMultiset.create(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedListMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			LinkedListMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = LinkedListMultimap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedListMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			LinkedListMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = LinkedListMultimap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;Argument[0..1];Element of ReturnValue;value"
			List out = null;
			Object in = (Object)source();
			out = Lists.asList(null, in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;Argument[0..1];Element of ReturnValue;value"
			List out = null;
			Object in = (Object)source();
			out = Lists.asList(in, null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object[]);;Argument[0];Element of ReturnValue;value"
			List out = null;
			Object in = (Object)source();
			out = Lists.asList(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;cartesianProduct;(List);;Element of Element of Argument[0];Element of Element of ReturnValue;value"
			List out = null;
			List in = (List)newWithElement(newWithElement(source()));
			out = Lists.cartesianProduct(in);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;cartesianProduct;(List[]);;Element of ArrayElement of Argument[0];Element of Element of ReturnValue;value"
			List out = null;
			List<? extends B>[] in = (List<? extends B>[])newWithArrayElement(newWithElement(source()));
			out = Lists.cartesianProduct(in);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;charactersOf;(CharSequence);;Argument[0];Element of ReturnValue;taint"
			List out = null;
			CharSequence in = (CharSequence)source();
			out = Lists.charactersOf(in);
			sink(getElement(out)); // $hasTaintFlow
		}
		{
			// "com.google.common.collect;Lists;false;charactersOf;(String);;Argument[0];Element of ReturnValue;taint"
			ImmutableList out = null;
			String in = (String)source();
			out = Lists.charactersOf(in);
			sink(getElement(out)); // $hasTaintFlow
		}
		{
			// "com.google.common.collect;Lists;false;newArrayList;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ArrayList out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Lists.newArrayList(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newArrayList;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			ArrayList out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Lists.newArrayList(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newCopyOnWriteArrayList;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			CopyOnWriteArrayList out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Lists.newCopyOnWriteArrayList(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newLinkedList;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			LinkedList out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Lists.newLinkedList(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;partition;(List,int);;Element of Argument[0];Element of Element of ReturnValue;value"
			List out = null;
			List in = (List)newWithElement(source());
			out = Lists.partition(in, 0);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;reverse;(List);;Element of Argument[0];Element of ReturnValue;value"
			List out = null;
			List in = (List)newWithElement(source());
			out = Lists.reverse(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;asMap;(NavigableSet,Function);;Element of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableSet in = (NavigableSet)newWithElement(source());
			out = Maps.asMap(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;asMap;(Set,Function);;Element of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Set in = (Set)newWithElement(source());
			out = Maps.asMap(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;asMap;(SortedSet,Function);;Element of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedSet in = (SortedSet)newWithElement(source());
			out = Maps.asMap(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(BiMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapKey(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(BiMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapValue(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(Map,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(Map,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(NavigableMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(NavigableMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapValue(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(SortedMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;(SortedMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(BiMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapKey(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(BiMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapValue(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(Map,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(Map,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(NavigableMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(NavigableMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapValue(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(SortedMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;(SortedMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(BiMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapKey(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(BiMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapValue(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(Map,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(Map,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(NavigableMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(NavigableMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapValue(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(SortedMap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;(SortedMap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;fromProperties;(Properties);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Properties in = (Properties)newWithMapKey(source());
			out = Maps.fromProperties(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;fromProperties;(Properties);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Properties in = (Properties)newWithMapValue(source());
			out = Maps.fromProperties(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;immutableEntry;(Object,Object);;Argument[0];MapKey of ReturnValue;value"
			Map.Entry out = null;
			Object in = (Object)source();
			out = Maps.immutableEntry(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;immutableEntry;(Object,Object);;Argument[1];MapValue of ReturnValue;value"
			Map.Entry out = null;
			Object in = (Object)source();
			out = Maps.immutableEntry(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newHashMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			HashMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Maps.newHashMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newHashMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			HashMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = Maps.newHashMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newLinkedHashMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			LinkedHashMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Maps.newLinkedHashMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newLinkedHashMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			LinkedHashMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = Maps.newLinkedHashMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newTreeMap;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			TreeMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = Maps.newTreeMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newTreeMap;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			TreeMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = Maps.newTreeMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;subMap;(NavigableMap,Range);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.subMap(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;subMap;(NavigableMap,Range);;MapValue of Argument[0];MapValue of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapValue(source());
			out = Maps.subMap(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedBiMap;(BiMap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapKey(source());
			out = Maps.synchronizedBiMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedBiMap;(BiMap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapValue(source());
			out = Maps.synchronizedBiMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.synchronizedNavigableMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapValue(source());
			out = Maps.synchronizedNavigableMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;toMap;(Iterable,Function);;Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Maps.toMap(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;toMap;(Iterator,Function);;Element of Argument[0];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Maps.toMap(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;transformValues;(Map,Function);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = Maps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;transformValues;(NavigableMap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;transformValues;(SortedMap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = Maps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;uniqueIndex;(Iterable,Function);;Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Maps.uniqueIndex(in, (Function)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;uniqueIndex;(Iterator,Function);;Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Maps.uniqueIndex(in, (Function)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableBiMap;(BiMap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapKey(source());
			out = Maps.unmodifiableBiMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableBiMap;(BiMap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			BiMap out = null;
			BiMap in = (BiMap)newWithMapValue(source());
			out = Maps.unmodifiableBiMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapKey(source());
			out = Maps.unmodifiableNavigableMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)newWithMapValue(source());
			out = Maps.unmodifiableNavigableMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			SortedMap out = null;
			AbstractSortedKeySortedSetMultimap in = (AbstractSortedKeySortedSetMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			NavigableMap out = null;
			TreeMultimap in = (TreeMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			ListMultimap in = (ListMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapKey(source());
			out = in.asMap();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			SortedMap out = null;
			AbstractSortedKeySortedSetMultimap in = (AbstractSortedKeySortedSetMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			NavigableMap out = null;
			TreeMultimap in = (TreeMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			Map out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Collection out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapKey(source());
			out = in.entries();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Collection out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.entries();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			NavigableSet out = null;
			TreeMultimap in = (TreeMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.get(null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.get((Object)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedKeySortedSetMultimap in = (AbstractSortedKeySortedSetMultimap)newWithMapKey(source());
			out = in.keySet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = in.keySet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)newWithMapKey(source());
			out = in.keySet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapKey(source());
			out = in.keySet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value"
			NavigableSet out = null;
			TreeMultimap in = (TreeMultimap)newWithMapKey(source());
			out = in.keySet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapKey(source());
			out = in.keySet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;value"
			Multiset out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = in.keys();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;value"
			Multiset out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapKey(source());
			out = in.keys();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapKey(source());
			out = in.keys();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			LinkedListMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractSetMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractSetMultimap out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractListMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			AbstractListMultimap out = null;
			Object in = (Object)source();
			out.put(in, (Object)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			LinkedListMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractSetMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractSetMultimap out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractListMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			AbstractListMultimap out = null;
			Object in = (Object)source();
			out.put((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.putAll(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.putAll(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.putAll(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			Multimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			Multimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			List out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			List out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			List out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			List out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableList out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.removeAll(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.removeAll((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			SortedSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			SortedSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			SetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			SetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			Multimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			LinkedListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			LinkedHashMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractSortedSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractSortedSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value"
			AbstractListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, (Iterable)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			SortedSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			SortedSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			SetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			SetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			Multimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			Multimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			LinkedListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			LinkedHashMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			ImmutableListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractSortedSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractSortedSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractSetMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractMapBasedMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value"
			AbstractListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out.replaceValues((Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			AbstractSetMultimap in = (AbstractSetMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			AbstractListMultimap in = (AbstractListMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableList out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.replaceValues((Object)null, (Iterable)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractSortedSetMultimap in = (AbstractSortedSetMultimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMultimap in = (AbstractMultimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractMapBasedMultimap in = (AbstractMapBasedMultimap)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			ListMultimap in = (ListMultimap)newWithMapKey(source());
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(ListMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value"
			Map out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(Multimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value"
			Map out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SetMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value"
			Map out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapKey(source());
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SortedSetMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value"
			Map out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;forMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Multimaps.forMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;forMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			Map in = (Map)newWithMapValue(source());
			out = Multimaps.forMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;index;(Iterable,Function);;Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Multimaps.index(in, (Function)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;index;(Iterator,Function);;Element of Argument[0];MapValue of ReturnValue;value"
			ImmutableListMultimap out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Multimaps.index(in, (Function)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;MapKey of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.invertFrom(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;MapValue of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.invertFrom(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newListMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value"
			ListMultimap out = null;
			Map in = (Map)newWithMapValue(newWithElement(source()));
			out = Multimaps.newListMultimap(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newListMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ListMultimap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Multimaps.newListMultimap(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Map in = (Map)newWithMapValue(newWithElement(source()));
			out = Multimaps.newMultimap(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Multimaps.newMultimap(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSetMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			Map in = (Map)newWithMapValue(newWithElement(source()));
			out = Multimaps.newSetMultimap(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSetMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Multimaps.newSetMultimap(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSortedSetMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedSetMultimap out = null;
			Map in = (Map)newWithMapValue(newWithElement(source()));
			out = Multimaps.newSortedSetMultimap(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSortedSetMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedSetMultimap out = null;
			Map in = (Map)newWithMapKey(source());
			out = Multimaps.newSortedSetMultimap(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedListMultimap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)newWithMapKey(source());
			out = Multimaps.synchronizedListMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedListMultimap;(ListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = Multimaps.synchronizedListMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedMultimap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.synchronizedMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedMultimap;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.synchronizedMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSetMultimap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = Multimaps.synchronizedSetMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSetMultimap;(SetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = Multimaps.synchronizedSetMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSortedSetMultimap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapKey(source());
			out = Multimaps.synchronizedSortedSetMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSortedSetMultimap;(SortedSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = Multimaps.synchronizedSortedSetMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;transformValues;(ListMultimap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)newWithMapKey(source());
			out = Multimaps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;transformValues;(Multimap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ImmutableListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapKey(source());
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ImmutableListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)newWithMapValue(source());
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)newWithMapKey(source());
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)newWithMapValue(source());
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(ImmutableMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapKey(source());
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(ImmutableMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)newWithMapValue(source());
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Multimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(ImmutableSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapKey(source());
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(ImmutableSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)newWithMapValue(source());
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapKey(source());
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(SetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)newWithMapValue(source());
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSortedSetMultimap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapKey(source());
			out = Multimaps.unmodifiableSortedSetMultimap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSortedSetMultimap;(SortedSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)newWithMapValue(source());
			out = Multimaps.unmodifiableSortedSetMultimap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset$Entry;true;getElement;();;Element of Argument[-1];ReturnValue;value"
			Object out = null;
			Multiset.Entry in = (Multiset.Entry)newWithElement(source());
			out = in.getElement();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value"
			TreeMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value"
			Multiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value"
			ConcurrentHashMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value"
			AbstractMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value"
			AbstractMapBasedMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			SortedSet out = null;
			SortedMultisetBridge in = (SortedMultisetBridge)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			Set out = null;
			AbstractMultiset in = (AbstractMultiset)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			NavigableSet out = null;
			SortedMultiset in = (SortedMultiset)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			NavigableSet out = null;
			AbstractSortedMultiset in = (AbstractSortedMultiset)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableSortedSet out = null;
			ImmutableSortedMultiset in = (ImmutableSortedMultiset)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableMultiset in = (ImmutableMultiset)newWithElement(source());
			out = in.elementSet();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value"
			Set out = null;
			SortedMultiset in = (SortedMultiset)newWithElement(source());
			out = in.entrySet();
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value"
			Set out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = in.entrySet();
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value"
			Set out = null;
			AbstractMultiset in = (AbstractMultiset)newWithElement(source());
			out = in.entrySet();
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value"
			Set out = null;
			AbstractMapBasedMultiset in = (AbstractMapBasedMultiset)newWithElement(source());
			out = in.entrySet();
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableMultiset in = (ImmutableMultiset)newWithElement(source());
			out = in.entrySet();
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value"
			TreeMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value"
			Multiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value"
			ConcurrentHashMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value"
			AbstractMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value"
			AbstractMapBasedMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value"
			TreeMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value"
			Multiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value"
			ConcurrentHashMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value"
			AbstractMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;copyHighestCountFirst;(Multiset);;Element of Argument[0];Element of ReturnValue;value"
			ImmutableMultiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.copyHighestCountFirst(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;difference;(Multiset,Multiset);;Element of Argument[0];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.difference(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;filter;(Multiset,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.filter(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;immutableEntry;(Object,int);;Argument[0];Element of ReturnValue;value"
			Multiset.Entry out = null;
			Object in = (Object)source();
			out = Multisets.immutableEntry(in, 0);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;sum;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.sum(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;sum;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.sum(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;union;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.union(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;union;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.union(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;unmodifiableMultiset;(ImmutableMultiset);;Element of Argument[0];Element of ReturnValue;value"
			Multiset out = null;
			ImmutableMultiset in = (ImmutableMultiset)newWithElement(source());
			out = Multisets.unmodifiableMultiset(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;unmodifiableMultiset;(Multiset);;Element of Argument[0];Element of ReturnValue;value"
			Multiset out = null;
			Multiset in = (Multiset)newWithElement(source());
			out = Multisets.unmodifiableMultiset(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;unmodifiableSortedMultiset;(SortedMultiset);;Element of Argument[0];Element of ReturnValue;value"
			SortedMultiset out = null;
			SortedMultiset in = (SortedMultiset)newWithElement(source());
			out = Multisets.unmodifiableSortedMultiset(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;MutableClassToInstanceMap;true;create;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value"
			MutableClassToInstanceMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MutableClassToInstanceMap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;MutableClassToInstanceMap;true;create;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value"
			MutableClassToInstanceMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MutableClassToInstanceMap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;drain;(BlockingQueue,Collection,int,Duration);;Element of Argument[0];Element of Argument[1];value"
			Collection out = null;
			BlockingQueue in = (BlockingQueue)newWithElement(source());
			Queues.drain(in, out, 0, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;drain;(BlockingQueue,Collection,int,long,TimeUnit);;Element of Argument[0];Element of Argument[1];value"
			Collection out = null;
			BlockingQueue in = (BlockingQueue)newWithElement(source());
			Queues.drain(in, out, 0, 0L, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newArrayDeque;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ArrayDeque out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Queues.newArrayDeque(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newConcurrentLinkedQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			ConcurrentLinkedQueue out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Queues.newConcurrentLinkedQueue(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newLinkedBlockingDeque;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			LinkedBlockingDeque out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Queues.newLinkedBlockingDeque(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newLinkedBlockingQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			LinkedBlockingQueue out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Queues.newLinkedBlockingQueue(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newPriorityBlockingQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			PriorityBlockingQueue out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Queues.newPriorityBlockingQueue(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newPriorityQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			PriorityQueue out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Queues.newPriorityQueue(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;synchronizedDeque;(Deque);;Element of Argument[0];Element of ReturnValue;value"
			Deque out = null;
			Deque in = (Deque)newWithElement(source());
			out = Queues.synchronizedDeque(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;synchronizedQueue;(Queue);;Element of Argument[0];Element of ReturnValue;value"
			Queue out = null;
			Queue in = (Queue)newWithElement(source());
			out = Queues.synchronizedQueue(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets$SetView;true;copyInto;(Set);;Element of Argument[-1];Element of Argument[0];value"
			Set out = null;
			Sets.SetView in = (Sets.SetView)newWithElement(source());
			in.copyInto(out);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets$SetView;true;immutableCopy;();;Element of Argument[-1];Element of ReturnValue;value"
			ImmutableSet out = null;
			Sets.SetView in = (Sets.SetView)newWithElement(source());
			out = in.immutableCopy();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;cartesianProduct;(List);;Element of Element of Argument[0];Element of Element of ReturnValue;value"
			Set out = null;
			List in = (List)newWithElement(newWithElement(source()));
			out = Sets.cartesianProduct(in);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;cartesianProduct;(Set[]);;Element of ArrayElement of Argument[0];Element of Element of ReturnValue;value"
			Set out = null;
			Set<? extends B>[] in = (Set<? extends B>[])newWithArrayElement(newWithElement(source()));
			out = Sets.cartesianProduct(in);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;combinations;(Set,int);;Element of Argument[0];Element of Element of ReturnValue;value"
			Set out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.combinations(in, 0);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;difference;(Set,Set);;Element of Argument[0];Element of ReturnValue;value"
			Sets.SetView out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.difference(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;filter;(NavigableSet,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)newWithElement(source());
			out = Sets.filter(in, (Predicate)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;filter;(Set,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			Set out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.filter(in, (Predicate)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;filter;(SortedSet,Predicate);;Element of Argument[0];Element of ReturnValue;value"
			SortedSet out = null;
			SortedSet in = (SortedSet)newWithElement(source());
			out = Sets.filter(in, (Predicate)null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newConcurrentHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			Set out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Sets.newConcurrentHashSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newCopyOnWriteArraySet;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			CopyOnWriteArraySet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Sets.newCopyOnWriteArraySet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			HashSet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Sets.newHashSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newHashSet;(Iterator);;Element of Argument[0];Element of ReturnValue;value"
			HashSet out = null;
			Iterator in = (Iterator)newWithElement(source());
			out = Sets.newHashSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newLinkedHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			LinkedHashSet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Sets.newLinkedHashSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newSetFromMap;(Map);;MapKey of Argument[0];Element of ReturnValue;value"
			Set out = null;
			Map in = (Map)newWithMapKey(source());
			out = Sets.newSetFromMap(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newTreeSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			TreeSet out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = Sets.newTreeSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;powerSet;(Set);;Element of Argument[0];Element of Element of ReturnValue;value"
			Set out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.powerSet(in);
			sink(getElement(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;subSet;(NavigableSet,Range);;Element of Argument[0];Element of ReturnValue;value"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)newWithElement(source());
			out = Sets.subSet(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;symmetricDifference;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value"
			Sets.SetView out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.symmetricDifference(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;symmetricDifference;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value"
			Sets.SetView out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.symmetricDifference(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;synchronizedNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;value"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)newWithElement(source());
			out = Sets.synchronizedNavigableSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;union;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value"
			Sets.SetView out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.union(null, in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;union;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value"
			Sets.SetView out = null;
			Set in = (Set)newWithElement(source());
			out = Sets.union(in, null);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;unmodifiableNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;value"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)newWithElement(source());
			out = Sets.unmodifiableNavigableSet(in);
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table$Cell;true;getValue;();;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			Table.Cell in = (Table.Cell)newWithMapValue(source());
			out = in.getValue();
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			Table in = (Table)newWithMapKey(source());
			out = in.cellSet();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			StandardTable in = (StandardTable)newWithMapKey(source());
			out = in.cellSet();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			ArrayTable in = (ArrayTable)newWithMapKey(source());
			out = in.cellSet();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			Set out = null;
			AbstractTable in = (AbstractTable)newWithMapKey(source());
			out = in.cellSet();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableTable in = (ImmutableTable)newWithMapKey(source());
			out = in.cellSet();
			sink(getMapKey(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.cellSet();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.cellSet();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.cellSet();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			Set out = null;
			AbstractTable in = (AbstractTable)newWithMapValue(source());
			out = in.cellSet();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value"
			ImmutableSet out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.cellSet();
			sink(getMapValue(getElement(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.column(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.column((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.column(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.column((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.column(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.column(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			Map out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			Map out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			Map out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.get(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.get((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.get(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.get((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			HashBasedTable in = (HashBasedTable)newWithMapValue(source());
			out = in.get(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.get(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractTable in = (AbstractTable)newWithMapValue(source());
			out = in.get(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractTable in = (AbstractTable)newWithMapValue(source());
			out = in.get((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			Table out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			Table out = null;
			Object in = (Object)source();
			out.put((Object)null, (Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			StandardTable out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			StandardTable out = null;
			Object in = (Object)source();
			out.put((Object)null, (Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			ImmutableTable out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			ArrayTable out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			AbstractTable out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value"
			AbstractTable out = null;
			Object in = (Object)source();
			out.put((Object)null, (Object)null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapKey of Argument[0];MapKey of Argument[-1];value"
			Table out = null;
			Table in = (Table)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ImmutableTable out = null;
			Table in = (Table)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapKey of Argument[0];MapKey of Argument[-1];value"
			ArrayTable out = null;
			Table in = (Table)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapKey of Argument[0];MapKey of Argument[-1];value"
			AbstractTable out = null;
			Table in = (Table)newWithMapKey(source());
			out.putAll(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value"
			Table out = null;
			Table in = (Table)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ImmutableTable out = null;
			Table in = (Table)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value"
			ArrayTable out = null;
			Table in = (Table)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value"
			AbstractTable out = null;
			Table in = (Table)newWithMapValue(source());
			out.putAll(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.remove(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.remove((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.remove(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.remove((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.remove(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			HashBasedTable in = (HashBasedTable)newWithMapValue(source());
			out = in.remove(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.remove(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractTable in = (AbstractTable)newWithMapValue(source());
			out = in.remove(null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractTable in = (AbstractTable)newWithMapValue(source());
			out = in.remove((Object)null, (Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			SortedMap out = null;
			TreeBasedTable in = (TreeBasedTable)newWithMapValue(source());
			out = in.row(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.row(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.row((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.row(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.row((Object)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.row(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.row(null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			SortedMap out = null;
			TreeBasedTable in = (TreeBasedTable)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			SortedMap out = null;
			StandardRowSortedTable in = (StandardRowSortedTable)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			SortedMap out = null;
			RowSortedTable in = (RowSortedTable)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			Map out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			Map out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			Map out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			ImmutableCollection out = null;
			ImmutableTable in = (ImmutableTable)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			Table in = (Table)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			StandardTable in = (StandardTable)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			ArrayTable in = (ArrayTable)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value"
			Collection out = null;
			AbstractTable in = (AbstractTable)newWithMapValue(source());
			out = in.values();
			sink(getElement(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[2];MapValue of ReturnValue;value"
			Table.Cell out = null;
			Object in = (Object)source();
			out = Tables.immutableCell(null, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapValue of MapValue of Argument[0];MapValue of ReturnValue;value"
			Table out = null;
			Map in = (Map)newWithMapValue(newWithMapValue(source()));
			out = Tables.newCustomTable(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;synchronizedTable;(Table);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Table out = null;
			Table in = (Table)newWithMapKey(source());
			out = Tables.synchronizedTable(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;synchronizedTable;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Table out = null;
			Table in = (Table)newWithMapValue(source());
			out = Tables.synchronizedTable(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transformValues;(Table,Function);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Table out = null;
			Table in = (Table)newWithMapKey(source());
			out = Tables.transformValues(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transpose;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Table out = null;
			Table in = (Table)newWithMapValue(source());
			out = Tables.transpose(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;MapKey of Argument[0];MapKey of ReturnValue;value"
			RowSortedTable out = null;
			RowSortedTable in = (RowSortedTable)newWithMapKey(source());
			out = Tables.unmodifiableRowSortedTable(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;MapValue of Argument[0];MapValue of ReturnValue;value"
			RowSortedTable out = null;
			RowSortedTable in = (RowSortedTable)newWithMapValue(source());
			out = Tables.unmodifiableRowSortedTable(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableTable;(Table);;MapKey of Argument[0];MapKey of ReturnValue;value"
			Table out = null;
			Table in = (Table)newWithMapKey(source());
			out = Tables.unmodifiableTable(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableTable;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value"
			Table out = null;
			Table in = (Table)newWithMapValue(source());
			out = Tables.unmodifiableTable(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;MapKey of Argument[0];MapKey of ReturnValue;value"
			TreeBasedTable out = null;
			TreeBasedTable in = (TreeBasedTable)newWithMapKey(source());
			out = TreeBasedTable.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;MapValue of Argument[0];MapValue of ReturnValue;value"
			TreeBasedTable out = null;
			TreeBasedTable in = (TreeBasedTable)newWithMapValue(source());
			out = TreeBasedTable.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;TreeMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value"
			TreeMultimap out = null;
			Multimap in = (Multimap)newWithMapKey(source());
			out = TreeMultimap.create(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;TreeMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value"
			TreeMultimap out = null;
			Multimap in = (Multimap)newWithMapValue(source());
			out = TreeMultimap.create(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "com.google.common.collect;TreeMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value"
			TreeMultiset out = null;
			Iterable in = (Iterable)newWithElement(source());
			out = TreeMultiset.create(in);
			sink(getElement(out)); // $hasValueFlow
		}

	}

}