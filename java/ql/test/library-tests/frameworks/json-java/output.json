{"#select":{"columns":[
   {"kind":"String"}
  ,{"kind":"String"}]
 ,"tuples":[
   ["org.json.CDL","// Generated automatically from org.json.CDL for testing purposes\n\npackage org.json;\n\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport org.json.JSONTokener;\n\npublic class CDL\n{\n    public CDL(){}\n    public static JSONArray rowToJSONArray(JSONTokener p0){ return null; }\n    public static JSONArray toJSONArray(JSONArray p0, JSONTokener p1){ return null; }\n    public static JSONArray toJSONArray(JSONArray p0, String p1){ return null; }\n    public static JSONArray toJSONArray(JSONTokener p0){ return null; }\n    public static JSONArray toJSONArray(String p0){ return null; }\n    public static JSONObject rowToJSONObject(JSONArray p0, JSONTokener p1){ return null; }\n    public static String rowToString(JSONArray p0){ return null; }\n    public static String toString(JSONArray p0){ return null; }\n    public static String toString(JSONArray p0, JSONArray p1){ return null; }\n}\n"]
  ,["org.json.Cookie","// Generated automatically from org.json.Cookie for testing purposes\n\npackage org.json;\n\nimport org.json.JSONObject;\n\npublic class Cookie\n{\n    public Cookie(){}\n    public static JSONObject toJSONObject(String p0){ return null; }\n    public static String escape(String p0){ return null; }\n    public static String toString(JSONObject p0){ return null; }\n    public static String unescape(String p0){ return null; }\n}\n"]
  ,["org.json.CookieList","// Generated automatically from org.json.CookieList for testing purposes\n\npackage org.json;\n\nimport org.json.JSONObject;\n\npublic class CookieList\n{\n    public CookieList(){}\n    public static JSONObject toJSONObject(String p0){ return null; }\n    public static String toString(JSONObject p0){ return null; }\n}\n"]
  ,["org.json.HTTP","// Generated automatically from org.json.HTTP for testing purposes\n\npackage org.json;\n\nimport org.json.JSONObject;\n\npublic class HTTP\n{\n    public HTTP(){}\n    public static JSONObject toJSONObject(String p0){ return null; }\n    public static String CRLF = null;\n    public static String toString(JSONObject p0){ return null; }\n}\n"]
  ,["org.json.HTTPTokener","// Generated automatically from org.json.HTTPTokener for testing purposes\n\npackage org.json;\n\nimport org.json.JSONTokener;\n\npublic class HTTPTokener extends JSONTokener\n{\n    protected HTTPTokener() {}\n    public HTTPTokener(String p0){}\n    public String nextToken(){ return null; }\n}\n"]
  ,["org.json.JSONArray","// Generated automatically from org.json.JSONArray for testing purposes\n\npackage org.json;\n\nimport java.io.Writer;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport org.json.JSONObject;\nimport org.json.JSONPointer;\nimport org.json.JSONTokener;\n\npublic class JSONArray implements Iterable<Object>\n{\n    public <E extends Enum<E>> E getEnum(Class<E> p0, int p1){ return null; }\n    public <E extends Enum<E>> E optEnum(Class<E> p0, int p1){ return null; }\n    public <E extends Enum<E>> E optEnum(Class<E> p0, int p1, E p2){ return null; }\n    public BigDecimal getBigDecimal(int p0){ return null; }\n    public BigDecimal optBigDecimal(int p0, BigDecimal p1){ return null; }\n    public BigInteger getBigInteger(int p0){ return null; }\n    public BigInteger optBigInteger(int p0, BigInteger p1){ return null; }\n    public Iterator<Object> iterator(){ return null; }\n    public JSONArray getJSONArray(int p0){ return null; }\n    public JSONArray optJSONArray(int p0){ return null; }\n    public JSONArray put(Collection<? extends Object> p0){ return null; }\n    public JSONArray put(Map<? extends Object, ? extends Object> p0){ return null; }\n    public JSONArray put(Object p0){ return null; }\n    public JSONArray put(boolean p0){ return null; }\n    public JSONArray put(double p0){ return null; }\n    public JSONArray put(float p0){ return null; }\n    public JSONArray put(int p0){ return null; }\n    public JSONArray put(int p0, Collection<? extends Object> p1){ return null; }\n    public JSONArray put(int p0, Map<? extends Object, ? extends Object> p1){ return null; }\n    public JSONArray put(int p0, Object p1){ return null; }\n    public JSONArray put(int p0, boolean p1){ return null; }\n    public JSONArray put(int p0, double p1){ return null; }\n    public JSONArray put(int p0, float p1){ return null; }\n    public JSONArray put(int p0, int p1){ return null; }\n    public JSONArray put(int p0, long p1){ return null; }\n    public JSONArray put(long p0){ return null; }\n    public JSONArray putAll(Collection<? extends Object> p0){ return null; }\n    public JSONArray putAll(Iterable<? extends Object> p0){ return null; }\n    public JSONArray putAll(JSONArray p0){ return null; }\n    public JSONArray putAll(Object p0){ return null; }\n    public JSONArray(){}\n    public JSONArray(Collection<? extends Object> p0){}\n    public JSONArray(Iterable<? extends Object> p0){}\n    public JSONArray(JSONArray p0){}\n    public JSONArray(JSONTokener p0){}\n    public JSONArray(Object p0){}\n    public JSONArray(String p0){}\n    public JSONArray(int p0){}\n    public JSONObject getJSONObject(int p0){ return null; }\n    public JSONObject optJSONObject(int p0){ return null; }\n    public JSONObject toJSONObject(JSONArray p0){ return null; }\n    public List<Object> toList(){ return null; }\n    public Number getNumber(int p0){ return null; }\n    public Number optNumber(int p0){ return null; }\n    public Number optNumber(int p0, Number p1){ return null; }\n    public Object get(int p0){ return null; }\n    public Object opt(int p0){ return null; }\n    public Object optQuery(JSONPointer p0){ return null; }\n    public Object optQuery(String p0){ return null; }\n    public Object query(JSONPointer p0){ return null; }\n    public Object query(String p0){ return null; }\n    public Object remove(int p0){ return null; }\n    public String getString(int p0){ return null; }\n    public String join(String p0){ return null; }\n    public String optString(int p0){ return null; }\n    public String optString(int p0, String p1){ return null; }\n    public String toString(){ return null; }\n    public String toString(int p0){ return null; }\n    public Writer write(Writer p0){ return null; }\n    public Writer write(Writer p0, int p1, int p2){ return null; }\n    public boolean getBoolean(int p0){ return false; }\n    public boolean isEmpty(){ return false; }\n    public boolean isNull(int p0){ return false; }\n    public boolean optBoolean(int p0){ return false; }\n    public boolean optBoolean(int p0, boolean p1){ return false; }\n    public boolean similar(Object p0){ return false; }\n    public double getDouble(int p0){ return 0; }\n    public double optDouble(int p0){ return 0; }\n    public double optDouble(int p0, double p1){ return 0; }\n    public float getFloat(int p0){ return 0; }\n    public float optFloat(int p0){ return 0; }\n    public float optFloat(int p0, float p1){ return 0; }\n    public int getInt(int p0){ return 0; }\n    public int length(){ return 0; }\n    public int optInt(int p0){ return 0; }\n    public int optInt(int p0, int p1){ return 0; }\n    public long getLong(int p0){ return 0; }\n    public long optLong(int p0){ return 0; }\n    public long optLong(int p0, long p1){ return 0; }\n    public void clear(){}\n}\n"]
  ,["org.json.JSONException","// Generated automatically from org.json.JSONException for testing purposes\n\npackage org.json;\n\n\npublic class JSONException extends RuntimeException\n{\n    protected JSONException() {}\n    public JSONException(String p0){}\n    public JSONException(String p0, Throwable p1){}\n    public JSONException(Throwable p0){}\n}\n"]
  ,["org.json.JSONML","// Generated automatically from org.json.JSONML for testing purposes\n\npackage org.json;\n\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport org.json.XMLTokener;\n\npublic class JSONML\n{\n    public JSONML(){}\n    public static JSONArray toJSONArray(String p0){ return null; }\n    public static JSONArray toJSONArray(String p0, boolean p1){ return null; }\n    public static JSONArray toJSONArray(XMLTokener p0){ return null; }\n    public static JSONArray toJSONArray(XMLTokener p0, boolean p1){ return null; }\n    public static JSONObject toJSONObject(String p0){ return null; }\n    public static JSONObject toJSONObject(String p0, boolean p1){ return null; }\n    public static JSONObject toJSONObject(XMLTokener p0){ return null; }\n    public static JSONObject toJSONObject(XMLTokener p0, boolean p1){ return null; }\n    public static String toString(JSONArray p0){ return null; }\n    public static String toString(JSONObject p0){ return null; }\n}\n"]
  ,["org.json.JSONObject","// Generated automatically from org.json.JSONObject for testing purposes\n\npackage org.json;\n\nimport java.io.Writer;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.Locale;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.regex.Pattern;\nimport org.json.JSONArray;\nimport org.json.JSONPointer;\nimport org.json.JSONTokener;\n\npublic class JSONObject\n{\n    protected JSONObject(int p0){}\n    protected Set<Map.Entry<String, Object>> entrySet(){ return null; }\n    protected static Number stringToNumber(String p0){ return null; }\n    protected static boolean isDecimalNotation(String p0){ return false; }\n    public <E extends Enum<E>> E getEnum(Class<E> p0, String p1){ return null; }\n    public <E extends Enum<E>> E optEnum(Class<E> p0, String p1){ return null; }\n    public <E extends Enum<E>> E optEnum(Class<E> p0, String p1, E p2){ return null; }\n    public BigDecimal getBigDecimal(String p0){ return null; }\n    public BigDecimal optBigDecimal(String p0, BigDecimal p1){ return null; }\n    public BigInteger getBigInteger(String p0){ return null; }\n    public BigInteger optBigInteger(String p0, BigInteger p1){ return null; }\n    public Iterator<String> keys(){ return null; }\n    public JSONArray getJSONArray(String p0){ return null; }\n    public JSONArray names(){ return null; }\n    public JSONArray optJSONArray(String p0){ return null; }\n    public JSONArray toJSONArray(JSONArray p0){ return null; }\n    public JSONObject accumulate(String p0, Object p1){ return null; }\n    public JSONObject append(String p0, Object p1){ return null; }\n    public JSONObject getJSONObject(String p0){ return null; }\n    public JSONObject increment(String p0){ return null; }\n    public JSONObject optJSONObject(String p0){ return null; }\n    public JSONObject put(String p0, Collection<? extends Object> p1){ return null; }\n    public JSONObject put(String p0, Map<? extends Object, ? extends Object> p1){ return null; }\n    public JSONObject put(String p0, Object p1){ return null; }\n    public JSONObject put(String p0, boolean p1){ return null; }\n    public JSONObject put(String p0, double p1){ return null; }\n    public JSONObject put(String p0, float p1){ return null; }\n    public JSONObject put(String p0, int p1){ return null; }\n    public JSONObject put(String p0, long p1){ return null; }\n    public JSONObject putOnce(String p0, Object p1){ return null; }\n    public JSONObject putOpt(String p0, Object p1){ return null; }\n    public JSONObject(){}\n    public JSONObject(JSONObject p0, String... p1){}\n    public JSONObject(JSONTokener p0){}\n    public JSONObject(Map<? extends Object, ? extends Object> p0){}\n    public JSONObject(Object p0){}\n    public JSONObject(Object p0, String... p1){}\n    public JSONObject(String p0){}\n    public JSONObject(String p0, Locale p1){}\n    public Map<String, Object> toMap(){ return null; }\n    public Number getNumber(String p0){ return null; }\n    public Number optNumber(String p0){ return null; }\n    public Number optNumber(String p0, Number p1){ return null; }\n    public Object get(String p0){ return null; }\n    public Object opt(String p0){ return null; }\n    public Object optQuery(JSONPointer p0){ return null; }\n    public Object optQuery(String p0){ return null; }\n    public Object query(JSONPointer p0){ return null; }\n    public Object query(String p0){ return null; }\n    public Object remove(String p0){ return null; }\n    public Set<String> keySet(){ return null; }\n    public String getString(String p0){ return null; }\n    public String optString(String p0){ return null; }\n    public String optString(String p0, String p1){ return null; }\n    public String toString(){ return null; }\n    public String toString(int p0){ return null; }\n    public Writer write(Writer p0){ return null; }\n    public Writer write(Writer p0, int p1, int p2){ return null; }\n    public boolean getBoolean(String p0){ return false; }\n    public boolean has(String p0){ return false; }\n    public boolean isEmpty(){ return false; }\n    public boolean isNull(String p0){ return false; }\n    public boolean optBoolean(String p0){ return false; }\n    public boolean optBoolean(String p0, boolean p1){ return false; }\n    public boolean similar(Object p0){ return false; }\n    public double getDouble(String p0){ return 0; }\n    public double optDouble(String p0){ return 0; }\n    public double optDouble(String p0, double p1){ return 0; }\n    public float getFloat(String p0){ return 0; }\n    public float optFloat(String p0){ return 0; }\n    public float optFloat(String p0, float p1){ return 0; }\n    public int getInt(String p0){ return 0; }\n    public int length(){ return 0; }\n    public int optInt(String p0){ return 0; }\n    public int optInt(String p0, int p1){ return 0; }\n    public long getLong(String p0){ return 0; }\n    public long optLong(String p0){ return 0; }\n    public long optLong(String p0, long p1){ return 0; }\n    public static Object NULL = null;\n    public static Object stringToValue(String p0){ return null; }\n    public static Object wrap(Object p0){ return null; }\n    public static String doubleToString(double p0){ return null; }\n    public static String numberToString(Number p0){ return null; }\n    public static String quote(String p0){ return null; }\n    public static String valueToString(Object p0){ return null; }\n    public static String[] getNames(JSONObject p0){ return null; }\n    public static String[] getNames(Object p0){ return null; }\n    public static Writer quote(String p0, Writer p1){ return null; }\n    public static void testValidity(Object p0){}\n    public void clear(){}\n    static BigDecimal objectToBigDecimal(Object p0, BigDecimal p1){ return null; }\n    static BigInteger objectToBigInteger(Object p0, BigInteger p1){ return null; }\n    static Pattern NUMBER_PATTERN = null;\n    static Writer writeValue(Writer p0, Object p1, int p2, int p3){ return null; }\n    static boolean isNumberSimilar(Number p0, Number p1){ return false; }\n    static void indent(Writer p0, int p1){}\n}\n"]
  ,["org.json.JSONPointer","// Generated automatically from org.json.JSONPointer for testing purposes\n\npackage org.json;\n\nimport java.util.List;\n\npublic class JSONPointer\n{\n    protected JSONPointer() {}\n    public JSONPointer(List<String> p0){}\n    public JSONPointer(String p0){}\n    public Object queryFrom(Object p0){ return null; }\n    public String toString(){ return null; }\n    public String toURIFragment(){ return null; }\n    public static JSONPointer.Builder builder(){ return null; }\n    static public class Builder\n    {\n        public Builder(){}\n        public JSONPointer build(){ return null; }\n        public JSONPointer.Builder append(String p0){ return null; }\n        public JSONPointer.Builder append(int p0){ return null; }\n    }\n}\n"]
  ,["org.json.JSONString","// Generated automatically from org.json.JSONString for testing purposes\n\npackage org.json;\n\n\npublic interface JSONString\n{\n    String toJSONString();\n}\n"]
  ,["org.json.JSONStringer","// Generated automatically from org.json.JSONStringer for testing purposes\n\npackage org.json;\n\nimport org.json.JSONWriter;\n\npublic class JSONStringer extends JSONWriter\n{\n    public JSONStringer(){}\n    public String toString(){ return null; }\n}\n"]
  ,["org.json.JSONTokener","// Generated automatically from org.json.JSONTokener for testing purposes\n\npackage org.json;\n\nimport java.io.InputStream;\nimport java.io.Reader;\nimport org.json.JSONException;\n\npublic class JSONTokener\n{\n    protected JSONTokener() {}\n    public JSONException syntaxError(String p0){ return null; }\n    public JSONException syntaxError(String p0, Throwable p1){ return null; }\n    public JSONTokener(InputStream p0){}\n    public JSONTokener(Reader p0){}\n    public JSONTokener(String p0){}\n    public Object nextValue(){ return null; }\n    public String next(int p0){ return null; }\n    public String nextString(char p0){ return null; }\n    public String nextTo(String p0){ return null; }\n    public String nextTo(char p0){ return null; }\n    public String toString(){ return null; }\n    public boolean end(){ return false; }\n    public boolean more(){ return false; }\n    public char next(){ return '0'; }\n    public char next(char p0){ return '0'; }\n    public char nextClean(){ return '0'; }\n    public char skipTo(char p0){ return '0'; }\n    public static int dehexchar(char p0){ return 0; }\n    public void back(){}\n}\n"]
  ,["org.json.JSONWriter","// Generated automatically from org.json.JSONWriter for testing purposes\n\npackage org.json;\n\n\npublic class JSONWriter\n{\n    protected JSONWriter() {}\n    protected Appendable writer = null;\n    protected char mode = '0';\n    public JSONWriter array(){ return null; }\n    public JSONWriter endArray(){ return null; }\n    public JSONWriter endObject(){ return null; }\n    public JSONWriter key(String p0){ return null; }\n    public JSONWriter object(){ return null; }\n    public JSONWriter value(Object p0){ return null; }\n    public JSONWriter value(boolean p0){ return null; }\n    public JSONWriter value(double p0){ return null; }\n    public JSONWriter value(long p0){ return null; }\n    public JSONWriter(Appendable p0){}\n    public static String valueToString(Object p0){ return null; }\n}\n"]
  ,["org.json.Property","// Generated automatically from org.json.Property for testing purposes\n\npackage org.json;\n\nimport java.util.Properties;\nimport org.json.JSONObject;\n\npublic class Property\n{\n    public Property(){}\n    public static JSONObject toJSONObject(Properties p0){ return null; }\n    public static Properties toProperties(JSONObject p0){ return null; }\n}\n"]
  ,["org.json.XML","// Generated automatically from org.json.XML for testing purposes\n\npackage org.json;\n\nimport java.io.Reader;\nimport org.json.JSONObject;\nimport org.json.XMLParserConfiguration;\nimport org.json.XMLXsiTypeConverter;\n\npublic class XML\n{\n    public XML(){}\n    public static Character AMP = null;\n    public static Character APOS = null;\n    public static Character BANG = null;\n    public static Character EQ = null;\n    public static Character GT = null;\n    public static Character LT = null;\n    public static Character QUEST = null;\n    public static Character QUOT = null;\n    public static Character SLASH = null;\n    public static JSONObject toJSONObject(Reader p0){ return null; }\n    public static JSONObject toJSONObject(Reader p0, XMLParserConfiguration p1){ return null; }\n    public static JSONObject toJSONObject(Reader p0, boolean p1){ return null; }\n    public static JSONObject toJSONObject(String p0){ return null; }\n    public static JSONObject toJSONObject(String p0, XMLParserConfiguration p1){ return null; }\n    public static JSONObject toJSONObject(String p0, boolean p1){ return null; }\n    public static Object stringToValue(String p0){ return null; }\n    public static Object stringToValue(String p0, XMLXsiTypeConverter<? extends Object> p1){ return null; }\n    public static String NULL_ATTR = null;\n    public static String TYPE_ATTR = null;\n    public static String escape(String p0){ return null; }\n    public static String toString(Object p0){ return null; }\n    public static String toString(Object p0, String p1){ return null; }\n    public static String toString(Object p0, String p1, XMLParserConfiguration p2){ return null; }\n    public static String unescape(String p0){ return null; }\n    public static void noSpace(String p0){}\n}\n"]
  ,["org.json.XMLParserConfiguration","// Generated automatically from org.json.XMLParserConfiguration for testing purposes\n\npackage org.json;\n\nimport java.util.Map;\nimport org.json.XMLXsiTypeConverter;\n\npublic class XMLParserConfiguration\n{\n    protected XMLParserConfiguration clone(){ return null; }\n    public Map<String, XMLXsiTypeConverter<? extends Object>> getXsiTypeMap(){ return null; }\n    public String getcDataTagName(){ return null; }\n    public XMLParserConfiguration withConvertNilAttributeToNull(boolean p0){ return null; }\n    public XMLParserConfiguration withKeepStrings(boolean p0){ return null; }\n    public XMLParserConfiguration withXsiTypeMap(Map<String, XMLXsiTypeConverter<? extends Object>> p0){ return null; }\n    public XMLParserConfiguration withcDataTagName(String p0){ return null; }\n    public XMLParserConfiguration(){}\n    public XMLParserConfiguration(String p0){}\n    public XMLParserConfiguration(boolean p0){}\n    public XMLParserConfiguration(boolean p0, String p1){}\n    public XMLParserConfiguration(boolean p0, String p1, boolean p2){}\n    public boolean isConvertNilAttributeToNull(){ return false; }\n    public boolean isKeepStrings(){ return false; }\n    public static XMLParserConfiguration KEEP_STRINGS = null;\n    public static XMLParserConfiguration ORIGINAL = null;\n}\n"]
  ,["org.json.XMLTokener","// Generated automatically from org.json.XMLTokener for testing purposes\n\npackage org.json;\n\nimport java.io.Reader;\nimport java.util.HashMap;\nimport org.json.JSONTokener;\n\npublic class XMLTokener extends JSONTokener\n{\n    protected XMLTokener() {}\n    public Object nextContent(){ return null; }\n    public Object nextEntity(char p0){ return null; }\n    public Object nextMeta(){ return null; }\n    public Object nextToken(){ return null; }\n    public String nextCDATA(){ return null; }\n    public XMLTokener(Reader p0){}\n    public XMLTokener(String p0){}\n    public static HashMap<String, Character> entity = null;\n    public void skipPast(String p0){}\n    static String unescapeEntity(String p0){ return null; }\n}\n"]
  ,["org.json.XMLXsiTypeConverter","// Generated automatically from org.json.XMLXsiTypeConverter for testing purposes\n\npackage org.json;\n\n\npublic interface XMLXsiTypeConverter<T>\n{\n    T convert(String p0);\n}\n"]]
 }}
