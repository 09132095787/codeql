package generatedtest;

import java.util.Map;
import java.util.ResourceBundle;
import java.util.SortedMap;
import org.apache.commons.collections4.Factory;
import org.apache.commons.collections4.IterableMap;
import org.apache.commons.collections4.IterableSortedMap;
import org.apache.commons.collections4.KeyValue;
import org.apache.commons.collections4.MapUtils;
import org.apache.commons.collections4.MultiMap;
import org.apache.commons.collections4.OrderedMap;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.keyvalue.AbstractKeyValue;
import org.apache.commons.collections4.keyvalue.AbstractMapEntry;
import org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator;
import org.apache.commons.collections4.keyvalue.DefaultKeyValue;
import org.apache.commons.collections4.keyvalue.DefaultMapEntry;
import org.apache.commons.collections4.keyvalue.TiedMapEntry;
import org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry;
import org.apache.commons.collections4.map.MultiValueMap;

//Test case generated by GenerateFlowTestCase.ql
public class Test {

	Object getMapKey(Object container) { return null; }
	Object getMapValue(Object container) { return null; }
	Object newWithArrayElement(Object element) { return null; }
	Object newWithElement(Object element) { return null; }
	Object newWithMapKey(Object element) { return null; }
	Object newWithMapValue(Object element) { return null; }
	Object source() { return null; }
	void sink(Object o) { }

	public void test() {

		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[0];MapKey of Argument[-1];value"
			AbstractKeyValue out = null;
			Object in = (Object)source();
			out = new AbstractKeyValue(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[1];MapValue of Argument[-1];value"
			AbstractKeyValue out = null;
			Object in = (Object)source();
			out = new AbstractKeyValue(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];value"
			DefaultKeyValue out = null;
			Object in = (Object)source();
			out.setKey(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];value"
			AbstractKeyValue out = null;
			Object in = (Object)source();
			out.setKey(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			DefaultKeyValue in = (DefaultKeyValue)newWithMapValue(source());
			out = in.setKey(null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapValue(source());
			out = in.setKey(null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapValue(source());
			out = in.setKey((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			Object in = (Object)source();
			out.setValue(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];value"
			DefaultKeyValue out = null;
			Object in = (Object)source();
			out.setValue(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];value"
			AbstractMapEntry out = null;
			Object in = (Object)source();
			out.setValue(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];value"
			AbstractKeyValue out = null;
			Object in = (Object)source();
			out.setValue(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			UnmodifiableMapEntry in = (UnmodifiableMapEntry)newWithMapValue(source());
			out = in.setValue(null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			DefaultKeyValue in = (DefaultKeyValue)newWithMapValue(source());
			out = in.setValue(null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractMapEntry in = (AbstractMapEntry)newWithMapValue(source());
			out = in.setValue(null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractMapEntry in = (AbstractMapEntry)newWithMapValue(source());
			out = in.setValue((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapValue(source());
			out = in.setValue(null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapValue(source());
			out = in.setValue((Object)null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;toString;;;MapKey of Argument[-1];ReturnValue;taint"
			String out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapKey(source());
			out = in.toString();
			sink(out); // $hasTaintFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractKeyValue;true;toString;;;MapValue of Argument[-1];ReturnValue;taint"
			String out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapValue(source());
			out = in.toString();
			sink(out); // $hasTaintFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[0];MapKey of Argument[-1];value"
			AbstractMapEntry out = null;
			Object in = (Object)source();
			out = new AbstractMapEntry(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[1];MapValue of Argument[-1];value"
			AbstractMapEntry out = null;
			Object in = (Object)source();
			out = new AbstractMapEntry(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];value"
			AbstractMapEntryDecorator out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapKey(source());
			out = new AbstractMapEntryDecorator(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value"
			AbstractMapEntryDecorator out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapValue(source());
			out = new AbstractMapEntryDecorator(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map<>.Entry out = null;
			AbstractMapEntryDecorator in = (AbstractMapEntryDecorator)newWithMapKey(source());
			out = in.getMapEntry();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map<>.Entry out = null;
			AbstractMapEntryDecorator in = (AbstractMapEntryDecorator)newWithMapValue(source());
			out = in.getMapEntry();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;toString;;;MapKey of Argument[-1];ReturnValue;taint"
			String out = null;
			AbstractMapEntryDecorator in = (AbstractMapEntryDecorator)newWithMapKey(source());
			out = in.toString();
			sink(out); // $hasTaintFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;toString;;;MapValue of Argument[-1];ReturnValue;taint"
			String out = null;
			AbstractMapEntryDecorator in = (AbstractMapEntryDecorator)newWithMapValue(source());
			out = in.toString();
			sink(out); // $hasTaintFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			DefaultKeyValue out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapKey(source());
			out = new DefaultKeyValue(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			DefaultKeyValue out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapValue(source());
			out = new DefaultKeyValue(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value"
			DefaultKeyValue out = null;
			KeyValue in = (KeyValue)newWithMapKey(source());
			out = new DefaultKeyValue(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value"
			DefaultKeyValue out = null;
			KeyValue in = (KeyValue)newWithMapValue(source());
			out = new DefaultKeyValue(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			DefaultKeyValue out = null;
			Object in = (Object)source();
			out = new DefaultKeyValue(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			DefaultKeyValue out = null;
			Object in = (Object)source();
			out = new DefaultKeyValue(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;value"
			Map<>.Entry out = null;
			DefaultKeyValue in = (DefaultKeyValue)newWithMapKey(source());
			out = in.toMapEntry();
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;value"
			Map<>.Entry out = null;
			DefaultKeyValue in = (DefaultKeyValue)newWithMapValue(source());
			out = in.toMapEntry();
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			DefaultMapEntry out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapKey(source());
			out = new DefaultMapEntry(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			DefaultMapEntry out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapValue(source());
			out = new DefaultMapEntry(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value"
			DefaultMapEntry out = null;
			KeyValue in = (KeyValue)newWithMapKey(source());
			out = new DefaultMapEntry(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value"
			DefaultMapEntry out = null;
			KeyValue in = (KeyValue)newWithMapValue(source());
			out = new DefaultMapEntry(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			DefaultMapEntry out = null;
			Object in = (Object)source();
			out = new DefaultMapEntry(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			DefaultMapEntry out = null;
			Object in = (Object)source();
			out = new DefaultMapEntry(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;TiedMapEntry;true;TiedMapEntry;;;Argument[1];MapKey of Argument[-1];value"
			TiedMapEntry out = null;
			Object in = (Object)source();
			out = new TiedMapEntry(null, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;TiedMapEntry;true;TiedMapEntry;;;MapValue of Argument[0];MapValue of Argument[-1];value"
			TiedMapEntry out = null;
			Map in = (Map)newWithMapValue(source());
			out = new TiedMapEntry(in, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapKey(source());
			out = new UnmodifiableMapEntry(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			Map<>.Entry in = (Map<>.Entry)newWithMapValue(source());
			out = new UnmodifiableMapEntry(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			KeyValue in = (KeyValue)newWithMapKey(source());
			out = new UnmodifiableMapEntry(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			KeyValue in = (KeyValue)newWithMapValue(source());
			out = new UnmodifiableMapEntry(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			Object in = (Object)source();
			out = new UnmodifiableMapEntry(in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];value"
			UnmodifiableMapEntry out = null;
			Object in = (Object)source();
			out = new UnmodifiableMapEntry(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;value"
			Object out = null;
			TiedMapEntry in = (TiedMapEntry)newWithMapKey(source());
			out = in.getKey();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;value"
			Object out = null;
			KeyValue in = (KeyValue)newWithMapKey(source());
			out = in.getKey();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractMapEntryDecorator in = (AbstractMapEntryDecorator)newWithMapKey(source());
			out = in.getKey();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapKey(source());
			out = in.getKey();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			TiedMapEntry in = (TiedMapEntry)newWithMapValue(source());
			out = in.getValue();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			KeyValue in = (KeyValue)newWithMapValue(source());
			out = in.getValue();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractMapEntryDecorator in = (AbstractMapEntryDecorator)newWithMapValue(source());
			out = in.getValue();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;value"
			Object out = null;
			AbstractKeyValue in = (AbstractKeyValue)newWithMapValue(source());
			out = in.getValue();
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;value"
			Map out = null;
			Map in = (Map)source();
			out = MapUtils.emptyIfNull(in);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.fixedSizeMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.fixedSizeMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.fixedSizeSortedMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.fixedSizeSortedMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getMap;;;Argument[2];ReturnValue;value"
			Map out = null;
			Map in = (Map)source();
			out = MapUtils.getMap(null, null, in);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.getMap(in, null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.getMap(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getObject;;;Argument[2];ReturnValue;value"
			Object out = null;
			Object in = (Object)source();
			out = MapUtils.getObject(null, null, in);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;value"
			Object out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.getObject(in, null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;value"
			Object out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.getObject(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getString;;;Argument[2];ReturnValue;value"
			String out = null;
			String in = (String)source();
			out = MapUtils.getString(null, null, in);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;value"
			String out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.getString(in, null, null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;value"
			String out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.getString(in, null);
			sink(out); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;invertMap;;;MapKey of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.invertMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;invertMap;;;MapValue of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.invertMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;iterableMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.iterableMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;iterableMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.iterableMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;iterableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableSortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.iterableSortedMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;iterableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableSortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.iterableSortedMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.lazyMap(in, (Transformer)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.lazyMap(in, (Factory)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.lazyMap(in, (Transformer)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.lazyMap(in, (Factory)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.lazySortedMap(in, (Transformer)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.lazySortedMap(in, (Factory)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.lazySortedMap(in, (Transformer)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.lazySortedMap(in, (Factory)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			MultiValueMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.multiValueMap(in, (Factory)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			MultiValueMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.multiValueMap(in, (Class)null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			MultiValueMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.multiValueMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			MultiValueMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.multiValueMap(in, (Factory)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			MultiValueMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.multiValueMap(in, (Class)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			MultiValueMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.multiValueMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;orderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			OrderedMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.orderedMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;orderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			OrderedMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.orderedMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;populateMap;(Map,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];value"
			Map out = null;
			Iterable in = (Iterable)newWithElement(source());
			MapUtils.populateMap(out, in, (Transformer)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;populateMap;(MultiMap,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];value"
			MultiMap out = null;
			Iterable in = (Iterable)newWithElement(source());
			MapUtils.populateMap(out, in, (Transformer)null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.predicatedMap(in, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.predicatedMap(in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.predicatedSortedMap(in, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.predicatedSortedMap(in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of Argument[0];value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(source());
			MapUtils.putAll(out, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of ReturnValue;value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(source());
			out = MapUtils.putAll(null, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of Argument[0];value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(source());
			MapUtils.putAll(out, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of ReturnValue;value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(source());
			out = MapUtils.putAll(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of Argument[0];value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithArrayElement(source()));
			MapUtils.putAll(out, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of ReturnValue;value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithArrayElement(source()));
			out = MapUtils.putAll(null, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of Argument[0];value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithArrayElement(source()));
			MapUtils.putAll(out, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of ReturnValue;value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithArrayElement(source()));
			out = MapUtils.putAll(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of Argument[0];value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithMapKey(source()));
			MapUtils.putAll(out, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of ReturnValue;value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithMapKey(source()));
			out = MapUtils.putAll(null, in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of Argument[0];value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithMapValue(source()));
			MapUtils.putAll(out, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of ReturnValue;value"
			Map out = null;
			Object[] in = (Object[])newWithArrayElement(newWithMapValue(source()));
			out = MapUtils.putAll(null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;safeAddToMap;;;Argument[1];MapKey of Argument[0];value"
			Map out = null;
			Object in = (Object)source();
			MapUtils.safeAddToMap(out, in, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;safeAddToMap;;;Argument[2];MapValue of Argument[0];value"
			Map out = null;
			Object in = (Object)source();
			MapUtils.safeAddToMap(out, null, in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;synchronizedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.synchronizedMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;synchronizedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.synchronizedMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;synchronizedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.synchronizedSortedMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;synchronizedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.synchronizedSortedMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;toMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			ResourceBundle in = (ResourceBundle)newWithMapKey(source());
			out = MapUtils.toMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;toMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			ResourceBundle in = (ResourceBundle)newWithMapValue(source());
			out = MapUtils.toMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;transformedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.transformedMap(in, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;transformedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			IterableMap out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.transformedMap(in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;transformedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.transformedSortedMap(in, null, null);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;transformedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.transformedSortedMap(in, null, null);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapKey(source());
			out = MapUtils.unmodifiableMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			Map out = null;
			Map in = (Map)newWithMapValue(source());
			out = MapUtils.unmodifiableMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapKey(source());
			out = MapUtils.unmodifiableSortedMap(in);
			sink(getMapKey(out)); // $hasValueFlow
		}
		{
			// "org.apache.commons.collections4;MapUtils;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value"
			SortedMap out = null;
			SortedMap in = (SortedMap)newWithMapValue(source());
			out = MapUtils.unmodifiableSortedMap(in);
			sink(getMapValue(out)); // $hasValueFlow
		}

	}

}