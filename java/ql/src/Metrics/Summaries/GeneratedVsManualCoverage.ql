/**
 * @id java/summary/generated-vs-manual-coverage
 * @name Metrics of generated versus manual MaD coverage
 * @description Expose metrics for the number of API endpoints covered by generated versus manual MaD models.
 * @kind table
 * @tags summary
 */

import java
import semmle.code.java.dataflow.FlowSummary
import utils.modelgenerator.internal.CaptureModels

/**
 * Returns the number of `DataFlowTargetApi`s with Summary MaD models
 * for a given package and provenance.
 */
bindingset[package]
private int getNumMadModeledApis(string package, string provenance) {
  provenance in ["generated", "manual", "both"] and
  result =
    count(SummarizedCallable sc |
      package = sc.asCallable().getCompilationUnit().getPackage().getName() and
      sc.asCallable() instanceof DataFlowTargetApi and
      (
        // "auto-only"
        sc.isAutoGenerated() and
        provenance = "generated"
        or
        // "manual-only"
        sc.hasProvenance(false) and
        not sc.hasProvenance(true) and
        provenance = "manual"
        or
        // "both"
        sc.hasProvenance(false) and
        sc.hasProvenance(true) and
        provenance = "both"
      )
    )
}

/** Returns the total number of `DataFlowTargetApi`s for a given package. */
private int getNumApis(string package) {
  result =
    strictcount(DataFlowTargetApi dataFlowTargApi |
      package = dataFlowTargApi.getCompilationUnit().getPackage().getName()
    )
}

from
  string package, int generatedOnly, int both, int manualOnly, int non, int all,
  float generatedCoverage, float manualCoverage
where
  // count the number of APIs with generated-only, both, and manual-only MaD models for each package
  generatedOnly = getNumMadModeledApis(package, "generated") and
  both = getNumMadModeledApis(package, "both") and
  manualOnly = getNumMadModeledApis(package, "manual") and
  // count the total number of `DataFlowTargetApi`s for each package
  all = getNumApis(package) and
  non = all - (generatedOnly + both + manualOnly) and
  // Proportion of manual models covered by generated ones
  generatedCoverage = (both.(float) / (both + manualOnly)) and
  // Proportion of generated models covered by manual ones
  manualCoverage = (both.(float) / (both + generatedOnly))
select package, generatedOnly, both, manualOnly, non, all, generatedCoverage, manualCoverage
  order by package
