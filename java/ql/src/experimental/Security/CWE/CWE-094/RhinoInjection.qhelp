<!DOCTYPE qhelp PUBLIC "-//Semmle//qhelp//EN" "qhelp.dtd">
<qhelp>

<overview>
<p>
Rhino is a JavaScript engine written fully in Java and managed by the Mozilla Foundation. 
It serves as an embedded scripting engine inside Java applications which allows 
Java-to-JavaScript interoperability and provides a seamless integration between the two 
languages. If an expression is built using attacker-controlled data, and then evaluated in 
a powerful context, it may allow the attacker to run arbitrary code.
</p>
<p>
Typically an expression is evaluated in the powerful context initialized with 
<code>initStandardObjects</code> that allows an expression of arbitrary Java code to
execute in the JVM.
</p>
</overview>

<recommendation>
<p>
In general, including user input in a Rhino expression should be avoided.
If user input must be included in the expression, it should be then evaluated in a safe
context that doesn't allow arbitrary code invocation.
</p>
</recommendation>

<example>
<p>
The following example shows two ways of using Rhino expression. In the 'BAD' case,
an unsafe context is initialized with <code>initStandardObjects</code>. In the 'GOOD' case,
a safe context is initialized with <code>initSafeStandardObjects</code> or 
<code>setClassShutter</code>.
</p>
<sample src="RhinoInjection.java" />
</example>

<references>
<li>
  Mozilla Rhino:
  <a href="https://github.com/mozilla/rhino">Rhino: JavaScript in Java</a>
</li>
<li>
  Rhino Sandbox:
  <a href="https://github.com/javadelight/delight-rhino-sandbox">A sandbox to execute JavaScript code with Rhino in Java.</a>
</li>
<li>
  GuardRails:
  <a href="https://docs.guardrails.io/docs/en/vulnerabilities/java/insecure_use_of_dangerous_function">Code Injection</a>
</li>
</references>
</qhelp>