test.cpp:
#    3| int f1(int, int)
#    3|   Block 0
#    3|     v3_1(void)       = EnterFunction          : 
#    3|         sign = 
#    3|     m3_2(unknown)    = AliasedDefinition      : 
#    3|         sign = 
#    3|     m3_3(unknown)    = InitializeNonLocal     : 
#    3|         sign = 
#    3|     m3_4(unknown)    = Chi                    : total:m3_2, partial:m3_3
#    3|         sign = 
#    3|     r3_5(glval<int>) = VariableAddress[x]     : 
#    3|         sign = 
#    3|     m3_6(int)        = InitializeParameter[x] : &:r3_5
#    3|         sign = +-0
#    3|     r3_7(glval<int>) = VariableAddress[y]     : 
#    3|         sign = 
#    3|     m3_8(int)        = InitializeParameter[y] : &:r3_7
#    3|         sign = +-0
#    4|     r4_1(glval<int>) = VariableAddress[x]     : 
#    4|         sign = 
#    4|     r4_2(int)        = Load[x]                : &:r4_1, m3_6
#    4|         sign = +-0
#    4|     r4_3(int)        = Constant[0]            : 
#    4|         sign = 0
#    4|     r4_4(bool)       = CompareLT              : r4_2, r4_3
#    4|         sign = 
#    4|     v4_5(void)       = ConditionalBranch      : r4_4
#    4|         sign = 
#-----|   False -> Block 3
#-----|   True -> Block 2

#    3|   Block 1
#    3|     m3_9(unknown)     = Phi                      : from 2:~m5_7, from 4:~m8_7, from 5:~m3_4
#    3|         sign = 
#    3|     m3_10(int)        = Phi                      : from 2:m5_8, from 4:m8_8, from 5:m11_3
#    3|         sign = +-0
#    3|     r3_11(glval<int>) = VariableAddress[#return] : 
#    3|         sign = 
#    3|     v3_12(void)       = ReturnValue              : &:r3_11, m3_10
#    3|         sign = 
#    3|     v3_13(void)       = AliasedUse               : ~m3_9
#    3|         sign = 
#    3|     v3_14(void)       = ExitFunction             : 
#    3|         sign = 

#    5|   Block 2
#    5|     r5_1(glval<int>)     = VariableAddress[#return] : 
#    5|         sign = 
#    5|     r5_2(glval<unknown>) = FunctionAddress[sign]    : 
#    5|         sign = 
#    5|     r5_3(glval<int>)     = VariableAddress[x]       : 
#    5|         sign = 
#    5|     r5_4(int)            = Load[x]                  : &:r5_3, m3_6
#    5|         sign = -
#    5|     r5_5(int)            = Call[sign]               : func:r5_2, 0:r5_4
#    5|         sign = +-0
#    5|     m5_6(unknown)        = ^CallSideEffect          : ~m3_4
#    5|         sign = 
#    5|     m5_7(unknown)        = Chi                      : total:m3_4, partial:m5_6
#    5|         sign = 
#    5|     m5_8(int)            = Store[#return]           : &:r5_1, r5_5
#    5|         sign = +-0
#-----|   Goto -> Block 1

#    7|   Block 3
#    7|     r7_1(glval<int>) = VariableAddress[x] : 
#    7|         sign = 
#    7|     r7_2(int)        = Load[x]            : &:r7_1, m3_6
#    7|         sign = +0
#    7|     r7_3(glval<int>) = VariableAddress[y] : 
#    7|         sign = 
#    7|     r7_4(int)        = Load[y]            : &:r7_3, m3_8
#    7|         sign = +-0
#    7|     r7_5(bool)       = CompareLT          : r7_2, r7_4
#    7|         sign = 
#    7|     v7_6(void)       = ConditionalBranch  : r7_5
#    7|         sign = 
#-----|   False -> Block 5
#-----|   True -> Block 4

#    8|   Block 4
#    8|     r8_1(glval<int>)     = VariableAddress[#return] : 
#    8|         sign = 
#    8|     r8_2(glval<unknown>) = FunctionAddress[sign]    : 
#    8|         sign = 
#    8|     r8_3(glval<int>)     = VariableAddress[y]       : 
#    8|         sign = 
#    8|     r8_4(int)            = Load[y]                  : &:r8_3, m3_8
#    8|         sign = +
#    8|     r8_5(int)            = Call[sign]               : func:r8_2, 0:r8_4
#    8|         sign = +-0
#    8|     m8_6(unknown)        = ^CallSideEffect          : ~m3_4
#    8|         sign = 
#    8|     m8_7(unknown)        = Chi                      : total:m3_4, partial:m8_6
#    8|         sign = 
#    8|     m8_8(int)            = Store[#return]           : &:r8_1, r8_5
#    8|         sign = +-0
#-----|   Goto -> Block 1

#   11|   Block 5
#   11|     r11_1(glval<int>) = VariableAddress[#return] : 
#   11|         sign = 
#   11|     r11_2(int)        = Constant[0]              : 
#   11|         sign = 0
#   11|     m11_3(int)        = Store[#return]           : &:r11_1, r11_2
#   11|         sign = 0
#-----|   Goto -> Block 1

#   14| void u(int)
#   14|   Block 0
#   14|     v14_1(void)                = EnterFunction          : 
#   14|         sign = 
#   14|     m14_2(unknown)             = AliasedDefinition      : 
#   14|         sign = 
#   14|     m14_3(unknown)             = InitializeNonLocal     : 
#   14|         sign = 
#   14|     m14_4(unknown)             = Chi                    : total:m14_2, partial:m14_3
#   14|         sign = 
#   14|     r14_5(glval<int>)          = VariableAddress[x]     : 
#   14|         sign = 
#   14|     m14_6(int)                 = InitializeParameter[x] : &:r14_5
#   14|         sign = +-0
#   15|     r15_1(glval<unsigned int>) = VariableAddress[c]     : 
#   15|         sign = 
#   15|     r15_2(glval<int>)          = VariableAddress[x]     : 
#   15|         sign = 
#   15|     r15_3(int)                 = Load[x]                : &:r15_2, m14_6
#   15|         sign = +-0
#   15|     r15_4(unsigned int)        = Convert                : r15_3
#   15|         sign = +0
#   15|     m15_5(unsigned int)        = Store[c]               : &:r15_1, r15_4
#   15|         sign = +0
#   16|     r16_1(glval<unknown>)      = FunctionAddress[sign]  : 
#   16|         sign = 
#   16|     r16_2(glval<unsigned int>) = VariableAddress[c]     : 
#   16|         sign = 
#   16|     r16_3(unsigned int)        = Load[c]                : &:r16_2, m15_5
#   16|         sign = +0
#   16|     r16_4(unsigned int)        = Call[sign]             : func:r16_1, 0:r16_3
#   16|         sign = +0
#   16|     m16_5(unknown)             = ^CallSideEffect        : ~m14_4
#   16|         sign = 
#   16|     m16_6(unknown)             = Chi                    : total:m14_4, partial:m16_5
#   16|         sign = 
#   17|     v17_1(void)                = NoOp                   : 
#   17|         sign = 
#   14|     v14_7(void)                = ReturnVoid             : 
#   14|         sign = 
#   14|     v14_8(void)                = AliasedUse             : ~m16_6
#   14|         sign = 
#   14|     v14_9(void)                = ExitFunction           : 
#   14|         sign = 

#   19| void constants()
#   19|   Block 0
#   19|     v19_1(void)           = EnterFunction              : 
#   19|         sign = 
#   19|     m19_2(unknown)        = AliasedDefinition          : 
#   19|         sign = 
#   19|     m19_3(unknown)        = InitializeNonLocal         : 
#   19|         sign = 
#   19|     m19_4(unknown)        = Chi                        : total:m19_2, partial:m19_3
#   19|         sign = 
#   20|     r20_1(glval<int>)     = VariableAddress[i_pos]     : 
#   20|         sign = 
#   20|     r20_2(int)            = Constant[1234]             : 
#   20|         sign = +
#   20|     m20_3(int)            = Store[i_pos]               : &:r20_1, r20_2
#   20|         sign = +
#   21|     r21_1(glval<unknown>) = FunctionAddress[sign]      : 
#   21|         sign = 
#   21|     r21_2(glval<int>)     = VariableAddress[i_pos]     : 
#   21|         sign = 
#   21|     r21_3(int)            = Load[i_pos]                : &:r21_2, m20_3
#   21|         sign = +
#   21|     r21_4(int)            = Call[sign]                 : func:r21_1, 0:r21_3
#   21|         sign = +-0
#   21|     m21_5(unknown)        = ^CallSideEffect            : ~m19_4
#   21|         sign = 
#   21|     m21_6(unknown)        = Chi                        : total:m19_4, partial:m21_5
#   21|         sign = 
#   22|     r22_1(glval<int>)     = VariableAddress[i_neg]     : 
#   22|         sign = 
#   22|     r22_2(int)            = Constant[-1234]            : 
#   22|         sign = -
#   22|     m22_3(int)            = Store[i_neg]               : &:r22_1, r22_2
#   22|         sign = -
#   23|     r23_1(glval<unknown>) = FunctionAddress[sign]      : 
#   23|         sign = 
#   23|     r23_2(glval<int>)     = VariableAddress[i_neg]     : 
#   23|         sign = 
#   23|     r23_3(int)            = Load[i_neg]                : &:r23_2, m22_3
#   23|         sign = -
#   23|     r23_4(int)            = Call[sign]                 : func:r23_1, 0:r23_3
#   23|         sign = +-0
#   23|     m23_5(unknown)        = ^CallSideEffect            : ~m21_6
#   23|         sign = 
#   23|     m23_6(unknown)        = Chi                        : total:m21_6, partial:m23_5
#   23|         sign = 
#   24|     r24_1(glval<int>)     = VariableAddress[i_zero]    : 
#   24|         sign = 
#   24|     r24_2(int)            = Constant[0]                : 
#   24|         sign = 0
#   24|     m24_3(int)            = Store[i_zero]              : &:r24_1, r24_2
#   24|         sign = 0
#   25|     r25_1(glval<unknown>) = FunctionAddress[sign]      : 
#   25|         sign = 
#   25|     r25_2(glval<int>)     = VariableAddress[i_zero]    : 
#   25|         sign = 
#   25|     r25_3(int)            = Load[i_zero]               : &:r25_2, m24_3
#   25|         sign = 0
#   25|     r25_4(int)            = Call[sign]                 : func:r25_1, 0:r25_3
#   25|         sign = +-0
#   25|     m25_5(unknown)        = ^CallSideEffect            : ~m23_6
#   25|         sign = 
#   25|     m25_6(unknown)        = Chi                        : total:m23_6, partial:m25_5
#   25|         sign = 
#   26|     r26_1(glval<long>)    = VariableAddress[l_pos]     : 
#   26|         sign = 
#   26|     r26_2(long)           = Constant[1234]             : 
#   26|         sign = +
#   26|     m26_3(long)           = Store[l_pos]               : &:r26_1, r26_2
#   26|         sign = +
#   27|     r27_1(glval<unknown>) = FunctionAddress[sign]      : 
#   27|         sign = 
#   27|     r27_2(glval<long>)    = VariableAddress[l_pos]     : 
#   27|         sign = 
#   27|     r27_3(long)           = Load[l_pos]                : &:r27_2, m26_3
#   27|         sign = +
#   27|     r27_4(long)           = Call[sign]                 : func:r27_1, 0:r27_3
#   27|         sign = +-0
#   27|     m27_5(unknown)        = ^CallSideEffect            : ~m25_6
#   27|         sign = 
#   27|     m27_6(unknown)        = Chi                        : total:m25_6, partial:m27_5
#   27|         sign = 
#   28|     r28_1(glval<long>)    = VariableAddress[l_neg]     : 
#   28|         sign = 
#   28|     r28_2(long)           = Constant[-1234]            : 
#   28|         sign = -
#   28|     m28_3(long)           = Store[l_neg]               : &:r28_1, r28_2
#   28|         sign = -
#   29|     r29_1(glval<unknown>) = FunctionAddress[sign]      : 
#   29|         sign = 
#   29|     r29_2(glval<long>)    = VariableAddress[l_neg]     : 
#   29|         sign = 
#   29|     r29_3(long)           = Load[l_neg]                : &:r29_2, m28_3
#   29|         sign = -
#   29|     r29_4(long)           = Call[sign]                 : func:r29_1, 0:r29_3
#   29|         sign = +-0
#   29|     m29_5(unknown)        = ^CallSideEffect            : ~m27_6
#   29|         sign = 
#   29|     m29_6(unknown)        = Chi                        : total:m27_6, partial:m29_5
#   29|         sign = 
#   30|     r30_1(glval<long>)    = VariableAddress[l_zero]    : 
#   30|         sign = 
#   30|     r30_2(long)           = Constant[0]                : 
#   30|         sign = 0
#   30|     m30_3(long)           = Store[l_zero]              : &:r30_1, r30_2
#   30|         sign = 0
#   31|     r31_1(glval<unknown>) = FunctionAddress[sign]      : 
#   31|         sign = 
#   31|     r31_2(glval<long>)    = VariableAddress[l_zero]    : 
#   31|         sign = 
#   31|     r31_3(long)           = Load[l_zero]               : &:r31_2, m30_3
#   31|         sign = 0
#   31|     r31_4(long)           = Call[sign]                 : func:r31_1, 0:r31_3
#   31|         sign = +-0
#   31|     m31_5(unknown)        = ^CallSideEffect            : ~m29_6
#   31|         sign = 
#   31|     m31_6(unknown)        = Chi                        : total:m29_6, partial:m31_5
#   31|         sign = 
#   32|     r32_1(glval<long>)    = VariableAddress[l_pos_big] : 
#   32|         sign = 
#   32|     r32_2(long)           = Constant[7426928653]       : 
#   32|         sign = +
#   32|     m32_3(long)           = Store[l_pos_big]           : &:r32_1, r32_2
#   32|         sign = +
#   33|     r33_1(glval<unknown>) = FunctionAddress[sign]      : 
#   33|         sign = 
#   33|     r33_2(glval<long>)    = VariableAddress[l_pos_big] : 
#   33|         sign = 
#   33|     r33_3(long)           = Load[l_pos_big]            : &:r33_2, m32_3
#   33|         sign = +
#   33|     r33_4(long)           = Call[sign]                 : func:r33_1, 0:r33_3
#   33|         sign = +-0
#   33|     m33_5(unknown)        = ^CallSideEffect            : ~m31_6
#   33|         sign = 
#   33|     m33_6(unknown)        = Chi                        : total:m31_6, partial:m33_5
#   33|         sign = 
#   34|     r34_1(glval<float>)   = VariableAddress[f_pos]     : 
#   34|         sign = 
#   34|     r34_2(float)          = Constant[1.233999968]      : 
#   34|         sign = +
#   34|     m34_3(float)          = Store[f_pos]               : &:r34_1, r34_2
#   34|         sign = +
#   35|     r35_1(glval<unknown>) = FunctionAddress[sign]      : 
#   35|         sign = 
#   35|     r35_2(glval<float>)   = VariableAddress[f_pos]     : 
#   35|         sign = 
#   35|     r35_3(float)          = Load[f_pos]                : &:r35_2, m34_3
#   35|         sign = +
#   35|     r35_4(float)          = Call[sign]                 : func:r35_1, 0:r35_3
#   35|         sign = +-0
#   35|     m35_5(unknown)        = ^CallSideEffect            : ~m33_6
#   35|         sign = 
#   35|     m35_6(unknown)        = Chi                        : total:m33_6, partial:m35_5
#   35|         sign = 
#   36|     r36_1(glval<float>)   = VariableAddress[f_neg]     : 
#   36|         sign = 
#   36|     r36_2(float)          = Constant[-1.233999968]     : 
#   36|         sign = -
#   36|     m36_3(float)          = Store[f_neg]               : &:r36_1, r36_2
#   36|         sign = -
#   37|     r37_1(glval<unknown>) = FunctionAddress[sign]      : 
#   37|         sign = 
#   37|     r37_2(glval<float>)   = VariableAddress[f_neg]     : 
#   37|         sign = 
#   37|     r37_3(float)          = Load[f_neg]                : &:r37_2, m36_3
#   37|         sign = -
#   37|     r37_4(float)          = Call[sign]                 : func:r37_1, 0:r37_3
#   37|         sign = +-0
#   37|     m37_5(unknown)        = ^CallSideEffect            : ~m35_6
#   37|         sign = 
#   37|     m37_6(unknown)        = Chi                        : total:m35_6, partial:m37_5
#   37|         sign = 
#   38|     r38_1(glval<float>)   = VariableAddress[f_zero]    : 
#   38|         sign = 
#   38|     r38_2(float)          = Constant[0.0]              : 
#   38|         sign = 0
#   38|     m38_3(float)          = Store[f_zero]              : &:r38_1, r38_2
#   38|         sign = 0
#   39|     r39_1(glval<unknown>) = FunctionAddress[sign]      : 
#   39|         sign = 
#   39|     r39_2(glval<float>)   = VariableAddress[f_zero]    : 
#   39|         sign = 
#   39|     r39_3(float)          = Load[f_zero]               : &:r39_2, m38_3
#   39|         sign = 0
#   39|     r39_4(float)          = Call[sign]                 : func:r39_1, 0:r39_3
#   39|         sign = +-0
#   39|     m39_5(unknown)        = ^CallSideEffect            : ~m37_6
#   39|         sign = 
#   39|     m39_6(unknown)        = Chi                        : total:m37_6, partial:m39_5
#   39|         sign = 
#   40|     v40_1(void)           = NoOp                       : 
#   40|         sign = 
#   19|     v19_5(void)           = ReturnVoid                 : 
#   19|         sign = 
#   19|     v19_6(void)           = AliasedUse                 : ~m39_6
#   19|         sign = 
#   19|     v19_7(void)           = ExitFunction               : 
#   19|         sign = 

#   42| void arithmetic(int)
#   42|   Block 0
#   42|     v42_1(void)           = EnterFunction          : 
#   42|         sign = 
#   42|     m42_2(unknown)        = AliasedDefinition      : 
#   42|         sign = 
#   42|     m42_3(unknown)        = InitializeNonLocal     : 
#   42|         sign = 
#   42|     m42_4(unknown)        = Chi                    : total:m42_2, partial:m42_3
#   42|         sign = 
#   42|     r42_5(glval<int>)     = VariableAddress[y]     : 
#   42|         sign = 
#   42|     m42_6(int)            = InitializeParameter[y] : &:r42_5
#   42|         sign = +-0
#   43|     r43_1(glval<int>)     = VariableAddress[x]     : 
#   43|         sign = 
#   43|     r43_2(int)            = Constant[0]            : 
#   43|         sign = 0
#   43|     m43_3(int)            = Store[x]               : &:r43_1, r43_2
#   43|         sign = 0
#   44|     r44_1(glval<unknown>) = FunctionAddress[sign]  : 
#   44|         sign = 
#   44|     r44_2(glval<int>)     = VariableAddress[x]     : 
#   44|         sign = 
#   44|     r44_3(int)            = Load[x]                : &:r44_2, m43_3
#   44|         sign = 0
#   44|     r44_4(int)            = Constant[1]            : 
#   44|         sign = +
#   44|     r44_5(int)            = Add                    : r44_3, r44_4
#   44|         sign = +
#   44|     r44_6(int)            = Call[sign]             : func:r44_1, 0:r44_5
#   44|         sign = +-0
#   44|     m44_7(unknown)        = ^CallSideEffect        : ~m42_4
#   44|         sign = 
#   44|     m44_8(unknown)        = Chi                    : total:m42_4, partial:m44_7
#   44|         sign = 
#   45|     r45_1(int)            = Constant[-1]           : 
#   45|         sign = -
#   45|     r45_2(glval<int>)     = VariableAddress[x]     : 
#   45|         sign = 
#   45|     m45_3(int)            = Store[x]               : &:r45_2, r45_1
#   45|         sign = -
#   46|     r46_1(glval<unknown>) = FunctionAddress[sign]  : 
#   46|         sign = 
#   46|     r46_2(glval<int>)     = VariableAddress[x]     : 
#   46|         sign = 
#   46|     r46_3(int)            = Load[x]                : &:r46_2, m45_3
#   46|         sign = -
#   46|     r46_4(int)            = Call[sign]             : func:r46_1, 0:r46_3
#   46|         sign = +-0
#   46|     m46_5(unknown)        = ^CallSideEffect        : ~m44_8
#   46|         sign = 
#   46|     m46_6(unknown)        = Chi                    : total:m44_8, partial:m46_5
#   46|         sign = 
#   47|     r47_1(glval<unknown>) = FunctionAddress[sign]  : 
#   47|         sign = 
#   47|     r47_2(glval<int>)     = VariableAddress[x]     : 
#   47|         sign = 
#   47|     r47_3(int)            = Load[x]                : &:r47_2, m45_3
#   47|         sign = -
#   47|     r47_4(int)            = Constant[1]            : 
#   47|         sign = +
#   47|     r47_5(int)            = Add                    : r47_3, r47_4
#   47|         sign = +-0
#   47|     r47_6(int)            = Call[sign]             : func:r47_1, 0:r47_5
#   47|         sign = +-0
#   47|     m47_7(unknown)        = ^CallSideEffect        : ~m46_6
#   47|         sign = 
#   47|     m47_8(unknown)        = Chi                    : total:m46_6, partial:m47_7
#   47|         sign = 
#   48|     r48_1(glval<int>)     = VariableAddress[y]     : 
#   48|         sign = 
#   48|     r48_2(int)            = Load[y]                : &:r48_1, m42_6
#   48|         sign = +-0
#   48|     r48_3(int)            = Constant[0]            : 
#   48|         sign = 0
#   48|     r48_4(bool)           = CompareLT              : r48_2, r48_3
#   48|         sign = 
#   48|     v48_5(void)           = ConditionalBranch      : r48_4
#   48|         sign = 
#-----|   False -> Block 2
#-----|   True -> Block 1

#   49|   Block 1
#   49|     r49_1(glval<unknown>) = FunctionAddress[sign] : 
#   49|         sign = 
#   49|     r49_2(glval<int>)     = VariableAddress[y]    : 
#   49|         sign = 
#   49|     r49_3(int)            = Load[y]               : &:r49_2, m42_6
#   49|         sign = -
#   49|     r49_4(int)            = Call[sign]            : func:r49_1, 0:r49_3
#   49|         sign = +-0
#   49|     m49_5(unknown)        = ^CallSideEffect       : ~m47_8
#   49|         sign = 
#   49|     m49_6(unknown)        = Chi                   : total:m47_8, partial:m49_5
#   49|         sign = 
#   50|     r50_1(glval<unknown>) = FunctionAddress[sign] : 
#   50|         sign = 
#   50|     r50_2(glval<int>)     = VariableAddress[y]    : 
#   50|         sign = 
#   50|     r50_3(int)            = Load[y]               : &:r50_2, m42_6
#   50|         sign = -
#   50|     r50_4(int)            = Constant[1]           : 
#   50|         sign = +
#   50|     r50_5(int)            = Add                   : r50_3, r50_4
#   50|         sign = +-0
#   50|     r50_6(int)            = Call[sign]            : func:r50_1, 0:r50_5
#   50|         sign = +-0
#   50|     m50_7(unknown)        = ^CallSideEffect       : ~m49_6
#   50|         sign = 
#   50|     m50_8(unknown)        = Chi                   : total:m49_6, partial:m50_7
#   50|         sign = 
#   51|     r51_1(glval<int>)     = VariableAddress[z]    : 
#   51|         sign = 
#   51|     r51_2(glval<int>)     = VariableAddress[y]    : 
#   51|         sign = 
#   51|     r51_3(int)            = Load[y]               : &:r51_2, m42_6
#   51|         sign = -
#   51|     m51_4(int)            = Store[z]              : &:r51_1, r51_3
#   51|         sign = -
#   52|     r52_1(glval<unknown>) = FunctionAddress[sign] : 
#   52|         sign = 
#   52|     r52_2(glval<int>)     = VariableAddress[z]    : 
#   52|         sign = 
#   52|     r52_3(int)            = Load[z]               : &:r52_2, m51_4
#   52|         sign = -
#   52|     r52_4(int)            = Constant[1]           : 
#   52|         sign = +
#   52|     r52_5(int)            = Add                   : r52_3, r52_4
#   52|         sign = +-0
#   52|     m52_6(int)            = Store[z]              : &:r52_2, r52_5
#   52|         sign = +-0
#   52|     r52_7(int)            = Call[sign]            : func:r52_1, 0:r52_5
#   52|         sign = +-0
#   52|     m52_8(unknown)        = ^CallSideEffect       : ~m50_8
#   52|         sign = 
#   52|     m52_9(unknown)        = Chi                   : total:m50_8, partial:m52_8
#   52|         sign = 
#   53|     r53_1(glval<int>)     = VariableAddress[y]    : 
#   53|         sign = 
#   53|     r53_2(int)            = Load[y]               : &:r53_1, m42_6
#   53|         sign = -
#   53|     r53_3(glval<int>)     = VariableAddress[z]    : 
#   53|         sign = 
#   53|     m53_4(int)            = Store[z]              : &:r53_3, r53_2
#   53|         sign = -
#   54|     r54_1(glval<unknown>) = FunctionAddress[sign] : 
#   54|         sign = 
#   54|     r54_2(glval<int>)     = VariableAddress[z]    : 
#   54|         sign = 
#   54|     r54_3(int)            = Load[z]               : &:r54_2, m53_4
#   54|         sign = -
#   54|     r54_4(int)            = Constant[1]           : 
#   54|         sign = +
#   54|     r54_5(int)            = Add                   : r54_3, r54_4
#   54|         sign = +-0
#   54|     m54_6(int)            = Store[z]              : &:r54_2, r54_5
#   54|         sign = +-0
#   54|     r54_7(int)            = CopyValue             : r54_3
#   54|         sign = -
#   54|     r54_8(int)            = Call[sign]            : func:r54_1, 0:r54_7
#   54|         sign = +-0
#   54|     m54_9(unknown)        = ^CallSideEffect       : ~m52_9
#   54|         sign = 
#   54|     m54_10(unknown)       = Chi                   : total:m52_9, partial:m54_9
#   54|         sign = 
#   55|     r55_1(glval<unknown>) = FunctionAddress[sign] : 
#   55|         sign = 
#   55|     r55_2(glval<int>)     = VariableAddress[z]    : 
#   55|         sign = 
#   55|     r55_3(int)            = Load[z]               : &:r55_2, m54_6
#   55|         sign = +-0
#   55|     r55_4(int)            = Call[sign]            : func:r55_1, 0:r55_3
#   55|         sign = +-0
#   55|     m55_5(unknown)        = ^CallSideEffect       : ~m54_10
#   55|         sign = 
#   55|     m55_6(unknown)        = Chi                   : total:m54_10, partial:m55_5
#   55|         sign = 
#-----|   Goto -> Block 2

#   57|   Block 2
#   57|     m57_1(unknown) = Phi          : from 0:~m47_8, from 1:~m55_6
#   57|         sign = 
#   57|     v57_2(void)    = NoOp         : 
#   57|         sign = 
#   42|     v42_7(void)    = ReturnVoid   : 
#   42|         sign = 
#   42|     v42_8(void)    = AliasedUse   : ~m57_1
#   42|         sign = 
#   42|     v42_9(void)    = ExitFunction : 
#   42|         sign = 
