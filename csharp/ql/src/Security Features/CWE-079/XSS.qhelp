<!DOCTYPE qhelp PUBLIC
  "-//Semmle//qhelp//EN"
  "qhelp.dtd">
<qhelp>


<overview>
<p>Directly writing user input (for example, an HTTP request parameter) to a webpage,
without properly sanitizing the input first, allows for a cross-site scripting vulnerability.</p>

</overview>
<recommendation>

<p>
To guard against cross-site scripting, consider using a library providing suitable encoding
functionality, such as the <code>System.Net.WebUtility</code> class or the AntiXSS library,
to sanitize the untrusted input before writing it to the page.
The references also mention other possible solutions.
</p>

</recommendation>
<example>

<p>
The following example shows the page parameter being written directly to the server error page,
leaving the website vulnerable to cross-site scripting.
</p>
<sample src="XSS.cs" />
<p>
Sanitizing the user-controlled data using <code>WebUtility.HtmlEncode</code> method prevents the vulnerability:
</p>
<sample src="XSSGood.cs" />
<p>
Alternatively, the AntiXSS library can be used to sanitize the user-controlled data:
</p>
<sample src="XSSGood2.cs" />
<p>
Recall that this solution requires the AntiXSS library to be installed, for example by
adding a package reference to the AntiXSS NuGet package to the project file.
</p>

</example>
<references>


<li>
OWASP:
<a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">XSS
(Cross Site Scripting) Prevention Cheat Sheet</a>.
</li>
<li>
Wikipedia: <a href="http://en.wikipedia.org/wiki/Cross-site_scripting">Cross-site scripting</a>.
</li>
<li>
AntiXSS: <a href="https://www.nuget.org/packages/AntiXss">AntiXSS NuGet package</a>.
</li>


</references>
</qhelp>
